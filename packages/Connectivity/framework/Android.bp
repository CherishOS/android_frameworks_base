//
// Copyright (C) 2020 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package {
    // See: http://go/android-license-faq
    // A large-scale-change added 'default_applicable_licenses' to import
    // all of the 'license_kinds' from "frameworks_base_license"
    // to get the below license kinds:
    //   SPDX-license-identifier-Apache-2.0
    default_applicable_licenses: ["frameworks_base_license"],
}

java_library {
    name: "framework-connectivity-protos",
    sdk_version: "module_current",
    min_sdk_version: "30",
    proto: {
        type: "nano",
    },
    srcs: [
        // TODO: consider moving relevant .proto files directly to the module directory
        ":framework-javastream-protos",
    ],
    apex_available: [
        "//apex_available:platform",
        "com.android.tethering",
    ],
    jarjar_rules: "jarjar-rules-proto.txt",
    visibility: [
        "//visibility:private",
    ],
}

filegroup {
    name: "framework-connectivity-internal-sources",
    srcs: [
        "src/**/*.java",
        "src/**/*.aidl",
    ],
    path: "src",
    visibility: [
        "//visibility:private",
    ],
}

filegroup {
    name: "framework-connectivity-aidl-export-sources",
    srcs: [
        "aidl-export/**/*.aidl",
    ],
    path: "aidl-export",
    visibility: [
        "//visibility:private",
    ],
}

// TODO: use a java_library in the bootclasspath instead
filegroup {
    name: "framework-connectivity-sources",
    srcs: [
        ":framework-connectivity-internal-sources",
        ":framework-connectivity-aidl-export-sources",
    ],
    visibility: [
        "//frameworks/base",
        "//packages/modules/Connectivity:__subpackages__",
    ],
}

java_sdk_library {
    name: "framework-connectivity",
    sdk_version: "module_current",
    min_sdk_version: "30",
    defaults: ["framework-module-defaults"],
    installable: true,
    srcs: [
        ":framework-connectivity-sources",
        ":net-utils-framework-common-srcs",
    ],
    aidl: {
        include_dirs: [
            // Include directories for parcelables that are part of the stable API, and need a
            // one-line "parcelable X" .aidl declaration to be used in AIDL interfaces.
            // TODO(b/180293679): remove these dependencies as they should not be necessary once
            // the module builds against API (the parcelable declarations exist in framework.aidl)
            "frameworks/base/core/java", // For framework parcelables
            "frameworks/native/aidl/binder", // For PersistableBundle.aidl
        ],
    },
    impl_only_libs: [
        // TODO (b/183097033) remove once module_current includes core_platform
        "stable.core.platform.api.stubs",
        "framework-tethering.stubs.module_lib",
        "framework-wifi.stubs.module_lib",
        "net-utils-device-common",
    ],
    libs: [
        "unsupportedappusage",
    ],
    static_libs: [
        "framework-connectivity-protos",
    ],
    jarjar_rules: "jarjar-rules.txt",
    permitted_packages: ["android.net"],
    impl_library_visibility: [
        "//packages/modules/Connectivity/Tethering/apex",
        // In preparation for future move
        "//packages/modules/Connectivity/apex",
        "//packages/modules/Connectivity/service",
        "//frameworks/base/packages/Connectivity/service",
        "//frameworks/base",
        "//packages/modules/Connectivity/Tethering/tests/unit",
    ],
    apex_available: [
        "//apex_available:platform",
        "com.android.tethering",
    ],
}

cc_defaults {
    name: "libframework-connectivity-defaults",
    cflags: [
        "-Wall",
        "-Werror",
        "-Wno-unused-parameter",
        // Don't warn about S API usage even with
        // min_sdk 30: the library is only loaded
        // on S+ devices
        "-Wno-unguarded-availability",
        "-Wthread-safety",
    ],
    shared_libs: [
        "liblog",
        "libnativehelper",
    ],
    header_libs: [
        "dnsproxyd_protocol_headers",
    ],
}

cc_library_static {
    name: "libconnectivityframeworkutils",
    defaults: ["libframework-connectivity-defaults"],
    srcs: [
        "jni/android_net_NetworkUtils.cpp",
    ],
    shared_libs: ["libandroid_net"],
    apex_available: [
        "//apex_available:platform",
        "com.android.tethering",
    ],
}

cc_library_shared {
    name: "libframework-connectivity-jni",
    min_sdk_version: "30",
    defaults: ["libframework-connectivity-defaults"],
    srcs: [
        "jni/android_net_NetworkUtils.cpp",
        "jni/onload.cpp",
    ],
    shared_libs: ["libandroid"],
    stl: "libc++_static",
    apex_available: [
        "com.android.tethering",
    ],
}
