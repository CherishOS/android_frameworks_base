/*
 * Copyright (C) 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.service.attestation;

import android.graphics.Rect;
import android.hardware.HardwareBuffer;
import android.os.RemoteCallback;
import android.service.attestation.ImpressionToken;

/**
 * Service used to handle impression attestation requests.
 *
 * @hide
 */
oneway interface IImpressionAttestationService {
    /**
     * Generates the impression token that can be used to validate that the system generated the
     * token.
     *
     * @param salt The salt to use when generating the hmac. This should be unique to the caller so
     *        the token cannot be verified by any other process.
     * @param screenshot The screenshot to generate the hash and add to the token.
     * @param bounds The size and position of the content being attested in the window.
     * @param hashAlgorithm The String for the hashing algorithm to use based on values in
     *        {@link #SERVICE_META_DATA_KEY_AVAILABLE_ALGORITHMS}.
     * @param Callback The callback invoked to send back the impression token.
     */
    void generateImpressionToken(in byte[] salt, in HardwareBuffer screenshot, in Rect bounds,
                                 in String hashAlgorithm, in RemoteCallback callback);

    /**
     * Call to verify that the impressionToken passed in was generated by the system. The result
     * will be sent in the callback as a boolean with the key {@link #EXTRA_VERIFICATION_STATUS}.
     *
     * @param salt The salt value to use when verifying the hmac. This should be the same value that
     *        was passed to {@link generateImpressionToken()} to generate the token.
     * @param impressionToken The token to verify that it was generated by the system.
     * @param callback The callback invoked to send back the verification status.
     */
    void verifyImpressionToken(in byte[] salt, in ImpressionToken impressionToken,
                               in RemoteCallback callback);
}
