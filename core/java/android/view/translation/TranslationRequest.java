/*
 * Copyright (C) 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package android.view.translation;

import android.annotation.NonNull;
import android.annotation.Nullable;
import android.os.Parcelable;
import android.view.autofill.AutofillId;

import com.android.internal.util.DataClass;

/**
 * Wrapper class for data to be translated by {@link android.service.translation.TranslationService}
 */
@DataClass(genToString = true, genBuilder = true)
public final class TranslationRequest implements Parcelable {

    @Nullable
    private final AutofillId mAutofillId;

    @Nullable
    private final CharSequence mTranslationText;

    public TranslationRequest(@Nullable CharSequence text) {
        mAutofillId = null;
        mTranslationText = text;
    }

    private static CharSequence defaultTranslationText() {
        return null;
    }

    private static AutofillId defaultAutofillId() {
        return null;
    }



    // Code below generated by codegen v1.0.22.
    //
    // DO NOT MODIFY!
    // CHECKSTYLE:OFF Generated code
    //
    // To regenerate run:
    // $ codegen $ANDROID_BUILD_TOP/frameworks/base/core/java/android/view/translation/TranslationRequest.java
    //
    // To exclude the generated code from IntelliJ auto-formatting enable (one-time):
    //   Settings > Editor > Code Style > Formatter Control
    //@formatter:off


    @DataClass.Generated.Member
    /* package-private */ TranslationRequest(
            @Nullable AutofillId autofillId,
            @Nullable CharSequence translationText) {
        this.mAutofillId = autofillId;
        this.mTranslationText = translationText;

        // onConstructed(); // You can define this method to get a callback
    }

    @DataClass.Generated.Member
    public @Nullable AutofillId getAutofillId() {
        return mAutofillId;
    }

    @DataClass.Generated.Member
    public @Nullable CharSequence getTranslationText() {
        return mTranslationText;
    }

    @Override
    @DataClass.Generated.Member
    public String toString() {
        // You can override field toString logic by defining methods like:
        // String fieldNameToString() { ... }

        return "TranslationRequest { " +
                "autofillId = " + mAutofillId + ", " +
                "translationText = " + mTranslationText +
        " }";
    }

    @Override
    @DataClass.Generated.Member
    public void writeToParcel(@NonNull android.os.Parcel dest, int flags) {
        // You can override field parcelling by defining methods like:
        // void parcelFieldName(Parcel dest, int flags) { ... }

        byte flg = 0;
        if (mAutofillId != null) flg |= 0x1;
        if (mTranslationText != null) flg |= 0x2;
        dest.writeByte(flg);
        if (mAutofillId != null) dest.writeTypedObject(mAutofillId, flags);
        if (mTranslationText != null) dest.writeCharSequence(mTranslationText);
    }

    @Override
    @DataClass.Generated.Member
    public int describeContents() { return 0; }

    /** @hide */
    @SuppressWarnings({"unchecked", "RedundantCast"})
    @DataClass.Generated.Member
    /* package-private */ TranslationRequest(@NonNull android.os.Parcel in) {
        // You can override field unparcelling by defining methods like:
        // static FieldType unparcelFieldName(Parcel in) { ... }

        byte flg = in.readByte();
        AutofillId autofillId = (flg & 0x1) == 0 ? null : (AutofillId) in.readTypedObject(AutofillId.CREATOR);
        CharSequence translationText = (flg & 0x2) == 0 ? null : (CharSequence) in.readCharSequence();

        this.mAutofillId = autofillId;
        this.mTranslationText = translationText;

        // onConstructed(); // You can define this method to get a callback
    }

    @DataClass.Generated.Member
    public static final @NonNull Parcelable.Creator<TranslationRequest> CREATOR
            = new Parcelable.Creator<TranslationRequest>() {
        @Override
        public TranslationRequest[] newArray(int size) {
            return new TranslationRequest[size];
        }

        @Override
        public TranslationRequest createFromParcel(@NonNull android.os.Parcel in) {
            return new TranslationRequest(in);
        }
    };

    /**
     * A builder for {@link TranslationRequest}
     */
    @SuppressWarnings("WeakerAccess")
    @DataClass.Generated.Member
    public static final class Builder {

        private @Nullable AutofillId mAutofillId;
        private @Nullable CharSequence mTranslationText;

        private long mBuilderFieldsSet = 0L;

        public Builder() {
        }

        @DataClass.Generated.Member
        public @NonNull Builder setAutofillId(@NonNull AutofillId value) {
            checkNotUsed();
            mBuilderFieldsSet |= 0x1;
            mAutofillId = value;
            return this;
        }

        @DataClass.Generated.Member
        public @NonNull Builder setTranslationText(@NonNull CharSequence value) {
            checkNotUsed();
            mBuilderFieldsSet |= 0x2;
            mTranslationText = value;
            return this;
        }

        /** Builds the instance. This builder should not be touched after calling this! */
        public @NonNull TranslationRequest build() {
            checkNotUsed();
            mBuilderFieldsSet |= 0x4; // Mark builder used

            if ((mBuilderFieldsSet & 0x1) == 0) {
                mAutofillId = defaultAutofillId();
            }
            if ((mBuilderFieldsSet & 0x2) == 0) {
                mTranslationText = defaultTranslationText();
            }
            TranslationRequest o = new TranslationRequest(
                    mAutofillId,
                    mTranslationText);
            return o;
        }

        private void checkNotUsed() {
            if ((mBuilderFieldsSet & 0x4) != 0) {
                throw new IllegalStateException(
                        "This Builder should not be reused. Use a new Builder instance instead");
            }
        }
    }

    @DataClass.Generated(
            time = 1610060189421L,
            codegenVersion = "1.0.22",
            sourceFile = "frameworks/base/core/java/android/view/translation/TranslationRequest.java",
            inputSignatures = "private final @android.annotation.Nullable android.view.autofill.AutofillId mAutofillId\nprivate final @android.annotation.Nullable java.lang.CharSequence mTranslationText\nprivate static  java.lang.CharSequence defaultTranslationText()\nprivate static  android.view.autofill.AutofillId defaultAutofillId()\nclass TranslationRequest extends java.lang.Object implements [android.os.Parcelable]\n@com.android.internal.util.DataClass(genToString=true, genBuilder=true)")
    @Deprecated
    private void __metadata() {}


    //@formatter:on
    // End of generated code

}
