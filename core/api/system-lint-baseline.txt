// Baseline format: 1.0
ArrayReturn: android.view.contentcapture.ViewNode#getAutofillOptions():
    Method should return Collection<CharSequence> (or subclass) instead of raw array; was `java.lang.CharSequence[]`


GenericException: android.app.prediction.AppPredictor#finalize():
    Methods must not throw generic exceptions (`java.lang.Throwable`)
GenericException: android.hardware.location.ContextHubClient#finalize():
    Methods must not throw generic exceptions (`java.lang.Throwable`)
GenericException: android.service.autofill.augmented.FillWindow#finalize():
    Methods must not throw generic exceptions (`java.lang.Throwable`)


KotlinKeyword: android.app.Notification#when:
    Avoid field names that are Kotlin hard keywords ("when"); see https://android.github.io/kotlin-guides/interop.html#no-hard-keywords


ListenerLast: android.telephony.satellite.SatelliteManager#stopSatelliteTransmissionUpdates(android.telephony.satellite.SatelliteTransmissionUpdateCallback, java.util.concurrent.Executor, java.util.function.Consumer<java.lang.Integer>) parameter #1:
    Listeners should always be at end of argument list (method `stopSatelliteTransmissionUpdates`)
ListenerLast: android.telephony.satellite.SatelliteManager#stopSatelliteTransmissionUpdates(android.telephony.satellite.SatelliteTransmissionUpdateCallback, java.util.concurrent.Executor, java.util.function.Consumer<java.lang.Integer>) parameter #2:
    Listeners should always be at end of argument list (method `stopSatelliteTransmissionUpdates`)


MissingGetterMatchingBuilder: android.telecom.CallScreeningService.CallResponse.Builder#setShouldScreenCallViaAudioProcessing(boolean):
    android.telecom.CallScreeningService.CallResponse does not declare a `shouldScreenCallViaAudioProcessing()` method matching method android.telecom.CallScreeningService.CallResponse.Builder.setShouldScreenCallViaAudioProcessing(boolean)
MissingGetterMatchingBuilder: android.telephony.mbms.DownloadRequest.Builder#setServiceId(String):
    android.telephony.mbms.DownloadRequest does not declare a `getServiceId()` method matching method android.telephony.mbms.DownloadRequest.Builder.setServiceId(String)


MissingNullability: android.media.soundtrigger.SoundTriggerDetectionService#onUnbind(android.content.Intent) parameter #0:
    Missing nullability on parameter `intent` in method `onUnbind`
MissingNullability: android.media.tv.TvRecordingClient.RecordingCallback#onEvent(String, String, android.os.Bundle) parameter #0:
    Missing nullability on parameter `inputId` in method `onEvent`
MissingNullability: android.media.tv.TvRecordingClient.RecordingCallback#onEvent(String, String, android.os.Bundle) parameter #1:
    Missing nullability on parameter `eventType` in method `onEvent`
MissingNullability: android.media.tv.TvRecordingClient.RecordingCallback#onEvent(String, String, android.os.Bundle) parameter #2:
    Missing nullability on parameter `eventArgs` in method `onEvent`
MissingNullability: android.printservice.recommendation.RecommendationService#attachBaseContext(android.content.Context) parameter #0:
    Missing nullability on parameter `base` in method `attachBaseContext`
MissingNullability: android.provider.ContactsContract.MetadataSync#CONTENT_URI:
    Missing nullability on field `CONTENT_URI` in class `class android.provider.ContactsContract.MetadataSync`
MissingNullability: android.provider.ContactsContract.MetadataSync#METADATA_AUTHORITY_URI:
    Missing nullability on field `METADATA_AUTHORITY_URI` in class `class android.provider.ContactsContract.MetadataSync`
MissingNullability: android.provider.ContactsContract.MetadataSyncState#CONTENT_URI:
    Missing nullability on field `CONTENT_URI` in class `class android.provider.ContactsContract.MetadataSyncState`
MissingNullability: android.provider.SearchIndexablesProvider#attachInfo(android.content.Context, android.content.pm.ProviderInfo) parameter #0:
    Missing nullability on parameter `context` in method `attachInfo`
MissingNullability: android.provider.SearchIndexablesProvider#attachInfo(android.content.Context, android.content.pm.ProviderInfo) parameter #1:
    Missing nullability on parameter `info` in method `attachInfo`
MissingNullability: android.service.autofill.augmented.AugmentedAutofillService#onUnbind(android.content.Intent) parameter #0:
    Missing nullability on parameter `intent` in method `onUnbind`
MissingNullability: android.service.contentcapture.ContentCaptureService#dump(java.io.FileDescriptor, java.io.PrintWriter, String[]) parameter #0:
    Missing nullability on parameter `fd` in method `dump`
MissingNullability: android.service.contentcapture.ContentCaptureService#dump(java.io.FileDescriptor, java.io.PrintWriter, String[]) parameter #1:
    Missing nullability on parameter `pw` in method `dump`
MissingNullability: android.service.contentcapture.ContentCaptureService#dump(java.io.FileDescriptor, java.io.PrintWriter, String[]) parameter #2:
    Missing nullability on parameter `args` in method `dump`
MissingNullability: android.service.notification.NotificationAssistantService#attachBaseContext(android.content.Context) parameter #0:
    Missing nullability on parameter `base` in method `attachBaseContext`
MissingNullability: android.telephony.NetworkService#onUnbind(android.content.Intent) parameter #0:
    Missing nullability on parameter `intent` in method `onUnbind`
MissingNullability: android.telephony.data.DataService#onUnbind(android.content.Intent) parameter #0:
    Missing nullability on parameter `intent` in method `onUnbind`
MissingNullability: android.telephony.mbms.DownloadRequest.Builder#setServiceId(String):
    Missing nullability on method `setServiceId` return
MissingNullability: android.telephony.mbms.DownloadRequest.Builder#setServiceId(String) parameter #0:
    Missing nullability on parameter `serviceId` in method `setServiceId`


ProtectedMember: android.printservice.recommendation.RecommendationService#attachBaseContext(android.content.Context):
    Protected methods not allowed; must be public: method android.printservice.recommendation.RecommendationService.attachBaseContext(android.content.Context)}
ProtectedMember: android.service.contentcapture.ContentCaptureService#dump(java.io.FileDescriptor, java.io.PrintWriter, String[]):
    Protected methods not allowed; must be public: method android.service.contentcapture.ContentCaptureService.dump(java.io.FileDescriptor,java.io.PrintWriter,String[])}
ProtectedMember: android.service.notification.NotificationAssistantService#attachBaseContext(android.content.Context):
    Protected methods not allowed; must be public: method android.service.notification.NotificationAssistantService.attachBaseContext(android.content.Context)}


SamShouldBeLast: android.accounts.AccountManager#addAccount(String, String, String[], android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback<android.os.Bundle>, android.os.Handler):
    SAM-compatible parameters (such as parameter 6, "callback", in android.accounts.AccountManager.addAccount) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.accounts.AccountManager#addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener, android.os.Handler, boolean):
    SAM-compatible parameters (such as parameter 1, "listener", in android.accounts.AccountManager.addOnAccountsUpdatedListener) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.accounts.AccountManager#addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener, android.os.Handler, boolean, String[]):
    SAM-compatible parameters (such as parameter 1, "listener", in android.accounts.AccountManager.addOnAccountsUpdatedListener) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.accounts.AccountManager#confirmCredentials(android.accounts.Account, android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback<android.os.Bundle>, android.os.Handler):
    SAM-compatible parameters (such as parameter 4, "callback", in android.accounts.AccountManager.confirmCredentials) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.accounts.AccountManager#editProperties(String, android.app.Activity, android.accounts.AccountManagerCallback<android.os.Bundle>, android.os.Handler):
    SAM-compatible parameters (such as parameter 3, "callback", in android.accounts.AccountManager.editProperties) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.accounts.AccountManager#finishSession(android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback<android.os.Bundle>, android.os.Handler):
    SAM-compatible parameters (such as parameter 3, "callback", in android.accounts.AccountManager.finishSession) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.accounts.AccountManager#getAccountsByTypeAndFeatures(String, String[], android.accounts.AccountManagerCallback<android.accounts.Account[]>, android.os.Handler):
    SAM-compatible parameters (such as parameter 3, "callback", in android.accounts.AccountManager.getAccountsByTypeAndFeatures) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.accounts.AccountManager#getAuthToken(android.accounts.Account, String, android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback<android.os.Bundle>, android.os.Handler):
    SAM-compatible parameters (such as parameter 5, "callback", in android.accounts.AccountManager.getAuthToken) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.accounts.AccountManager#getAuthToken(android.accounts.Account, String, android.os.Bundle, boolean, android.accounts.AccountManagerCallback<android.os.Bundle>, android.os.Handler):
    SAM-compatible parameters (such as parameter 5, "callback", in android.accounts.AccountManager.getAuthToken) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.accounts.AccountManager#getAuthToken(android.accounts.Account, String, boolean, android.accounts.AccountManagerCallback<android.os.Bundle>, android.os.Handler):
    SAM-compatible parameters (such as parameter 4, "callback", in android.accounts.AccountManager.getAuthToken) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.accounts.AccountManager#getAuthTokenByFeatures(String, String, String[], android.app.Activity, android.os.Bundle, android.os.Bundle, android.accounts.AccountManagerCallback<android.os.Bundle>, android.os.Handler):
    SAM-compatible parameters (such as parameter 7, "callback", in android.accounts.AccountManager.getAuthTokenByFeatures) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.accounts.AccountManager#hasFeatures(android.accounts.Account, String[], android.accounts.AccountManagerCallback<java.lang.Boolean>, android.os.Handler):
    SAM-compatible parameters (such as parameter 3, "callback", in android.accounts.AccountManager.hasFeatures) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.accounts.AccountManager#isCredentialsUpdateSuggested(android.accounts.Account, String, android.accounts.AccountManagerCallback<java.lang.Boolean>, android.os.Handler):
    SAM-compatible parameters (such as parameter 3, "callback", in android.accounts.AccountManager.isCredentialsUpdateSuggested) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.accounts.AccountManager#removeAccount(android.accounts.Account, android.accounts.AccountManagerCallback<java.lang.Boolean>, android.os.Handler):
    SAM-compatible parameters (such as parameter 2, "callback", in android.accounts.AccountManager.removeAccount) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.accounts.AccountManager#removeAccount(android.accounts.Account, android.app.Activity, android.accounts.AccountManagerCallback<android.os.Bundle>, android.os.Handler):
    SAM-compatible parameters (such as parameter 3, "callback", in android.accounts.AccountManager.removeAccount) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.accounts.AccountManager#renameAccount(android.accounts.Account, String, android.accounts.AccountManagerCallback<android.accounts.Account>, android.os.Handler):
    SAM-compatible parameters (such as parameter 3, "callback", in android.accounts.AccountManager.renameAccount) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.accounts.AccountManager#startAddAccountSession(String, String, String[], android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback<android.os.Bundle>, android.os.Handler):
    SAM-compatible parameters (such as parameter 6, "callback", in android.accounts.AccountManager.startAddAccountSession) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.accounts.AccountManager#startUpdateCredentialsSession(android.accounts.Account, String, android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback<android.os.Bundle>, android.os.Handler):
    SAM-compatible parameters (such as parameter 5, "callback", in android.accounts.AccountManager.startUpdateCredentialsSession) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.accounts.AccountManager#updateCredentials(android.accounts.Account, String, android.os.Bundle, android.app.Activity, android.accounts.AccountManagerCallback<android.os.Bundle>, android.os.Handler):
    SAM-compatible parameters (such as parameter 5, "callback", in android.accounts.AccountManager.updateCredentials) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.app.AlarmManager#set(int, long, String, android.app.AlarmManager.OnAlarmListener, android.os.Handler):
    SAM-compatible parameters (such as parameter 4, "listener", in android.app.AlarmManager.set) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.app.AlarmManager#setExact(int, long, String, android.app.AlarmManager.OnAlarmListener, android.os.Handler):
    SAM-compatible parameters (such as parameter 4, "listener", in android.app.AlarmManager.setExact) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.app.AlarmManager#setWindow(int, long, long, String, android.app.AlarmManager.OnAlarmListener, android.os.Handler):
    SAM-compatible parameters (such as parameter 5, "listener", in android.app.AlarmManager.setWindow) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.app.WallpaperInfo#dump(android.util.Printer, String):
    SAM-compatible parameters (such as parameter 1, "pw", in android.app.WallpaperInfo.dump) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.app.WallpaperManager#addOnColorsChangedListener(android.app.WallpaperManager.OnColorsChangedListener, android.os.Handler):
    SAM-compatible parameters (such as parameter 1, "listener", in android.app.WallpaperManager.addOnColorsChangedListener) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.content.IntentFilter#dump(android.util.Printer, String):
    SAM-compatible parameters (such as parameter 1, "du", in android.content.IntentFilter.dump) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.content.pm.ApplicationInfo#dump(android.util.Printer, String):
    SAM-compatible parameters (such as parameter 1, "pw", in android.content.pm.ApplicationInfo.dump) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.content.pm.PackageItemInfo#dumpBack(android.util.Printer, String):
    SAM-compatible parameters (such as parameter 1, "pw", in android.content.pm.PackageItemInfo.dumpBack) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.content.pm.PackageItemInfo#dumpFront(android.util.Printer, String):
    SAM-compatible parameters (such as parameter 1, "pw", in android.content.pm.PackageItemInfo.dumpFront) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.content.pm.ResolveInfo#dump(android.util.Printer, String):
    SAM-compatible parameters (such as parameter 1, "pw", in android.content.pm.ResolveInfo.dump) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.location.Location#dump(android.util.Printer, String):
    SAM-compatible parameters (such as parameter 1, "pw", in android.location.Location.dump) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.media.AudioFocusRequest.Builder#setOnAudioFocusChangeListener(android.media.AudioManager.OnAudioFocusChangeListener, android.os.Handler):
    SAM-compatible parameters (such as parameter 1, "listener", in android.media.AudioFocusRequest.Builder.setOnAudioFocusChangeListener) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.media.AudioManager#requestAudioFocus(android.media.AudioManager.OnAudioFocusChangeListener, int, int):
    SAM-compatible parameters (such as parameter 1, "l", in android.media.AudioManager.requestAudioFocus) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.media.AudioRecord#addOnRoutingChangedListener(android.media.AudioRecord.OnRoutingChangedListener, android.os.Handler):
    SAM-compatible parameters (such as parameter 1, "listener", in android.media.AudioRecord.addOnRoutingChangedListener) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.media.AudioRecord#addOnRoutingChangedListener(android.media.AudioRouting.OnRoutingChangedListener, android.os.Handler):
    SAM-compatible parameters (such as parameter 1, "listener", in android.media.AudioRecord.addOnRoutingChangedListener) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.media.AudioRouting#addOnRoutingChangedListener(android.media.AudioRouting.OnRoutingChangedListener, android.os.Handler):
    SAM-compatible parameters (such as parameter 1, "listener", in android.media.AudioRouting.addOnRoutingChangedListener) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.media.AudioTrack#addOnRoutingChangedListener(android.media.AudioRouting.OnRoutingChangedListener, android.os.Handler):
    SAM-compatible parameters (such as parameter 1, "listener", in android.media.AudioTrack.addOnRoutingChangedListener) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.media.AudioTrack#addOnRoutingChangedListener(android.media.AudioTrack.OnRoutingChangedListener, android.os.Handler):
    SAM-compatible parameters (such as parameter 1, "listener", in android.media.AudioTrack.addOnRoutingChangedListener) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.media.MediaCodec#setOnFrameRenderedListener(android.media.MediaCodec.OnFrameRenderedListener, android.os.Handler):
    SAM-compatible parameters (such as parameter 1, "listener", in android.media.MediaCodec.setOnFrameRenderedListener) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.media.MediaPlayer#addOnRoutingChangedListener(android.media.AudioRouting.OnRoutingChangedListener, android.os.Handler):
    SAM-compatible parameters (such as parameter 1, "listener", in android.media.MediaPlayer.addOnRoutingChangedListener) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.media.MediaPlayer#setOnDrmInfoListener(android.media.MediaPlayer.OnDrmInfoListener, android.os.Handler):
    SAM-compatible parameters (such as parameter 1, "listener", in android.media.MediaPlayer.setOnDrmInfoListener) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.media.MediaPlayer#setOnDrmPreparedListener(android.media.MediaPlayer.OnDrmPreparedListener, android.os.Handler):
    SAM-compatible parameters (such as parameter 1, "listener", in android.media.MediaPlayer.setOnDrmPreparedListener) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.media.MediaPlayer#setOnMediaTimeDiscontinuityListener(android.media.MediaPlayer.OnMediaTimeDiscontinuityListener, android.os.Handler):
    SAM-compatible parameters (such as parameter 1, "listener", in android.media.MediaPlayer.setOnMediaTimeDiscontinuityListener) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.media.MediaPlayer#setOnSubtitleDataListener(android.media.MediaPlayer.OnSubtitleDataListener, android.os.Handler):
    SAM-compatible parameters (such as parameter 1, "listener", in android.media.MediaPlayer.setOnSubtitleDataListener) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.media.MediaRecorder#addOnRoutingChangedListener(android.media.AudioRouting.OnRoutingChangedListener, android.os.Handler):
    SAM-compatible parameters (such as parameter 1, "listener", in android.media.MediaRecorder.addOnRoutingChangedListener) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.media.session.MediaSessionManager#addOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener, android.content.ComponentName):
    SAM-compatible parameters (such as parameter 1, "sessionListener", in android.media.session.MediaSessionManager.addOnActiveSessionsChangedListener) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.media.session.MediaSessionManager#addOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener, android.content.ComponentName, android.os.Handler):
    SAM-compatible parameters (such as parameter 1, "sessionListener", in android.media.session.MediaSessionManager.addOnActiveSessionsChangedListener) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.media.session.MediaSessionManager#addOnSession2TokensChangedListener(android.media.session.MediaSessionManager.OnSession2TokensChangedListener, android.os.Handler):
    SAM-compatible parameters (such as parameter 1, "listener", in android.media.session.MediaSessionManager.addOnSession2TokensChangedListener) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.nfc.NfcAdapter#enableReaderMode(android.app.Activity, android.nfc.NfcAdapter.ReaderCallback, int, android.os.Bundle):
    SAM-compatible parameters (such as parameter 2, "callback", in android.nfc.NfcAdapter.enableReaderMode) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.nfc.NfcAdapter#ignore(android.nfc.Tag, int, android.nfc.NfcAdapter.OnTagRemovedListener, android.os.Handler):
    SAM-compatible parameters (such as parameter 3, "tagRemovedListener", in android.nfc.NfcAdapter.ignore) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.nfc.NfcAdapter#setBeamPushUrisCallback(android.nfc.NfcAdapter.CreateBeamUrisCallback, android.app.Activity):
    SAM-compatible parameters (such as parameter 1, "callback", in android.nfc.NfcAdapter.setBeamPushUrisCallback) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.nfc.NfcAdapter#setNdefPushMessageCallback(android.nfc.NfcAdapter.CreateNdefMessageCallback, android.app.Activity, android.app.Activity...):
    SAM-compatible parameters (such as parameter 1, "callback", in android.nfc.NfcAdapter.setNdefPushMessageCallback) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.nfc.NfcAdapter#setOnNdefPushCompleteCallback(android.nfc.NfcAdapter.OnNdefPushCompleteCallback, android.app.Activity, android.app.Activity...):
    SAM-compatible parameters (such as parameter 1, "callback", in android.nfc.NfcAdapter.setOnNdefPushCompleteCallback) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.os.Binder#attachInterface(android.os.IInterface, String):
    SAM-compatible parameters (such as parameter 1, "owner", in android.os.Binder.attachInterface) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.os.Binder#linkToDeath(android.os.IBinder.DeathRecipient, int):
    SAM-compatible parameters (such as parameter 1, "recipient", in android.os.Binder.linkToDeath) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.os.Binder#unlinkToDeath(android.os.IBinder.DeathRecipient, int):
    SAM-compatible parameters (such as parameter 1, "recipient", in android.os.Binder.unlinkToDeath) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.os.Handler#dump(android.util.Printer, String):
    SAM-compatible parameters (such as parameter 1, "pw", in android.os.Handler.dump) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.os.Handler#postAtTime(Runnable, Object, long):
    SAM-compatible parameters (such as parameter 1, "r", in android.os.Handler.postAtTime) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.os.Handler#postAtTime(Runnable, long):
    SAM-compatible parameters (such as parameter 1, "r", in android.os.Handler.postAtTime) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.os.Handler#postDelayed(Runnable, Object, long):
    SAM-compatible parameters (such as parameter 1, "r", in android.os.Handler.postDelayed) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.os.Handler#postDelayed(Runnable, long):
    SAM-compatible parameters (such as parameter 1, "r", in android.os.Handler.postDelayed) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.os.Handler#removeCallbacks(Runnable, Object):
    SAM-compatible parameters (such as parameter 1, "r", in android.os.Handler.removeCallbacks) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.os.IBinder#linkToDeath(android.os.IBinder.DeathRecipient, int):
    SAM-compatible parameters (such as parameter 1, "recipient", in android.os.IBinder.linkToDeath) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.os.IBinder#unlinkToDeath(android.os.IBinder.DeathRecipient, int):
    SAM-compatible parameters (such as parameter 1, "recipient", in android.os.IBinder.unlinkToDeath) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.os.RecoverySystem#verifyPackage(java.io.File, android.os.RecoverySystem.ProgressListener, java.io.File):
    SAM-compatible parameters (such as parameter 2, "listener", in android.os.RecoverySystem.verifyPackage) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.security.KeyChain#choosePrivateKeyAlias(android.app.Activity, android.security.KeyChainAliasCallback, String[], java.security.Principal[], String, int, String):
    SAM-compatible parameters (such as parameter 2, "response", in android.security.KeyChain.choosePrivateKeyAlias) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.security.KeyChain#choosePrivateKeyAlias(android.app.Activity, android.security.KeyChainAliasCallback, String[], java.security.Principal[], android.net.Uri, String):
    SAM-compatible parameters (such as parameter 2, "response", in android.security.KeyChain.choosePrivateKeyAlias) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.telephony.satellite.SatelliteManager#startSatelliteTransmissionUpdates(java.util.concurrent.Executor, java.util.function.Consumer<java.lang.Integer>, android.telephony.satellite.SatelliteTransmissionUpdateCallback):
    SAM-compatible parameters (such as parameter 2, "resultListener", in android.telephony.satellite.SatelliteManager.startSatelliteTransmissionUpdates) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.view.View#postDelayed(Runnable, long):
    SAM-compatible parameters (such as parameter 1, "action", in android.view.View.postDelayed) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.view.View#postOnAnimationDelayed(Runnable, long):
    SAM-compatible parameters (such as parameter 1, "action", in android.view.View.postOnAnimationDelayed) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.view.View#scheduleDrawable(android.graphics.drawable.Drawable, Runnable, long):
    SAM-compatible parameters (such as parameter 2, "what", in android.view.View.scheduleDrawable) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.view.Window#addOnFrameMetricsAvailableListener(android.view.Window.OnFrameMetricsAvailableListener, android.os.Handler):
    SAM-compatible parameters (such as parameter 1, "listener", in android.view.Window.addOnFrameMetricsAvailableListener) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.view.accessibility.AccessibilityManager#addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener, android.os.Handler):
    SAM-compatible parameters (such as parameter 1, "listener", in android.view.accessibility.AccessibilityManager.addAccessibilityStateChangeListener) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.view.accessibility.AccessibilityManager#addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener, android.os.Handler):
    SAM-compatible parameters (such as parameter 1, "listener", in android.view.accessibility.AccessibilityManager.addTouchExplorationStateChangeListener) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions
SamShouldBeLast: android.webkit.WebChromeClient#onShowFileChooser(android.webkit.WebView, android.webkit.ValueCallback<android.net.Uri[]>, android.webkit.WebChromeClient.FileChooserParams):
    SAM-compatible parameters (such as parameter 2, "filePathCallback", in android.webkit.WebChromeClient.onShowFileChooser) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions


UnflaggedApi: android.Manifest.permission#ACCESS_AMBIENT_CONTEXT_EVENT:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ACCESS_AMBIENT_CONTEXT_EVENT
UnflaggedApi: android.Manifest.permission#ACCESS_AMBIENT_LIGHT_STATS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ACCESS_AMBIENT_LIGHT_STATS
UnflaggedApi: android.Manifest.permission#ACCESS_BROADCAST_RADIO:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ACCESS_BROADCAST_RADIO
UnflaggedApi: android.Manifest.permission#ACCESS_BROADCAST_RESPONSE_STATS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ACCESS_BROADCAST_RESPONSE_STATS
UnflaggedApi: android.Manifest.permission#ACCESS_CACHE_FILESYSTEM:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ACCESS_CACHE_FILESYSTEM
UnflaggedApi: android.Manifest.permission#ACCESS_CONTEXT_HUB:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ACCESS_CONTEXT_HUB
UnflaggedApi: android.Manifest.permission#ACCESS_DRM_CERTIFICATES:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ACCESS_DRM_CERTIFICATES
UnflaggedApi: android.Manifest.permission#ACCESS_FPS_COUNTER:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ACCESS_FPS_COUNTER
UnflaggedApi: android.Manifest.permission#ACCESS_INSTANT_APPS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ACCESS_INSTANT_APPS
UnflaggedApi: android.Manifest.permission#ACCESS_LOCUS_ID_USAGE_STATS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ACCESS_LOCUS_ID_USAGE_STATS
UnflaggedApi: android.Manifest.permission#ACCESS_MOCK_LOCATION:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ACCESS_MOCK_LOCATION
UnflaggedApi: android.Manifest.permission#ACCESS_MTP:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ACCESS_MTP
UnflaggedApi: android.Manifest.permission#ACCESS_NETWORK_CONDITIONS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ACCESS_NETWORK_CONDITIONS
UnflaggedApi: android.Manifest.permission#ACCESS_NOTIFICATIONS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ACCESS_NOTIFICATIONS
UnflaggedApi: android.Manifest.permission#ACCESS_PDB_STATE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ACCESS_PDB_STATE
UnflaggedApi: android.Manifest.permission#ACCESS_RCS_USER_CAPABILITY_EXCHANGE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ACCESS_RCS_USER_CAPABILITY_EXCHANGE
UnflaggedApi: android.Manifest.permission#ACCESS_SHARED_LIBRARIES:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ACCESS_SHARED_LIBRARIES
UnflaggedApi: android.Manifest.permission#ACCESS_SHORTCUTS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ACCESS_SHORTCUTS
UnflaggedApi: android.Manifest.permission#ACCESS_SMARTSPACE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ACCESS_SMARTSPACE
UnflaggedApi: android.Manifest.permission#ACCESS_SURFACE_FLINGER:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ACCESS_SURFACE_FLINGER
UnflaggedApi: android.Manifest.permission#ACCESS_TUNED_INFO:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ACCESS_TUNED_INFO
UnflaggedApi: android.Manifest.permission#ACCESS_TV_DESCRAMBLER:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ACCESS_TV_DESCRAMBLER
UnflaggedApi: android.Manifest.permission#ACCESS_TV_SHARED_FILTER:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ACCESS_TV_SHARED_FILTER
UnflaggedApi: android.Manifest.permission#ACCESS_TV_TUNER:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ACCESS_TV_TUNER
UnflaggedApi: android.Manifest.permission#ACCESS_ULTRASOUND:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ACCESS_ULTRASOUND
UnflaggedApi: android.Manifest.permission#ACCESS_VIBRATOR_STATE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ACCESS_VIBRATOR_STATE
UnflaggedApi: android.Manifest.permission#ACTIVITY_EMBEDDING:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ACTIVITY_EMBEDDING
UnflaggedApi: android.Manifest.permission#ADD_ALWAYS_UNLOCKED_DISPLAY:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ADD_ALWAYS_UNLOCKED_DISPLAY
UnflaggedApi: android.Manifest.permission#ADD_TRUSTED_DISPLAY:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ADD_TRUSTED_DISPLAY
UnflaggedApi: android.Manifest.permission#ADJUST_RUNTIME_PERMISSIONS_POLICY:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ADJUST_RUNTIME_PERMISSIONS_POLICY
UnflaggedApi: android.Manifest.permission#ALLOCATE_AGGRESSIVE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ALLOCATE_AGGRESSIVE
UnflaggedApi: android.Manifest.permission#ALLOW_ANY_CODEC_FOR_PLAYBACK:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ALLOW_ANY_CODEC_FOR_PLAYBACK
UnflaggedApi: android.Manifest.permission#ALLOW_PLACE_IN_MULTI_PANE_SETTINGS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ALLOW_PLACE_IN_MULTI_PANE_SETTINGS
UnflaggedApi: android.Manifest.permission#ALLOW_SLIPPERY_TOUCHES:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ALLOW_SLIPPERY_TOUCHES
UnflaggedApi: android.Manifest.permission#ALWAYS_UPDATE_WALLPAPER:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ALWAYS_UPDATE_WALLPAPER
UnflaggedApi: android.Manifest.permission#AMBIENT_WALLPAPER:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.AMBIENT_WALLPAPER
UnflaggedApi: android.Manifest.permission#APPROVE_INCIDENT_REPORTS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.APPROVE_INCIDENT_REPORTS
UnflaggedApi: android.Manifest.permission#ASSOCIATE_COMPANION_DEVICES:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ASSOCIATE_COMPANION_DEVICES
UnflaggedApi: android.Manifest.permission#BACKGROUND_CAMERA:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BACKGROUND_CAMERA
UnflaggedApi: android.Manifest.permission#BACKUP:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BACKUP
UnflaggedApi: android.Manifest.permission#BATTERY_PREDICTION:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BATTERY_PREDICTION
UnflaggedApi: android.Manifest.permission#BIND_AMBIENT_CONTEXT_DETECTION_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_AMBIENT_CONTEXT_DETECTION_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_ATTENTION_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_ATTENTION_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_AUGMENTED_AUTOFILL_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_AUGMENTED_AUTOFILL_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_CALL_DIAGNOSTIC_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_CALL_DIAGNOSTIC_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_CALL_STREAMING_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_CALL_STREAMING_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_CELL_BROADCAST_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_CELL_BROADCAST_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_CONTENT_CAPTURE_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_CONTENT_CAPTURE_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_CONTENT_SUGGESTIONS_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_CONTENT_SUGGESTIONS_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_DIRECTORY_SEARCH:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_DIRECTORY_SEARCH
UnflaggedApi: android.Manifest.permission#BIND_DISPLAY_HASHING_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_DISPLAY_HASHING_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_DOMAIN_VERIFICATION_AGENT:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_DOMAIN_VERIFICATION_AGENT
UnflaggedApi: android.Manifest.permission#BIND_EUICC_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_EUICC_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_EXTERNAL_STORAGE_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_EXTERNAL_STORAGE_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_FIELD_CLASSIFICATION_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_FIELD_CLASSIFICATION_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_GBA_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_GBA_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_HOTWORD_DETECTION_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_HOTWORD_DETECTION_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_IMS_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_IMS_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_KEYGUARD_APPWIDGET:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_KEYGUARD_APPWIDGET
UnflaggedApi: android.Manifest.permission#BIND_MUSIC_RECOGNITION_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_MUSIC_RECOGNITION_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_NETWORK_RECOMMENDATION_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_NETWORK_RECOMMENDATION_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_NOTIFICATION_ASSISTANT_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_NOTIFICATION_ASSISTANT_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_PHONE_ACCOUNT_SUGGESTION_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_PHONE_ACCOUNT_SUGGESTION_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_PRINT_RECOMMENDATION_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_PRINT_RECOMMENDATION_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_REMOTE_LOCKSCREEN_VALIDATION_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_REMOTE_LOCKSCREEN_VALIDATION_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_RESOLVER_RANKER_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_RESOLVER_RANKER_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_RESUME_ON_REBOOT_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_RESUME_ON_REBOOT_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_ROTATION_RESOLVER_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_ROTATION_RESOLVER_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_RUNTIME_PERMISSION_PRESENTER_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_RUNTIME_PERMISSION_PRESENTER_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_SATELLITE_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_SATELLITE_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_SETTINGS_SUGGESTIONS_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_SETTINGS_SUGGESTIONS_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_SOUND_TRIGGER_DETECTION_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_SOUND_TRIGGER_DETECTION_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_TELEPHONY_DATA_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_TELEPHONY_DATA_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_TELEPHONY_NETWORK_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_TELEPHONY_NETWORK_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_TEXTCLASSIFIER_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_TEXTCLASSIFIER_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_TIME_ZONE_PROVIDER_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_TIME_ZONE_PROVIDER_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_TRACE_REPORT_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_TRACE_REPORT_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_TRANSLATION_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_TRANSLATION_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_TRUST_AGENT:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_TRUST_AGENT
UnflaggedApi: android.Manifest.permission#BIND_TV_REMOTE_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_TV_REMOTE_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_VISUAL_QUERY_DETECTION_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_VISUAL_QUERY_DETECTION_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_WALLPAPER_EFFECTS_GENERATION_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_WALLPAPER_EFFECTS_GENERATION_SERVICE
UnflaggedApi: android.Manifest.permission#BIND_WEARABLE_SENSING_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BIND_WEARABLE_SENSING_SERVICE
UnflaggedApi: android.Manifest.permission#BLUETOOTH_MAP:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BLUETOOTH_MAP
UnflaggedApi: android.Manifest.permission#BRICK:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BRICK
UnflaggedApi: android.Manifest.permission#BRIGHTNESS_SLIDER_USAGE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BRIGHTNESS_SLIDER_USAGE
UnflaggedApi: android.Manifest.permission#BROADCAST_CLOSE_SYSTEM_DIALOGS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BROADCAST_CLOSE_SYSTEM_DIALOGS
UnflaggedApi: android.Manifest.permission#BYPASS_ROLE_QUALIFICATION:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.BYPASS_ROLE_QUALIFICATION
UnflaggedApi: android.Manifest.permission#CALL_AUDIO_INTERCEPTION:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.CALL_AUDIO_INTERCEPTION
UnflaggedApi: android.Manifest.permission#CAMERA_DISABLE_TRANSMIT_LED:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.CAMERA_DISABLE_TRANSMIT_LED
UnflaggedApi: android.Manifest.permission#CAMERA_OPEN_CLOSE_LISTENER:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.CAMERA_OPEN_CLOSE_LISTENER
UnflaggedApi: android.Manifest.permission#CAPTURE_AUDIO_HOTWORD:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.CAPTURE_AUDIO_HOTWORD
UnflaggedApi: android.Manifest.permission#CAPTURE_CONSENTLESS_BUGREPORT_ON_USERDEBUG_BUILD:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.CAPTURE_CONSENTLESS_BUGREPORT_ON_USERDEBUG_BUILD
UnflaggedApi: android.Manifest.permission#CAPTURE_MEDIA_OUTPUT:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.CAPTURE_MEDIA_OUTPUT
UnflaggedApi: android.Manifest.permission#CAPTURE_TUNER_AUDIO_INPUT:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.CAPTURE_TUNER_AUDIO_INPUT
UnflaggedApi: android.Manifest.permission#CAPTURE_TV_INPUT:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.CAPTURE_TV_INPUT
UnflaggedApi: android.Manifest.permission#CAPTURE_VOICE_COMMUNICATION_OUTPUT:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.CAPTURE_VOICE_COMMUNICATION_OUTPUT
UnflaggedApi: android.Manifest.permission#CHANGE_APP_IDLE_STATE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.CHANGE_APP_IDLE_STATE
UnflaggedApi: android.Manifest.permission#CHANGE_APP_LAUNCH_TIME_ESTIMATE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.CHANGE_APP_LAUNCH_TIME_ESTIMATE
UnflaggedApi: android.Manifest.permission#CHANGE_DEVICE_IDLE_TEMP_WHITELIST:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.CHANGE_DEVICE_IDLE_TEMP_WHITELIST
UnflaggedApi: android.Manifest.permission#CHECK_REMOTE_LOCKSCREEN:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.CHECK_REMOTE_LOCKSCREEN
UnflaggedApi: android.Manifest.permission#CLEAR_APP_USER_DATA:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.CLEAR_APP_USER_DATA
UnflaggedApi: android.Manifest.permission#COMPANION_APPROVE_WIFI_CONNECTIONS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.COMPANION_APPROVE_WIFI_CONNECTIONS
UnflaggedApi: android.Manifest.permission#CONFIGURE_DISPLAY_BRIGHTNESS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.CONFIGURE_DISPLAY_BRIGHTNESS
UnflaggedApi: android.Manifest.permission#CONFIGURE_INTERACT_ACROSS_PROFILES:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.CONFIGURE_INTERACT_ACROSS_PROFILES
UnflaggedApi: android.Manifest.permission#CONNECTIVITY_USE_RESTRICTED_NETWORKS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.CONNECTIVITY_USE_RESTRICTED_NETWORKS
UnflaggedApi: android.Manifest.permission#CONTROL_DEVICE_LIGHTS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.CONTROL_DEVICE_LIGHTS
UnflaggedApi: android.Manifest.permission#CONTROL_DISPLAY_COLOR_TRANSFORMS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.CONTROL_DISPLAY_COLOR_TRANSFORMS
UnflaggedApi: android.Manifest.permission#CONTROL_DISPLAY_SATURATION:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.CONTROL_DISPLAY_SATURATION
UnflaggedApi: android.Manifest.permission#CONTROL_INCALL_EXPERIENCE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.CONTROL_INCALL_EXPERIENCE
UnflaggedApi: android.Manifest.permission#CONTROL_KEYGUARD_SECURE_NOTIFICATIONS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.CONTROL_KEYGUARD_SECURE_NOTIFICATIONS
UnflaggedApi: android.Manifest.permission#CONTROL_OEM_PAID_NETWORK_PREFERENCE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.CONTROL_OEM_PAID_NETWORK_PREFERENCE
UnflaggedApi: android.Manifest.permission#CONTROL_VPN:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.CONTROL_VPN
UnflaggedApi: android.Manifest.permission#CREATE_USERS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.CREATE_USERS
UnflaggedApi: android.Manifest.permission#CREATE_VIRTUAL_DEVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.CREATE_VIRTUAL_DEVICE
UnflaggedApi: android.Manifest.permission#CRYPT_KEEPER:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.CRYPT_KEEPER
UnflaggedApi: android.Manifest.permission#DEVICE_POWER:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.DEVICE_POWER
UnflaggedApi: android.Manifest.permission#DISABLE_SYSTEM_SOUND_EFFECTS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.DISABLE_SYSTEM_SOUND_EFFECTS
UnflaggedApi: android.Manifest.permission#DISPATCH_PROVISIONING_MESSAGE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.DISPATCH_PROVISIONING_MESSAGE
UnflaggedApi: android.Manifest.permission#DOMAIN_VERIFICATION_AGENT:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.DOMAIN_VERIFICATION_AGENT
UnflaggedApi: android.Manifest.permission#ENTER_CAR_MODE_PRIORITIZED:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ENTER_CAR_MODE_PRIORITIZED
UnflaggedApi: android.Manifest.permission#EXEMPT_FROM_AUDIO_RECORD_RESTRICTIONS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.EXEMPT_FROM_AUDIO_RECORD_RESTRICTIONS
UnflaggedApi: android.Manifest.permission#FORCE_BACK:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.FORCE_BACK
UnflaggedApi: android.Manifest.permission#FORCE_STOP_PACKAGES:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.FORCE_STOP_PACKAGES
UnflaggedApi: android.Manifest.permission#GET_APP_METADATA:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.GET_APP_METADATA
UnflaggedApi: android.Manifest.permission#GET_APP_OPS_STATS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.GET_APP_OPS_STATS
UnflaggedApi: android.Manifest.permission#GET_HISTORICAL_APP_OPS_STATS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.GET_HISTORICAL_APP_OPS_STATS
UnflaggedApi: android.Manifest.permission#GET_PROCESS_STATE_AND_OOM_SCORE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.GET_PROCESS_STATE_AND_OOM_SCORE
UnflaggedApi: android.Manifest.permission#GET_RUNTIME_PERMISSIONS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.GET_RUNTIME_PERMISSIONS
UnflaggedApi: android.Manifest.permission#GET_TOP_ACTIVITY_INFO:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.GET_TOP_ACTIVITY_INFO
UnflaggedApi: android.Manifest.permission#GRANT_RUNTIME_PERMISSIONS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.GRANT_RUNTIME_PERMISSIONS
UnflaggedApi: android.Manifest.permission#GRANT_RUNTIME_PERMISSIONS_TO_TELEPHONY_DEFAULTS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.GRANT_RUNTIME_PERMISSIONS_TO_TELEPHONY_DEFAULTS
UnflaggedApi: android.Manifest.permission#HANDLE_CAR_MODE_CHANGES:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.HANDLE_CAR_MODE_CHANGES
UnflaggedApi: android.Manifest.permission#HARDWARE_TEST:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.HARDWARE_TEST
UnflaggedApi: android.Manifest.permission#HDMI_CEC:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.HDMI_CEC
UnflaggedApi: android.Manifest.permission#INJECT_EVENTS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.INJECT_EVENTS
UnflaggedApi: android.Manifest.permission#INSTALL_DPC_PACKAGES:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.INSTALL_DPC_PACKAGES
UnflaggedApi: android.Manifest.permission#INSTALL_DYNAMIC_SYSTEM:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.INSTALL_DYNAMIC_SYSTEM
UnflaggedApi: android.Manifest.permission#INSTALL_EXISTING_PACKAGES:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.INSTALL_EXISTING_PACKAGES
UnflaggedApi: android.Manifest.permission#INSTALL_GRANT_RUNTIME_PERMISSIONS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.INSTALL_GRANT_RUNTIME_PERMISSIONS
UnflaggedApi: android.Manifest.permission#INSTALL_LOCATION_TIME_ZONE_PROVIDER_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.INSTALL_LOCATION_TIME_ZONE_PROVIDER_SERVICE
UnflaggedApi: android.Manifest.permission#INSTALL_PACKAGE_UPDATES:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.INSTALL_PACKAGE_UPDATES
UnflaggedApi: android.Manifest.permission#INSTALL_SELF_UPDATES:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.INSTALL_SELF_UPDATES
UnflaggedApi: android.Manifest.permission#INTENT_FILTER_VERIFICATION_AGENT:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.INTENT_FILTER_VERIFICATION_AGENT
UnflaggedApi: android.Manifest.permission#INTERACT_ACROSS_USERS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.INTERACT_ACROSS_USERS
UnflaggedApi: android.Manifest.permission#INTERACT_ACROSS_USERS_FULL:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.INTERACT_ACROSS_USERS_FULL
UnflaggedApi: android.Manifest.permission#INTERNAL_SYSTEM_WINDOW:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.INTERNAL_SYSTEM_WINDOW
UnflaggedApi: android.Manifest.permission#INVOKE_CARRIER_SETUP:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.INVOKE_CARRIER_SETUP
UnflaggedApi: android.Manifest.permission#KILL_ALL_BACKGROUND_PROCESSES:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.KILL_ALL_BACKGROUND_PROCESSES
UnflaggedApi: android.Manifest.permission#KILL_UID:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.KILL_UID
UnflaggedApi: android.Manifest.permission#LAUNCH_DEVICE_MANAGER_SETUP:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.LAUNCH_DEVICE_MANAGER_SETUP
UnflaggedApi: android.Manifest.permission#LAUNCH_PERMISSION_SETTINGS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.LAUNCH_PERMISSION_SETTINGS
UnflaggedApi: android.Manifest.permission#LOCAL_MAC_ADDRESS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.LOCAL_MAC_ADDRESS
UnflaggedApi: android.Manifest.permission#LOCATION_BYPASS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.LOCATION_BYPASS
UnflaggedApi: android.Manifest.permission#LOCK_DEVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.LOCK_DEVICE
UnflaggedApi: android.Manifest.permission#LOG_FOREGROUND_RESOURCE_USE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.LOG_FOREGROUND_RESOURCE_USE
UnflaggedApi: android.Manifest.permission#LOOP_RADIO:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.LOOP_RADIO
UnflaggedApi: android.Manifest.permission#MANAGE_ACCESSIBILITY:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_ACCESSIBILITY
UnflaggedApi: android.Manifest.permission#MANAGE_ACTIVITY_TASKS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_ACTIVITY_TASKS
UnflaggedApi: android.Manifest.permission#MANAGE_APP_HIBERNATION:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_APP_HIBERNATION
UnflaggedApi: android.Manifest.permission#MANAGE_APP_OPS_RESTRICTIONS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_APP_OPS_RESTRICTIONS
UnflaggedApi: android.Manifest.permission#MANAGE_APP_PREDICTIONS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_APP_PREDICTIONS
UnflaggedApi: android.Manifest.permission#MANAGE_APP_TOKENS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_APP_TOKENS
UnflaggedApi: android.Manifest.permission#MANAGE_AUTO_FILL:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_AUTO_FILL
UnflaggedApi: android.Manifest.permission#MANAGE_BLUETOOTH_WHEN_WIRELESS_CONSENT_REQUIRED:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_BLUETOOTH_WHEN_WIRELESS_CONSENT_REQUIRED
UnflaggedApi: android.Manifest.permission#MANAGE_CARRIER_OEM_UNLOCK_STATE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_CARRIER_OEM_UNLOCK_STATE
UnflaggedApi: android.Manifest.permission#MANAGE_CA_CERTIFICATES:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_CA_CERTIFICATES
UnflaggedApi: android.Manifest.permission#MANAGE_CLIPBOARD_ACCESS_NOTIFICATION:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_CLIPBOARD_ACCESS_NOTIFICATION
UnflaggedApi: android.Manifest.permission#MANAGE_CLOUDSEARCH:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_CLOUDSEARCH
UnflaggedApi: android.Manifest.permission#MANAGE_CONTENT_CAPTURE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_CONTENT_CAPTURE
UnflaggedApi: android.Manifest.permission#MANAGE_CONTENT_SUGGESTIONS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_CONTENT_SUGGESTIONS
UnflaggedApi: android.Manifest.permission#MANAGE_DEBUGGING:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_DEBUGGING
UnflaggedApi: android.Manifest.permission#MANAGE_DEFAULT_APPLICATIONS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_DEFAULT_APPLICATIONS
UnflaggedApi: android.Manifest.permission#MANAGE_DEVICE_ADMINS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_DEVICE_ADMINS
UnflaggedApi: android.Manifest.permission#MANAGE_DEVICE_POLICY_APP_EXEMPTIONS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_DEVICE_POLICY_APP_EXEMPTIONS
UnflaggedApi: android.Manifest.permission#MANAGE_ETHERNET_NETWORKS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_ETHERNET_NETWORKS
UnflaggedApi: android.Manifest.permission#MANAGE_FACTORY_RESET_PROTECTION:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_FACTORY_RESET_PROTECTION
UnflaggedApi: android.Manifest.permission#MANAGE_GAME_ACTIVITY:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_GAME_ACTIVITY
UnflaggedApi: android.Manifest.permission#MANAGE_GAME_MODE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_GAME_MODE
UnflaggedApi: android.Manifest.permission#MANAGE_HOTWORD_DETECTION:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_HOTWORD_DETECTION
UnflaggedApi: android.Manifest.permission#MANAGE_IPSEC_TUNNELS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_IPSEC_TUNNELS
UnflaggedApi: android.Manifest.permission#MANAGE_LOW_POWER_STANDBY:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_LOW_POWER_STANDBY
UnflaggedApi: android.Manifest.permission#MANAGE_MUSIC_RECOGNITION:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_MUSIC_RECOGNITION
UnflaggedApi: android.Manifest.permission#MANAGE_NOTIFICATION_LISTENERS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_NOTIFICATION_LISTENERS
UnflaggedApi: android.Manifest.permission#MANAGE_ONE_TIME_PERMISSION_SESSIONS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_ONE_TIME_PERMISSION_SESSIONS
UnflaggedApi: android.Manifest.permission#MANAGE_PROFILE_AND_DEVICE_OWNERS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_PROFILE_AND_DEVICE_OWNERS
UnflaggedApi: android.Manifest.permission#MANAGE_ROLE_HOLDERS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_ROLE_HOLDERS
UnflaggedApi: android.Manifest.permission#MANAGE_ROLLBACKS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_ROLLBACKS
UnflaggedApi: android.Manifest.permission#MANAGE_ROTATION_RESOLVER:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_ROTATION_RESOLVER
UnflaggedApi: android.Manifest.permission#MANAGE_SAFETY_CENTER:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_SAFETY_CENTER
UnflaggedApi: android.Manifest.permission#MANAGE_SEARCH_UI:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_SEARCH_UI
UnflaggedApi: android.Manifest.permission#MANAGE_SENSOR_PRIVACY:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_SENSOR_PRIVACY
UnflaggedApi: android.Manifest.permission#MANAGE_SMARTSPACE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_SMARTSPACE
UnflaggedApi: android.Manifest.permission#MANAGE_SOUND_TRIGGER:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_SOUND_TRIGGER
UnflaggedApi: android.Manifest.permission#MANAGE_SPEECH_RECOGNITION:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_SPEECH_RECOGNITION
UnflaggedApi: android.Manifest.permission#MANAGE_SUBSCRIPTION_PLANS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_SUBSCRIPTION_PLANS
UnflaggedApi: android.Manifest.permission#MANAGE_SUBSCRIPTION_USER_ASSOCIATION:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_SUBSCRIPTION_USER_ASSOCIATION
UnflaggedApi: android.Manifest.permission#MANAGE_TEST_NETWORKS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_TEST_NETWORKS
UnflaggedApi: android.Manifest.permission#MANAGE_TIME_AND_ZONE_DETECTION:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_TIME_AND_ZONE_DETECTION
UnflaggedApi: android.Manifest.permission#MANAGE_UI_TRANSLATION:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_UI_TRANSLATION
UnflaggedApi: android.Manifest.permission#MANAGE_USB:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_USB
UnflaggedApi: android.Manifest.permission#MANAGE_USERS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_USERS
UnflaggedApi: android.Manifest.permission#MANAGE_USER_OEM_UNLOCK_STATE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_USER_OEM_UNLOCK_STATE
UnflaggedApi: android.Manifest.permission#MANAGE_WALLPAPER_EFFECTS_GENERATION:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_WALLPAPER_EFFECTS_GENERATION
UnflaggedApi: android.Manifest.permission#MANAGE_WEAK_ESCROW_TOKEN:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_WEAK_ESCROW_TOKEN
UnflaggedApi: android.Manifest.permission#MANAGE_WEARABLE_SENSING_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_WEARABLE_SENSING_SERVICE
UnflaggedApi: android.Manifest.permission#MANAGE_WIFI_COUNTRY_CODE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MANAGE_WIFI_COUNTRY_CODE
UnflaggedApi: android.Manifest.permission#MARK_DEVICE_ORGANIZATION_OWNED:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MARK_DEVICE_ORGANIZATION_OWNED
UnflaggedApi: android.Manifest.permission#MEDIA_RESOURCE_OVERRIDE_PID:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MEDIA_RESOURCE_OVERRIDE_PID
UnflaggedApi: android.Manifest.permission#MIGRATE_HEALTH_CONNECT_DATA:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MIGRATE_HEALTH_CONNECT_DATA
UnflaggedApi: android.Manifest.permission#MODIFY_APPWIDGET_BIND_PERMISSIONS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MODIFY_APPWIDGET_BIND_PERMISSIONS
UnflaggedApi: android.Manifest.permission#MODIFY_AUDIO_ROUTING:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MODIFY_AUDIO_ROUTING
UnflaggedApi: android.Manifest.permission#MODIFY_AUDIO_SETTINGS_PRIVILEGED:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MODIFY_AUDIO_SETTINGS_PRIVILEGED
UnflaggedApi: android.Manifest.permission#MODIFY_CELL_BROADCASTS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MODIFY_CELL_BROADCASTS
UnflaggedApi: android.Manifest.permission#MODIFY_DAY_NIGHT_MODE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MODIFY_DAY_NIGHT_MODE
UnflaggedApi: android.Manifest.permission#MODIFY_PARENTAL_CONTROLS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MODIFY_PARENTAL_CONTROLS
UnflaggedApi: android.Manifest.permission#MODIFY_QUIET_MODE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MODIFY_QUIET_MODE
UnflaggedApi: android.Manifest.permission#MODIFY_SETTINGS_OVERRIDEABLE_BY_RESTORE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MODIFY_SETTINGS_OVERRIDEABLE_BY_RESTORE
UnflaggedApi: android.Manifest.permission#MONITOR_DEVICE_CONFIG_ACCESS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MONITOR_DEVICE_CONFIG_ACCESS
UnflaggedApi: android.Manifest.permission#MOVE_PACKAGE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.MOVE_PACKAGE
UnflaggedApi: android.Manifest.permission#NETWORK_AIRPLANE_MODE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.NETWORK_AIRPLANE_MODE
UnflaggedApi: android.Manifest.permission#NETWORK_CARRIER_PROVISIONING:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.NETWORK_CARRIER_PROVISIONING
UnflaggedApi: android.Manifest.permission#NETWORK_FACTORY:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.NETWORK_FACTORY
UnflaggedApi: android.Manifest.permission#NETWORK_MANAGED_PROVISIONING:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.NETWORK_MANAGED_PROVISIONING
UnflaggedApi: android.Manifest.permission#NETWORK_SCAN:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.NETWORK_SCAN
UnflaggedApi: android.Manifest.permission#NETWORK_SETTINGS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.NETWORK_SETTINGS
UnflaggedApi: android.Manifest.permission#NETWORK_SETUP_WIZARD:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.NETWORK_SETUP_WIZARD
UnflaggedApi: android.Manifest.permission#NETWORK_SIGNAL_STRENGTH_WAKEUP:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.NETWORK_SIGNAL_STRENGTH_WAKEUP
UnflaggedApi: android.Manifest.permission#NETWORK_STACK:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.NETWORK_STACK
UnflaggedApi: android.Manifest.permission#NETWORK_STATS_PROVIDER:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.NETWORK_STATS_PROVIDER
UnflaggedApi: android.Manifest.permission#NFC_SET_CONTROLLER_ALWAYS_ON:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.NFC_SET_CONTROLLER_ALWAYS_ON
UnflaggedApi: android.Manifest.permission#NOTIFICATION_DURING_SETUP:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.NOTIFICATION_DURING_SETUP
UnflaggedApi: android.Manifest.permission#NOTIFY_TV_INPUTS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.NOTIFY_TV_INPUTS
UnflaggedApi: android.Manifest.permission#OBSERVE_APP_USAGE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.OBSERVE_APP_USAGE
UnflaggedApi: android.Manifest.permission#OBSERVE_NETWORK_POLICY:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.OBSERVE_NETWORK_POLICY
UnflaggedApi: android.Manifest.permission#OBSERVE_ROLE_HOLDERS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.OBSERVE_ROLE_HOLDERS
UnflaggedApi: android.Manifest.permission#OBSERVE_SENSOR_PRIVACY:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.OBSERVE_SENSOR_PRIVACY
UnflaggedApi: android.Manifest.permission#OPEN_ACCESSIBILITY_DETAILS_SETTINGS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.OPEN_ACCESSIBILITY_DETAILS_SETTINGS
UnflaggedApi: android.Manifest.permission#OVERRIDE_COMPAT_CHANGE_CONFIG_ON_RELEASE_BUILD:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.OVERRIDE_COMPAT_CHANGE_CONFIG_ON_RELEASE_BUILD
UnflaggedApi: android.Manifest.permission#PACKAGE_VERIFICATION_AGENT:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.PACKAGE_VERIFICATION_AGENT
UnflaggedApi: android.Manifest.permission#PACKET_KEEPALIVE_OFFLOAD:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.PACKET_KEEPALIVE_OFFLOAD
UnflaggedApi: android.Manifest.permission#PEERS_MAC_ADDRESS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.PEERS_MAC_ADDRESS
UnflaggedApi: android.Manifest.permission#PERFORM_CDMA_PROVISIONING:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.PERFORM_CDMA_PROVISIONING
UnflaggedApi: android.Manifest.permission#PERFORM_IMS_SINGLE_REGISTRATION:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.PERFORM_IMS_SINGLE_REGISTRATION
UnflaggedApi: android.Manifest.permission#PERFORM_SIM_ACTIVATION:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.PERFORM_SIM_ACTIVATION
UnflaggedApi: android.Manifest.permission#POWER_SAVER:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.POWER_SAVER
UnflaggedApi: android.Manifest.permission#PROVIDE_DEFAULT_ENABLED_CREDENTIAL_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.PROVIDE_DEFAULT_ENABLED_CREDENTIAL_SERVICE
UnflaggedApi: android.Manifest.permission#PROVIDE_RESOLVER_RANKER_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.PROVIDE_RESOLVER_RANKER_SERVICE
UnflaggedApi: android.Manifest.permission#PROVIDE_TRUST_AGENT:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.PROVIDE_TRUST_AGENT
UnflaggedApi: android.Manifest.permission#PROVISION_DEMO_DEVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.PROVISION_DEMO_DEVICE
UnflaggedApi: android.Manifest.permission#QUERY_ADMIN_POLICY:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.QUERY_ADMIN_POLICY
UnflaggedApi: android.Manifest.permission#QUERY_CLONED_APPS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.QUERY_CLONED_APPS
UnflaggedApi: android.Manifest.permission#QUERY_USERS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.QUERY_USERS
UnflaggedApi: android.Manifest.permission#RADIO_SCAN_WITHOUT_LOCATION:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.RADIO_SCAN_WITHOUT_LOCATION
UnflaggedApi: android.Manifest.permission#READ_ACTIVE_EMERGENCY_SESSION:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.READ_ACTIVE_EMERGENCY_SESSION
UnflaggedApi: android.Manifest.permission#READ_APP_SPECIFIC_LOCALES:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.READ_APP_SPECIFIC_LOCALES
UnflaggedApi: android.Manifest.permission#READ_CARRIER_APP_INFO:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.READ_CARRIER_APP_INFO
UnflaggedApi: android.Manifest.permission#READ_CELL_BROADCASTS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.READ_CELL_BROADCASTS
UnflaggedApi: android.Manifest.permission#READ_CLIPBOARD_IN_BACKGROUND:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.READ_CLIPBOARD_IN_BACKGROUND
UnflaggedApi: android.Manifest.permission#READ_CONTENT_RATING_SYSTEMS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.READ_CONTENT_RATING_SYSTEMS
UnflaggedApi: android.Manifest.permission#READ_DEVICE_CONFIG:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.READ_DEVICE_CONFIG
UnflaggedApi: android.Manifest.permission#READ_DREAM_STATE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.READ_DREAM_STATE
UnflaggedApi: android.Manifest.permission#READ_GLOBAL_APP_SEARCH_DATA:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.READ_GLOBAL_APP_SEARCH_DATA
UnflaggedApi: android.Manifest.permission#READ_INSTALLED_SESSION_PATHS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.READ_INSTALLED_SESSION_PATHS
UnflaggedApi: android.Manifest.permission#READ_INSTALL_SESSIONS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.READ_INSTALL_SESSIONS
UnflaggedApi: android.Manifest.permission#READ_NETWORK_USAGE_HISTORY:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.READ_NETWORK_USAGE_HISTORY
UnflaggedApi: android.Manifest.permission#READ_OEM_UNLOCK_STATE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.READ_OEM_UNLOCK_STATE
UnflaggedApi: android.Manifest.permission#READ_PEOPLE_DATA:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.READ_PEOPLE_DATA
UnflaggedApi: android.Manifest.permission#READ_PRINT_SERVICES:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.READ_PRINT_SERVICES
UnflaggedApi: android.Manifest.permission#READ_PRINT_SERVICE_RECOMMENDATIONS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.READ_PRINT_SERVICE_RECOMMENDATIONS
UnflaggedApi: android.Manifest.permission#READ_PRIVILEGED_PHONE_STATE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.READ_PRIVILEGED_PHONE_STATE
UnflaggedApi: android.Manifest.permission#READ_PROJECTION_STATE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.READ_PROJECTION_STATE
UnflaggedApi: android.Manifest.permission#READ_RESTRICTED_STATS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.READ_RESTRICTED_STATS
UnflaggedApi: android.Manifest.permission#READ_RUNTIME_PROFILES:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.READ_RUNTIME_PROFILES
UnflaggedApi: android.Manifest.permission#READ_SAFETY_CENTER_STATUS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.READ_SAFETY_CENTER_STATUS
UnflaggedApi: android.Manifest.permission#READ_SEARCH_INDEXABLES:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.READ_SEARCH_INDEXABLES
UnflaggedApi: android.Manifest.permission#READ_SYSTEM_UPDATE_INFO:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.READ_SYSTEM_UPDATE_INFO
UnflaggedApi: android.Manifest.permission#READ_WALLPAPER_INTERNAL:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.READ_WALLPAPER_INTERNAL
UnflaggedApi: android.Manifest.permission#READ_WIFI_CREDENTIAL:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.READ_WIFI_CREDENTIAL
UnflaggedApi: android.Manifest.permission#READ_WRITE_SYNC_DISABLED_MODE_CONFIG:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.READ_WRITE_SYNC_DISABLED_MODE_CONFIG
UnflaggedApi: android.Manifest.permission#REAL_GET_TASKS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.REAL_GET_TASKS
UnflaggedApi: android.Manifest.permission#RECEIVE_BLUETOOTH_MAP:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.RECEIVE_BLUETOOTH_MAP
UnflaggedApi: android.Manifest.permission#RECEIVE_DATA_ACTIVITY_CHANGE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.RECEIVE_DATA_ACTIVITY_CHANGE
UnflaggedApi: android.Manifest.permission#RECEIVE_DEVICE_CUSTOMIZATION_READY:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.RECEIVE_DEVICE_CUSTOMIZATION_READY
UnflaggedApi: android.Manifest.permission#RECEIVE_EMERGENCY_BROADCAST:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.RECEIVE_EMERGENCY_BROADCAST
UnflaggedApi: android.Manifest.permission#RECEIVE_WIFI_CREDENTIAL_CHANGE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.RECEIVE_WIFI_CREDENTIAL_CHANGE
UnflaggedApi: android.Manifest.permission#RECORD_BACKGROUND_AUDIO:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.RECORD_BACKGROUND_AUDIO
UnflaggedApi: android.Manifest.permission#RECOVERY:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.RECOVERY
UnflaggedApi: android.Manifest.permission#RECOVER_KEYSTORE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.RECOVER_KEYSTORE
UnflaggedApi: android.Manifest.permission#REGISTER_CALL_PROVIDER:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.REGISTER_CALL_PROVIDER
UnflaggedApi: android.Manifest.permission#REGISTER_CONNECTION_MANAGER:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.REGISTER_CONNECTION_MANAGER
UnflaggedApi: android.Manifest.permission#REGISTER_NSD_OFFLOAD_ENGINE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.REGISTER_NSD_OFFLOAD_ENGINE
UnflaggedApi: android.Manifest.permission#REGISTER_SIM_SUBSCRIPTION:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.REGISTER_SIM_SUBSCRIPTION
UnflaggedApi: android.Manifest.permission#REGISTER_STATS_PULL_ATOM:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.REGISTER_STATS_PULL_ATOM
UnflaggedApi: android.Manifest.permission#REMOTE_DISPLAY_PROVIDER:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.REMOTE_DISPLAY_PROVIDER
UnflaggedApi: android.Manifest.permission#REMOVE_DRM_CERTIFICATES:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.REMOVE_DRM_CERTIFICATES
UnflaggedApi: android.Manifest.permission#REMOVE_TASKS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.REMOVE_TASKS
UnflaggedApi: android.Manifest.permission#RENOUNCE_PERMISSIONS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.RENOUNCE_PERMISSIONS
UnflaggedApi: android.Manifest.permission#REPORT_USAGE_STATS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.REPORT_USAGE_STATS
UnflaggedApi: android.Manifest.permission#REQUEST_NOTIFICATION_ASSISTANT_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.REQUEST_NOTIFICATION_ASSISTANT_SERVICE
UnflaggedApi: android.Manifest.permission#RESET_PASSWORD:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.RESET_PASSWORD
UnflaggedApi: android.Manifest.permission#RESTART_WIFI_SUBSYSTEM:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.RESTART_WIFI_SUBSYSTEM
UnflaggedApi: android.Manifest.permission#RESTORE_RUNTIME_PERMISSIONS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.RESTORE_RUNTIME_PERMISSIONS
UnflaggedApi: android.Manifest.permission#RESTRICTED_VR_ACCESS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.RESTRICTED_VR_ACCESS
UnflaggedApi: android.Manifest.permission#RETRIEVE_WINDOW_CONTENT:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.RETRIEVE_WINDOW_CONTENT
UnflaggedApi: android.Manifest.permission#REVIEW_ACCESSIBILITY_SERVICES:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.REVIEW_ACCESSIBILITY_SERVICES
UnflaggedApi: android.Manifest.permission#REVOKE_RUNTIME_PERMISSIONS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.REVOKE_RUNTIME_PERMISSIONS
UnflaggedApi: android.Manifest.permission#ROTATE_SURFACE_FLINGER:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.ROTATE_SURFACE_FLINGER
UnflaggedApi: android.Manifest.permission#SATELLITE_COMMUNICATION:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SATELLITE_COMMUNICATION
UnflaggedApi: android.Manifest.permission#SCHEDULE_PRIORITIZED_ALARM:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SCHEDULE_PRIORITIZED_ALARM
UnflaggedApi: android.Manifest.permission#SECURE_ELEMENT_PRIVILEGED_OPERATION:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SECURE_ELEMENT_PRIVILEGED_OPERATION
UnflaggedApi: android.Manifest.permission#SEND_CATEGORY_CAR_NOTIFICATIONS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SEND_CATEGORY_CAR_NOTIFICATIONS
UnflaggedApi: android.Manifest.permission#SEND_DEVICE_CUSTOMIZATION_READY:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SEND_DEVICE_CUSTOMIZATION_READY
UnflaggedApi: android.Manifest.permission#SEND_SAFETY_CENTER_UPDATE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SEND_SAFETY_CENTER_UPDATE
UnflaggedApi: android.Manifest.permission#SEND_SHOW_SUSPENDED_APP_DETAILS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SEND_SHOW_SUSPENDED_APP_DETAILS
UnflaggedApi: android.Manifest.permission#SEND_SMS_NO_CONFIRMATION:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SEND_SMS_NO_CONFIRMATION
UnflaggedApi: android.Manifest.permission#SERIAL_PORT:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SERIAL_PORT
UnflaggedApi: android.Manifest.permission#SET_ACTIVITY_WATCHER:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SET_ACTIVITY_WATCHER
UnflaggedApi: android.Manifest.permission#SET_CLIP_SOURCE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SET_CLIP_SOURCE
UnflaggedApi: android.Manifest.permission#SET_DEFAULT_ACCOUNT_FOR_CONTACTS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SET_DEFAULT_ACCOUNT_FOR_CONTACTS
UnflaggedApi: android.Manifest.permission#SET_HARMFUL_APP_WARNINGS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SET_HARMFUL_APP_WARNINGS
UnflaggedApi: android.Manifest.permission#SET_LOW_POWER_STANDBY_PORTS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SET_LOW_POWER_STANDBY_PORTS
UnflaggedApi: android.Manifest.permission#SET_MEDIA_KEY_LISTENER:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SET_MEDIA_KEY_LISTENER
UnflaggedApi: android.Manifest.permission#SET_ORIENTATION:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SET_ORIENTATION
UnflaggedApi: android.Manifest.permission#SET_POINTER_SPEED:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SET_POINTER_SPEED
UnflaggedApi: android.Manifest.permission#SET_SCREEN_COMPATIBILITY:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SET_SCREEN_COMPATIBILITY
UnflaggedApi: android.Manifest.permission#SET_SYSTEM_AUDIO_CAPTION:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SET_SYSTEM_AUDIO_CAPTION
UnflaggedApi: android.Manifest.permission#SET_UNRESTRICTED_KEEP_CLEAR_AREAS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SET_UNRESTRICTED_KEEP_CLEAR_AREAS
UnflaggedApi: android.Manifest.permission#SET_VOLUME_KEY_LONG_PRESS_LISTENER:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SET_VOLUME_KEY_LONG_PRESS_LISTENER
UnflaggedApi: android.Manifest.permission#SET_WALLPAPER_COMPONENT:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SET_WALLPAPER_COMPONENT
UnflaggedApi: android.Manifest.permission#SET_WALLPAPER_DIM_AMOUNT:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SET_WALLPAPER_DIM_AMOUNT
UnflaggedApi: android.Manifest.permission#SHOW_KEYGUARD_MESSAGE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SHOW_KEYGUARD_MESSAGE
UnflaggedApi: android.Manifest.permission#SHUTDOWN:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SHUTDOWN
UnflaggedApi: android.Manifest.permission#SIGNAL_REBOOT_READINESS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SIGNAL_REBOOT_READINESS
UnflaggedApi: android.Manifest.permission#SOUND_TRIGGER_RUN_IN_BATTERY_SAVER:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SOUND_TRIGGER_RUN_IN_BATTERY_SAVER
UnflaggedApi: android.Manifest.permission#STAGE_HEALTH_CONNECT_REMOTE_DATA:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.STAGE_HEALTH_CONNECT_REMOTE_DATA
UnflaggedApi: android.Manifest.permission#START_ACTIVITIES_FROM_BACKGROUND:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.START_ACTIVITIES_FROM_BACKGROUND
UnflaggedApi: android.Manifest.permission#START_CROSS_PROFILE_ACTIVITIES:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.START_CROSS_PROFILE_ACTIVITIES
UnflaggedApi: android.Manifest.permission#START_REVIEW_PERMISSION_DECISIONS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.START_REVIEW_PERMISSION_DECISIONS
UnflaggedApi: android.Manifest.permission#START_TASKS_FROM_RECENTS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.START_TASKS_FROM_RECENTS
UnflaggedApi: android.Manifest.permission#STATUS_BAR_SERVICE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.STATUS_BAR_SERVICE
UnflaggedApi: android.Manifest.permission#STOP_APP_SWITCHES:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.STOP_APP_SWITCHES
UnflaggedApi: android.Manifest.permission#SUBSTITUTE_NOTIFICATION_APP_NAME:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SUBSTITUTE_NOTIFICATION_APP_NAME
UnflaggedApi: android.Manifest.permission#SUBSTITUTE_SHARE_TARGET_APP_NAME_AND_ICON:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SUBSTITUTE_SHARE_TARGET_APP_NAME_AND_ICON
UnflaggedApi: android.Manifest.permission#SUGGEST_EXTERNAL_TIME:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SUGGEST_EXTERNAL_TIME
UnflaggedApi: android.Manifest.permission#SUSPEND_APPS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SUSPEND_APPS
UnflaggedApi: android.Manifest.permission#SYSTEM_APPLICATION_OVERLAY:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SYSTEM_APPLICATION_OVERLAY
UnflaggedApi: android.Manifest.permission#SYSTEM_CAMERA:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.SYSTEM_CAMERA
UnflaggedApi: android.Manifest.permission#TETHER_PRIVILEGED:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.TETHER_PRIVILEGED
UnflaggedApi: android.Manifest.permission#TIS_EXTENSION_INTERFACE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.TIS_EXTENSION_INTERFACE
UnflaggedApi: android.Manifest.permission#TOGGLE_AUTOMOTIVE_PROJECTION:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.TOGGLE_AUTOMOTIVE_PROJECTION
UnflaggedApi: android.Manifest.permission#TRIGGER_LOST_MODE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.TRIGGER_LOST_MODE
UnflaggedApi: android.Manifest.permission#TV_INPUT_HARDWARE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.TV_INPUT_HARDWARE
UnflaggedApi: android.Manifest.permission#TV_VIRTUAL_REMOTE_CONTROLLER:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.TV_VIRTUAL_REMOTE_CONTROLLER
UnflaggedApi: android.Manifest.permission#UNLIMITED_SHORTCUTS_API_CALLS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.UNLIMITED_SHORTCUTS_API_CALLS
UnflaggedApi: android.Manifest.permission#UPDATE_APP_OPS_STATS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.UPDATE_APP_OPS_STATS
UnflaggedApi: android.Manifest.permission#UPDATE_DEVICE_MANAGEMENT_RESOURCES:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.UPDATE_DEVICE_MANAGEMENT_RESOURCES
UnflaggedApi: android.Manifest.permission#UPDATE_DOMAIN_VERIFICATION_USER_SELECTION:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.UPDATE_DOMAIN_VERIFICATION_USER_SELECTION
UnflaggedApi: android.Manifest.permission#UPDATE_FONTS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.UPDATE_FONTS
UnflaggedApi: android.Manifest.permission#UPDATE_LOCK:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.UPDATE_LOCK
UnflaggedApi: android.Manifest.permission#UPGRADE_RUNTIME_PERMISSIONS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.UPGRADE_RUNTIME_PERMISSIONS
UnflaggedApi: android.Manifest.permission#USER_ACTIVITY:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.USER_ACTIVITY
UnflaggedApi: android.Manifest.permission#USE_COLORIZED_NOTIFICATIONS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.USE_COLORIZED_NOTIFICATIONS
UnflaggedApi: android.Manifest.permission#USE_RESERVED_DISK:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.USE_RESERVED_DISK
UnflaggedApi: android.Manifest.permission#UWB_PRIVILEGED:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.UWB_PRIVILEGED
UnflaggedApi: android.Manifest.permission#WHITELIST_AUTO_REVOKE_PERMISSIONS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.WHITELIST_AUTO_REVOKE_PERMISSIONS
UnflaggedApi: android.Manifest.permission#WHITELIST_RESTRICTED_PERMISSIONS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.WHITELIST_RESTRICTED_PERMISSIONS
UnflaggedApi: android.Manifest.permission#WIFI_ACCESS_COEX_UNSAFE_CHANNELS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.WIFI_ACCESS_COEX_UNSAFE_CHANNELS
UnflaggedApi: android.Manifest.permission#WIFI_SET_DEVICE_MOBILITY_STATE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.WIFI_SET_DEVICE_MOBILITY_STATE
UnflaggedApi: android.Manifest.permission#WIFI_UPDATE_COEX_UNSAFE_CHANNELS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.WIFI_UPDATE_COEX_UNSAFE_CHANNELS
UnflaggedApi: android.Manifest.permission#WIFI_UPDATE_USABILITY_STATS_SCORE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.WIFI_UPDATE_USABILITY_STATS_SCORE
UnflaggedApi: android.Manifest.permission#WRITE_ALLOWLISTED_DEVICE_CONFIG:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.WRITE_ALLOWLISTED_DEVICE_CONFIG
UnflaggedApi: android.Manifest.permission#WRITE_DEVICE_CONFIG:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.WRITE_DEVICE_CONFIG
UnflaggedApi: android.Manifest.permission#WRITE_DREAM_STATE:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.WRITE_DREAM_STATE
UnflaggedApi: android.Manifest.permission#WRITE_EMBEDDED_SUBSCRIPTIONS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.WRITE_EMBEDDED_SUBSCRIPTIONS
UnflaggedApi: android.Manifest.permission#WRITE_OBB:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.WRITE_OBB
UnflaggedApi: android.Manifest.permission#WRITE_SECURITY_LOG:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.WRITE_SECURITY_LOG
UnflaggedApi: android.Manifest.permission#WRITE_SMS:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission.WRITE_SMS
UnflaggedApi: android.Manifest.permission_group#UNDEFINED:
    New API must be flagged with @FlaggedApi: field android.Manifest.permission_group.UNDEFINED
UnflaggedApi: android.R.array#config_keySystemUuidMapping:
    New API must be flagged with @FlaggedApi: field android.R.array.config_keySystemUuidMapping
UnflaggedApi: android.R.array#config_optionalIpSecAlgorithms:
    New API must be flagged with @FlaggedApi: field android.R.array.config_optionalIpSecAlgorithms
UnflaggedApi: android.R.attr#allowClearUserDataOnFailedRestore:
    New API must be flagged with @FlaggedApi: field android.R.attr.allowClearUserDataOnFailedRestore
UnflaggedApi: android.R.attr#gameSessionService:
    New API must be flagged with @FlaggedApi: field android.R.attr.gameSessionService
UnflaggedApi: android.R.attr#hotwordDetectionService:
    New API must be flagged with @FlaggedApi: field android.R.attr.hotwordDetectionService
UnflaggedApi: android.R.attr#isVrOnly:
    New API must be flagged with @FlaggedApi: field android.R.attr.isVrOnly
UnflaggedApi: android.R.attr#minExtensionVersion:
    New API must be flagged with @FlaggedApi: field android.R.attr.minExtensionVersion
UnflaggedApi: android.R.attr#playHomeTransitionSound:
    New API must be flagged with @FlaggedApi: field android.R.attr.playHomeTransitionSound
UnflaggedApi: android.R.attr#requiredSystemPropertyName:
    New API must be flagged with @FlaggedApi: field android.R.attr.requiredSystemPropertyName
UnflaggedApi: android.R.attr#requiredSystemPropertyValue:
    New API must be flagged with @FlaggedApi: field android.R.attr.requiredSystemPropertyValue
UnflaggedApi: android.R.attr#sdkVersion:
    New API must be flagged with @FlaggedApi: field android.R.attr.sdkVersion
UnflaggedApi: android.R.attr#supportsAmbientMode:
    New API must be flagged with @FlaggedApi: field android.R.attr.supportsAmbientMode
UnflaggedApi: android.R.attr#userRestriction:
    New API must be flagged with @FlaggedApi: field android.R.attr.userRestriction
UnflaggedApi: android.R.attr#visualQueryDetectionService:
    New API must be flagged with @FlaggedApi: field android.R.attr.visualQueryDetectionService
UnflaggedApi: android.R.bool#config_enableDefaultNotes:
    New API must be flagged with @FlaggedApi: field android.R.bool.config_enableDefaultNotes
UnflaggedApi: android.R.bool#config_enableDefaultNotesForWorkProfile:
    New API must be flagged with @FlaggedApi: field android.R.bool.config_enableDefaultNotesForWorkProfile
UnflaggedApi: android.R.bool#config_enableQrCodeScannerOnLockScreen:
    New API must be flagged with @FlaggedApi: field android.R.bool.config_enableQrCodeScannerOnLockScreen
UnflaggedApi: android.R.bool#config_safetyProtectionEnabled:
    New API must be flagged with @FlaggedApi: field android.R.bool.config_safetyProtectionEnabled
UnflaggedApi: android.R.bool#config_sendPackageName:
    New API must be flagged with @FlaggedApi: field android.R.bool.config_sendPackageName
UnflaggedApi: android.R.bool#config_showDefaultAssistant:
    New API must be flagged with @FlaggedApi: field android.R.bool.config_showDefaultAssistant
UnflaggedApi: android.R.bool#config_showDefaultEmergency:
    New API must be flagged with @FlaggedApi: field android.R.bool.config_showDefaultEmergency
UnflaggedApi: android.R.bool#config_showDefaultHome:
    New API must be flagged with @FlaggedApi: field android.R.bool.config_showDefaultHome
UnflaggedApi: android.R.color#system_notification_accent_color:
    New API must be flagged with @FlaggedApi: field android.R.color.system_notification_accent_color
UnflaggedApi: android.R.dimen#config_restrictedIconSize:
    New API must be flagged with @FlaggedApi: field android.R.dimen.config_restrictedIconSize
UnflaggedApi: android.R.dimen#config_viewConfigurationHandwritingGestureLineMargin:
    New API must be flagged with @FlaggedApi: field android.R.dimen.config_viewConfigurationHandwritingGestureLineMargin
UnflaggedApi: android.R.drawable#ic_info:
    New API must be flagged with @FlaggedApi: field android.R.drawable.ic_info
UnflaggedApi: android.R.drawable#ic_safety_protection:
    New API must be flagged with @FlaggedApi: field android.R.drawable.ic_safety_protection
UnflaggedApi: android.R.raw#loaderror:
    New API must be flagged with @FlaggedApi: field android.R.raw.loaderror
UnflaggedApi: android.R.raw#nodomain:
    New API must be flagged with @FlaggedApi: field android.R.raw.nodomain
UnflaggedApi: android.R.string#config_customMediaKeyDispatcher:
    New API must be flagged with @FlaggedApi: field android.R.string.config_customMediaKeyDispatcher
UnflaggedApi: android.R.string#config_customMediaSessionPolicyProvider:
    New API must be flagged with @FlaggedApi: field android.R.string.config_customMediaSessionPolicyProvider
UnflaggedApi: android.R.string#config_defaultAssistant:
    New API must be flagged with @FlaggedApi: field android.R.string.config_defaultAssistant
UnflaggedApi: android.R.string#config_defaultAutomotiveNavigation:
    New API must be flagged with @FlaggedApi: field android.R.string.config_defaultAutomotiveNavigation
UnflaggedApi: android.R.string#config_defaultBrowser:
    New API must be flagged with @FlaggedApi: field android.R.string.config_defaultBrowser
UnflaggedApi: android.R.string#config_defaultCallRedirection:
    New API must be flagged with @FlaggedApi: field android.R.string.config_defaultCallRedirection
UnflaggedApi: android.R.string#config_defaultCallScreening:
    New API must be flagged with @FlaggedApi: field android.R.string.config_defaultCallScreening
UnflaggedApi: android.R.string#config_defaultDialer:
    New API must be flagged with @FlaggedApi: field android.R.string.config_defaultDialer
UnflaggedApi: android.R.string#config_defaultNotes:
    New API must be flagged with @FlaggedApi: field android.R.string.config_defaultNotes
UnflaggedApi: android.R.string#config_defaultRetailDemo:
    New API must be flagged with @FlaggedApi: field android.R.string.config_defaultRetailDemo
UnflaggedApi: android.R.string#config_defaultSms:
    New API must be flagged with @FlaggedApi: field android.R.string.config_defaultSms
UnflaggedApi: android.R.string#config_devicePolicyManagement:
    New API must be flagged with @FlaggedApi: field android.R.string.config_devicePolicyManagement
UnflaggedApi: android.R.string#config_feedbackIntentExtraKey:
    New API must be flagged with @FlaggedApi: field android.R.string.config_feedbackIntentExtraKey
UnflaggedApi: android.R.string#config_feedbackIntentNameKey:
    New API must be flagged with @FlaggedApi: field android.R.string.config_feedbackIntentNameKey
UnflaggedApi: android.R.string#config_helpIntentExtraKey:
    New API must be flagged with @FlaggedApi: field android.R.string.config_helpIntentExtraKey
UnflaggedApi: android.R.string#config_helpIntentNameKey:
    New API must be flagged with @FlaggedApi: field android.R.string.config_helpIntentNameKey
UnflaggedApi: android.R.string#config_helpPackageNameKey:
    New API must be flagged with @FlaggedApi: field android.R.string.config_helpPackageNameKey
UnflaggedApi: android.R.string#config_helpPackageNameValue:
    New API must be flagged with @FlaggedApi: field android.R.string.config_helpPackageNameValue
UnflaggedApi: android.R.string#config_systemActivityRecognizer:
    New API must be flagged with @FlaggedApi: field android.R.string.config_systemActivityRecognizer
UnflaggedApi: android.R.string#config_systemAmbientAudioIntelligence:
    New API must be flagged with @FlaggedApi: field android.R.string.config_systemAmbientAudioIntelligence
UnflaggedApi: android.R.string#config_systemAppProtectionService:
    New API must be flagged with @FlaggedApi: field android.R.string.config_systemAppProtectionService
UnflaggedApi: android.R.string#config_systemAudioIntelligence:
    New API must be flagged with @FlaggedApi: field android.R.string.config_systemAudioIntelligence
UnflaggedApi: android.R.string#config_systemAutomotiveCalendarSyncManager:
    New API must be flagged with @FlaggedApi: field android.R.string.config_systemAutomotiveCalendarSyncManager
UnflaggedApi: android.R.string#config_systemAutomotiveCluster:
    New API must be flagged with @FlaggedApi: field android.R.string.config_systemAutomotiveCluster
UnflaggedApi: android.R.string#config_systemAutomotiveProjection:
    New API must be flagged with @FlaggedApi: field android.R.string.config_systemAutomotiveProjection
UnflaggedApi: android.R.string#config_systemCallStreaming:
    New API must be flagged with @FlaggedApi: field android.R.string.config_systemCallStreaming
UnflaggedApi: android.R.string#config_systemCompanionDeviceProvider:
    New API must be flagged with @FlaggedApi: field android.R.string.config_systemCompanionDeviceProvider
UnflaggedApi: android.R.string#config_systemContacts:
    New API must be flagged with @FlaggedApi: field android.R.string.config_systemContacts
UnflaggedApi: android.R.string#config_systemFinancedDeviceController:
    New API must be flagged with @FlaggedApi: field android.R.string.config_systemFinancedDeviceController
UnflaggedApi: android.R.string#config_systemGallery:
    New API must be flagged with @FlaggedApi: field android.R.string.config_systemGallery
UnflaggedApi: android.R.string#config_systemNotificationIntelligence:
    New API must be flagged with @FlaggedApi: field android.R.string.config_systemNotificationIntelligence
UnflaggedApi: android.R.string#config_systemSettingsIntelligence:
    New API must be flagged with @FlaggedApi: field android.R.string.config_systemSettingsIntelligence
UnflaggedApi: android.R.string#config_systemShell:
    New API must be flagged with @FlaggedApi: field android.R.string.config_systemShell
UnflaggedApi: android.R.string#config_systemSpeechRecognizer:
    New API must be flagged with @FlaggedApi: field android.R.string.config_systemSpeechRecognizer
UnflaggedApi: android.R.string#config_systemSupervision:
    New API must be flagged with @FlaggedApi: field android.R.string.config_systemSupervision
UnflaggedApi: android.R.string#config_systemTelevisionNotificationHandler:
    New API must be flagged with @FlaggedApi: field android.R.string.config_systemTelevisionNotificationHandler
UnflaggedApi: android.R.string#config_systemTextIntelligence:
    New API must be flagged with @FlaggedApi: field android.R.string.config_systemTextIntelligence
UnflaggedApi: android.R.string#config_systemUi:
    New API must be flagged with @FlaggedApi: field android.R.string.config_systemUi
UnflaggedApi: android.R.string#config_systemUiIntelligence:
    New API must be flagged with @FlaggedApi: field android.R.string.config_systemUiIntelligence
UnflaggedApi: android.R.string#config_systemVisualIntelligence:
    New API must be flagged with @FlaggedApi: field android.R.string.config_systemVisualIntelligence
UnflaggedApi: android.R.string#config_systemWearHealthService:
    New API must be flagged with @FlaggedApi: field android.R.string.config_systemWearHealthService
UnflaggedApi: android.R.string#config_systemWellbeing:
    New API must be flagged with @FlaggedApi: field android.R.string.config_systemWellbeing
UnflaggedApi: android.R.string#config_systemWifiCoexManager:
    New API must be flagged with @FlaggedApi: field android.R.string.config_systemWifiCoexManager
UnflaggedApi: android.R.string#safety_protection_display_text:
    New API must be flagged with @FlaggedApi: field android.R.string.safety_protection_display_text
UnflaggedApi: android.R.style#Theme_DeviceDefault_DocumentsUI:
    New API must be flagged with @FlaggedApi: field android.R.style.Theme_DeviceDefault_DocumentsUI
UnflaggedApi: android.R.style#Theme_Leanback_FormWizard:
    New API must be flagged with @FlaggedApi: field android.R.style.Theme_Leanback_FormWizard
UnflaggedApi: android.app.ActivityManager#getExternalHistoricalProcessStartReasons(String, int):
    New API must be flagged with @FlaggedApi: method android.app.ActivityManager.getExternalHistoricalProcessStartReasons(String,int)
UnflaggedApi: android.app.AppOpsManager#OPSTR_RECEIVE_SANDBOX_TRIGGER_AUDIO:
    New API must be flagged with @FlaggedApi: field android.app.AppOpsManager.OPSTR_RECEIVE_SANDBOX_TRIGGER_AUDIO
UnflaggedApi: android.app.AppOpsManager.AttributedHistoricalOps#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.AppOpsManager.AttributedHistoricalOps.equals(Object)
UnflaggedApi: android.app.AppOpsManager.AttributedHistoricalOps#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.AppOpsManager.AttributedHistoricalOps.hashCode()
UnflaggedApi: android.app.AppOpsManager.HistoricalOp#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.AppOpsManager.HistoricalOp.equals(Object)
UnflaggedApi: android.app.AppOpsManager.HistoricalOp#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.AppOpsManager.HistoricalOp.hashCode()
UnflaggedApi: android.app.AppOpsManager.HistoricalOps#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.AppOpsManager.HistoricalOps.equals(Object)
UnflaggedApi: android.app.AppOpsManager.HistoricalOps#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.AppOpsManager.HistoricalOps.hashCode()
UnflaggedApi: android.app.AppOpsManager.HistoricalOps#toString():
    New API must be flagged with @FlaggedApi: method android.app.AppOpsManager.HistoricalOps.toString()
UnflaggedApi: android.app.AppOpsManager.HistoricalPackageOps#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.AppOpsManager.HistoricalPackageOps.equals(Object)
UnflaggedApi: android.app.AppOpsManager.HistoricalPackageOps#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.AppOpsManager.HistoricalPackageOps.hashCode()
UnflaggedApi: android.app.AppOpsManager.HistoricalUidOps#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.AppOpsManager.HistoricalUidOps.equals(Object)
UnflaggedApi: android.app.AppOpsManager.HistoricalUidOps#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.AppOpsManager.HistoricalUidOps.hashCode()
UnflaggedApi: android.app.GameModeConfiguration#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.GameModeConfiguration.equals(Object)
UnflaggedApi: android.app.GameModeConfiguration#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.GameModeConfiguration.hashCode()
UnflaggedApi: android.app.StatusBarManager.DisableInfo#toString():
    New API must be flagged with @FlaggedApi: method android.app.StatusBarManager.DisableInfo.toString()
UnflaggedApi: android.app.Vr2dDisplayProperties#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.Vr2dDisplayProperties.equals(Object)
UnflaggedApi: android.app.Vr2dDisplayProperties#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.Vr2dDisplayProperties.hashCode()
UnflaggedApi: android.app.Vr2dDisplayProperties#toString():
    New API must be flagged with @FlaggedApi: method android.app.Vr2dDisplayProperties.toString()
UnflaggedApi: android.app.admin.AccountTypePolicyKey#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.admin.AccountTypePolicyKey.equals(Object)
UnflaggedApi: android.app.admin.AccountTypePolicyKey#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.admin.AccountTypePolicyKey.hashCode()
UnflaggedApi: android.app.admin.AccountTypePolicyKey#toString():
    New API must be flagged with @FlaggedApi: method android.app.admin.AccountTypePolicyKey.toString()
UnflaggedApi: android.app.admin.Authority#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.admin.Authority.equals(Object)
UnflaggedApi: android.app.admin.Authority#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.admin.Authority.hashCode()
UnflaggedApi: android.app.admin.DeviceAdminAuthority#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.admin.DeviceAdminAuthority.equals(Object)
UnflaggedApi: android.app.admin.DeviceAdminAuthority#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.admin.DeviceAdminAuthority.hashCode()
UnflaggedApi: android.app.admin.DeviceAdminAuthority#toString():
    New API must be flagged with @FlaggedApi: method android.app.admin.DeviceAdminAuthority.toString()
UnflaggedApi: android.app.admin.DevicePolicyDrawableResource#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.admin.DevicePolicyDrawableResource.equals(Object)
UnflaggedApi: android.app.admin.DevicePolicyDrawableResource#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.admin.DevicePolicyDrawableResource.hashCode()
UnflaggedApi: android.app.admin.DevicePolicyKeyguardService#onDestroy():
    New API must be flagged with @FlaggedApi: method android.app.admin.DevicePolicyKeyguardService.onDestroy()
UnflaggedApi: android.app.admin.DevicePolicyResources.Strings:
    New API must be flagged with @FlaggedApi: class android.app.admin.DevicePolicyResources.Strings
UnflaggedApi: android.app.admin.DevicePolicyResources.Strings.DefaultAppSettings:
    New API must be flagged with @FlaggedApi: class android.app.admin.DevicePolicyResources.Strings.DefaultAppSettings
UnflaggedApi: android.app.admin.DevicePolicyResources.Strings.DefaultAppSettings#HOME_MISSING_WORK_PROFILE_SUPPORT_MESSAGE:
    New API must be flagged with @FlaggedApi: field android.app.admin.DevicePolicyResources.Strings.DefaultAppSettings.HOME_MISSING_WORK_PROFILE_SUPPORT_MESSAGE
UnflaggedApi: android.app.admin.DevicePolicyResources.Strings.DefaultAppSettings#WORK_PROFILE_DEFAULT_APPS_TITLE:
    New API must be flagged with @FlaggedApi: field android.app.admin.DevicePolicyResources.Strings.DefaultAppSettings.WORK_PROFILE_DEFAULT_APPS_TITLE
UnflaggedApi: android.app.admin.DevicePolicyResources.Strings.PermissionSettings:
    New API must be flagged with @FlaggedApi: class android.app.admin.DevicePolicyResources.Strings.PermissionSettings
UnflaggedApi: android.app.admin.DevicePolicyResources.Strings.PermissionSettings#BACKGROUND_ACCESS_DISABLED_BY_ADMIN_MESSAGE:
    New API must be flagged with @FlaggedApi: field android.app.admin.DevicePolicyResources.Strings.PermissionSettings.BACKGROUND_ACCESS_DISABLED_BY_ADMIN_MESSAGE
UnflaggedApi: android.app.admin.DevicePolicyResources.Strings.PermissionSettings#BACKGROUND_ACCESS_ENABLED_BY_ADMIN_MESSAGE:
    New API must be flagged with @FlaggedApi: field android.app.admin.DevicePolicyResources.Strings.PermissionSettings.BACKGROUND_ACCESS_ENABLED_BY_ADMIN_MESSAGE
UnflaggedApi: android.app.admin.DevicePolicyResources.Strings.PermissionSettings#FOREGROUND_ACCESS_ENABLED_BY_ADMIN_MESSAGE:
    New API must be flagged with @FlaggedApi: field android.app.admin.DevicePolicyResources.Strings.PermissionSettings.FOREGROUND_ACCESS_ENABLED_BY_ADMIN_MESSAGE
UnflaggedApi: android.app.admin.DevicePolicyResources.Strings.PermissionSettings#LOCATION_AUTO_GRANTED_MESSAGE:
    New API must be flagged with @FlaggedApi: field android.app.admin.DevicePolicyResources.Strings.PermissionSettings.LOCATION_AUTO_GRANTED_MESSAGE
UnflaggedApi: android.app.admin.DevicePolicyState#toString():
    New API must be flagged with @FlaggedApi: method android.app.admin.DevicePolicyState.toString()
UnflaggedApi: android.app.admin.DevicePolicyStringResource#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.admin.DevicePolicyStringResource.equals(Object)
UnflaggedApi: android.app.admin.DevicePolicyStringResource#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.admin.DevicePolicyStringResource.hashCode()
UnflaggedApi: android.app.admin.DpcAuthority#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.admin.DpcAuthority.equals(Object)
UnflaggedApi: android.app.admin.DpcAuthority#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.admin.DpcAuthority.hashCode()
UnflaggedApi: android.app.admin.DpcAuthority#toString():
    New API must be flagged with @FlaggedApi: method android.app.admin.DpcAuthority.toString()
UnflaggedApi: android.app.admin.EnforcingAdmin#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.admin.EnforcingAdmin.equals(Object)
UnflaggedApi: android.app.admin.EnforcingAdmin#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.admin.EnforcingAdmin.hashCode()
UnflaggedApi: android.app.admin.EnforcingAdmin#toString():
    New API must be flagged with @FlaggedApi: method android.app.admin.EnforcingAdmin.toString()
UnflaggedApi: android.app.admin.IntentFilterPolicyKey#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.admin.IntentFilterPolicyKey.equals(Object)
UnflaggedApi: android.app.admin.IntentFilterPolicyKey#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.admin.IntentFilterPolicyKey.hashCode()
UnflaggedApi: android.app.admin.IntentFilterPolicyKey#toString():
    New API must be flagged with @FlaggedApi: method android.app.admin.IntentFilterPolicyKey.toString()
UnflaggedApi: android.app.admin.LockTaskPolicy#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.admin.LockTaskPolicy.equals(Object)
UnflaggedApi: android.app.admin.LockTaskPolicy#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.admin.LockTaskPolicy.hashCode()
UnflaggedApi: android.app.admin.LockTaskPolicy#toString():
    New API must be flagged with @FlaggedApi: method android.app.admin.LockTaskPolicy.toString()
UnflaggedApi: android.app.admin.NoArgsPolicyKey#toString():
    New API must be flagged with @FlaggedApi: method android.app.admin.NoArgsPolicyKey.toString()
UnflaggedApi: android.app.admin.PackagePermissionPolicyKey#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.admin.PackagePermissionPolicyKey.equals(Object)
UnflaggedApi: android.app.admin.PackagePermissionPolicyKey#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.admin.PackagePermissionPolicyKey.hashCode()
UnflaggedApi: android.app.admin.PackagePermissionPolicyKey#toString():
    New API must be flagged with @FlaggedApi: method android.app.admin.PackagePermissionPolicyKey.toString()
UnflaggedApi: android.app.admin.PackagePolicyKey#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.admin.PackagePolicyKey.equals(Object)
UnflaggedApi: android.app.admin.PackagePolicyKey#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.admin.PackagePolicyKey.hashCode()
UnflaggedApi: android.app.admin.PackagePolicyKey#toString():
    New API must be flagged with @FlaggedApi: method android.app.admin.PackagePolicyKey.toString()
UnflaggedApi: android.app.admin.PolicyKey#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.admin.PolicyKey.equals(Object)
UnflaggedApi: android.app.admin.PolicyKey#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.admin.PolicyKey.hashCode()
UnflaggedApi: android.app.admin.PolicyState#toString():
    New API must be flagged with @FlaggedApi: method android.app.admin.PolicyState.toString()
UnflaggedApi: android.app.admin.RoleAuthority#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.admin.RoleAuthority.equals(Object)
UnflaggedApi: android.app.admin.RoleAuthority#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.admin.RoleAuthority.hashCode()
UnflaggedApi: android.app.admin.RoleAuthority#toString():
    New API must be flagged with @FlaggedApi: method android.app.admin.RoleAuthority.toString()
UnflaggedApi: android.app.admin.UnknownAuthority#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.admin.UnknownAuthority.equals(Object)
UnflaggedApi: android.app.admin.UnknownAuthority#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.admin.UnknownAuthority.hashCode()
UnflaggedApi: android.app.admin.UnknownAuthority#toString():
    New API must be flagged with @FlaggedApi: method android.app.admin.UnknownAuthority.toString()
UnflaggedApi: android.app.admin.UserRestrictionPolicyKey#toString():
    New API must be flagged with @FlaggedApi: method android.app.admin.UserRestrictionPolicyKey.toString()
UnflaggedApi: android.app.ambientcontext.AmbientContextEvent#toString():
    New API must be flagged with @FlaggedApi: method android.app.ambientcontext.AmbientContextEvent.toString()
UnflaggedApi: android.app.ambientcontext.AmbientContextEventRequest#toString():
    New API must be flagged with @FlaggedApi: method android.app.ambientcontext.AmbientContextEventRequest.toString()
UnflaggedApi: android.app.assist.ActivityId#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.assist.ActivityId.equals(Object)
UnflaggedApi: android.app.assist.ActivityId#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.assist.ActivityId.hashCode()
UnflaggedApi: android.app.assist.ActivityId#toString():
    New API must be flagged with @FlaggedApi: method android.app.assist.ActivityId.toString()
UnflaggedApi: android.app.assist.AssistStructure.ViewNode#ViewNode():
    New API must be flagged with @FlaggedApi: constructor android.app.assist.AssistStructure.ViewNode()
UnflaggedApi: android.app.backup.RestoreDescription#toString():
    New API must be flagged with @FlaggedApi: method android.app.backup.RestoreDescription.toString()
UnflaggedApi: android.app.cloudsearch.SearchRequest#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.cloudsearch.SearchRequest.equals(Object)
UnflaggedApi: android.app.cloudsearch.SearchRequest#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.cloudsearch.SearchRequest.hashCode()
UnflaggedApi: android.app.cloudsearch.SearchRequest#toString():
    New API must be flagged with @FlaggedApi: method android.app.cloudsearch.SearchRequest.toString()
UnflaggedApi: android.app.cloudsearch.SearchResponse#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.cloudsearch.SearchResponse.equals(Object)
UnflaggedApi: android.app.cloudsearch.SearchResponse#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.cloudsearch.SearchResponse.hashCode()
UnflaggedApi: android.app.cloudsearch.SearchResult#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.cloudsearch.SearchResult.equals(Object)
UnflaggedApi: android.app.cloudsearch.SearchResult#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.cloudsearch.SearchResult.hashCode()
UnflaggedApi: android.app.prediction.AppPredictionContext#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.prediction.AppPredictionContext.equals(Object)
UnflaggedApi: android.app.prediction.AppPredictionSessionId#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.prediction.AppPredictionSessionId.equals(Object)
UnflaggedApi: android.app.prediction.AppPredictionSessionId#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.prediction.AppPredictionSessionId.hashCode()
UnflaggedApi: android.app.prediction.AppPredictionSessionId#toString():
    New API must be flagged with @FlaggedApi: method android.app.prediction.AppPredictionSessionId.toString()
UnflaggedApi: android.app.prediction.AppPredictor#finalize():
    New API must be flagged with @FlaggedApi: method android.app.prediction.AppPredictor.finalize()
UnflaggedApi: android.app.prediction.AppTarget#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.prediction.AppTarget.equals(Object)
UnflaggedApi: android.app.prediction.AppTargetEvent#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.prediction.AppTargetEvent.equals(Object)
UnflaggedApi: android.app.prediction.AppTargetId#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.prediction.AppTargetId.equals(Object)
UnflaggedApi: android.app.prediction.AppTargetId#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.prediction.AppTargetId.hashCode()
UnflaggedApi: android.app.search.SearchAction#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.search.SearchAction.equals(Object)
UnflaggedApi: android.app.search.SearchAction#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.search.SearchAction.hashCode()
UnflaggedApi: android.app.search.SearchAction#toString():
    New API must be flagged with @FlaggedApi: method android.app.search.SearchAction.toString()
UnflaggedApi: android.app.search.SearchSessionId#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.search.SearchSessionId.equals(Object)
UnflaggedApi: android.app.search.SearchSessionId#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.search.SearchSessionId.hashCode()
UnflaggedApi: android.app.search.SearchSessionId#toString():
    New API must be flagged with @FlaggedApi: method android.app.search.SearchSessionId.toString()
UnflaggedApi: android.app.search.SearchTargetEvent#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.search.SearchTargetEvent.equals(Object)
UnflaggedApi: android.app.search.SearchTargetEvent#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.search.SearchTargetEvent.hashCode()
UnflaggedApi: android.app.smartspace.SmartspaceAction#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.smartspace.SmartspaceAction.equals(Object)
UnflaggedApi: android.app.smartspace.SmartspaceAction#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.SmartspaceAction.hashCode()
UnflaggedApi: android.app.smartspace.SmartspaceAction#toString():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.SmartspaceAction.toString()
UnflaggedApi: android.app.smartspace.SmartspaceConfig#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.smartspace.SmartspaceConfig.equals(Object)
UnflaggedApi: android.app.smartspace.SmartspaceConfig#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.SmartspaceConfig.hashCode()
UnflaggedApi: android.app.smartspace.SmartspaceSessionId#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.smartspace.SmartspaceSessionId.equals(Object)
UnflaggedApi: android.app.smartspace.SmartspaceSessionId#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.SmartspaceSessionId.hashCode()
UnflaggedApi: android.app.smartspace.SmartspaceSessionId#toString():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.SmartspaceSessionId.toString()
UnflaggedApi: android.app.smartspace.SmartspaceTarget#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.smartspace.SmartspaceTarget.equals(Object)
UnflaggedApi: android.app.smartspace.SmartspaceTarget#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.SmartspaceTarget.hashCode()
UnflaggedApi: android.app.smartspace.SmartspaceTarget#toString():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.SmartspaceTarget.toString()
UnflaggedApi: android.app.smartspace.SmartspaceTargetEvent#toString():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.SmartspaceTargetEvent.toString()
UnflaggedApi: android.app.smartspace.uitemplatedata.BaseTemplateData#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.BaseTemplateData.equals(Object)
UnflaggedApi: android.app.smartspace.uitemplatedata.BaseTemplateData#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.BaseTemplateData.hashCode()
UnflaggedApi: android.app.smartspace.uitemplatedata.BaseTemplateData#toString():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.BaseTemplateData.toString()
UnflaggedApi: android.app.smartspace.uitemplatedata.BaseTemplateData.SubItemInfo#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.BaseTemplateData.SubItemInfo.equals(Object)
UnflaggedApi: android.app.smartspace.uitemplatedata.BaseTemplateData.SubItemInfo#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.BaseTemplateData.SubItemInfo.hashCode()
UnflaggedApi: android.app.smartspace.uitemplatedata.BaseTemplateData.SubItemInfo#toString():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.BaseTemplateData.SubItemInfo.toString()
UnflaggedApi: android.app.smartspace.uitemplatedata.BaseTemplateData.SubItemLoggingInfo#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.BaseTemplateData.SubItemLoggingInfo.equals(Object)
UnflaggedApi: android.app.smartspace.uitemplatedata.BaseTemplateData.SubItemLoggingInfo#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.BaseTemplateData.SubItemLoggingInfo.hashCode()
UnflaggedApi: android.app.smartspace.uitemplatedata.BaseTemplateData.SubItemLoggingInfo#toString():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.BaseTemplateData.SubItemLoggingInfo.toString()
UnflaggedApi: android.app.smartspace.uitemplatedata.CarouselTemplateData#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.CarouselTemplateData.equals(Object)
UnflaggedApi: android.app.smartspace.uitemplatedata.CarouselTemplateData#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.CarouselTemplateData.hashCode()
UnflaggedApi: android.app.smartspace.uitemplatedata.CarouselTemplateData#toString():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.CarouselTemplateData.toString()
UnflaggedApi: android.app.smartspace.uitemplatedata.CarouselTemplateData.CarouselItem#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.CarouselTemplateData.CarouselItem.equals(Object)
UnflaggedApi: android.app.smartspace.uitemplatedata.CarouselTemplateData.CarouselItem#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.CarouselTemplateData.CarouselItem.hashCode()
UnflaggedApi: android.app.smartspace.uitemplatedata.CarouselTemplateData.CarouselItem#toString():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.CarouselTemplateData.CarouselItem.toString()
UnflaggedApi: android.app.smartspace.uitemplatedata.CombinedCardsTemplateData#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.CombinedCardsTemplateData.equals(Object)
UnflaggedApi: android.app.smartspace.uitemplatedata.CombinedCardsTemplateData#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.CombinedCardsTemplateData.hashCode()
UnflaggedApi: android.app.smartspace.uitemplatedata.CombinedCardsTemplateData#toString():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.CombinedCardsTemplateData.toString()
UnflaggedApi: android.app.smartspace.uitemplatedata.HeadToHeadTemplateData#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.HeadToHeadTemplateData.equals(Object)
UnflaggedApi: android.app.smartspace.uitemplatedata.HeadToHeadTemplateData#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.HeadToHeadTemplateData.hashCode()
UnflaggedApi: android.app.smartspace.uitemplatedata.HeadToHeadTemplateData#toString():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.HeadToHeadTemplateData.toString()
UnflaggedApi: android.app.smartspace.uitemplatedata.Icon#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.Icon.equals(Object)
UnflaggedApi: android.app.smartspace.uitemplatedata.Icon#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.Icon.hashCode()
UnflaggedApi: android.app.smartspace.uitemplatedata.Icon#toString():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.Icon.toString()
UnflaggedApi: android.app.smartspace.uitemplatedata.SubCardTemplateData#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.SubCardTemplateData.equals(Object)
UnflaggedApi: android.app.smartspace.uitemplatedata.SubCardTemplateData#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.SubCardTemplateData.hashCode()
UnflaggedApi: android.app.smartspace.uitemplatedata.SubCardTemplateData#toString():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.SubCardTemplateData.toString()
UnflaggedApi: android.app.smartspace.uitemplatedata.SubImageTemplateData#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.SubImageTemplateData.equals(Object)
UnflaggedApi: android.app.smartspace.uitemplatedata.SubImageTemplateData#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.SubImageTemplateData.hashCode()
UnflaggedApi: android.app.smartspace.uitemplatedata.SubImageTemplateData#toString():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.SubImageTemplateData.toString()
UnflaggedApi: android.app.smartspace.uitemplatedata.SubListTemplateData#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.SubListTemplateData.equals(Object)
UnflaggedApi: android.app.smartspace.uitemplatedata.SubListTemplateData#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.SubListTemplateData.hashCode()
UnflaggedApi: android.app.smartspace.uitemplatedata.SubListTemplateData#toString():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.SubListTemplateData.toString()
UnflaggedApi: android.app.smartspace.uitemplatedata.TapAction#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.TapAction.equals(Object)
UnflaggedApi: android.app.smartspace.uitemplatedata.TapAction#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.TapAction.hashCode()
UnflaggedApi: android.app.smartspace.uitemplatedata.TapAction#toString():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.TapAction.toString()
UnflaggedApi: android.app.smartspace.uitemplatedata.Text#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.Text.equals(Object)
UnflaggedApi: android.app.smartspace.uitemplatedata.Text#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.Text.hashCode()
UnflaggedApi: android.app.smartspace.uitemplatedata.Text#toString():
    New API must be flagged with @FlaggedApi: method android.app.smartspace.uitemplatedata.Text.toString()
UnflaggedApi: android.app.time.ExternalTimeSuggestion#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.time.ExternalTimeSuggestion.equals(Object)
UnflaggedApi: android.app.time.ExternalTimeSuggestion#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.time.ExternalTimeSuggestion.hashCode()
UnflaggedApi: android.app.time.ExternalTimeSuggestion#toString():
    New API must be flagged with @FlaggedApi: method android.app.time.ExternalTimeSuggestion.toString()
UnflaggedApi: android.app.time.TimeCapabilities#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.time.TimeCapabilities.equals(Object)
UnflaggedApi: android.app.time.TimeCapabilities#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.time.TimeCapabilities.hashCode()
UnflaggedApi: android.app.time.TimeCapabilities#toString():
    New API must be flagged with @FlaggedApi: method android.app.time.TimeCapabilities.toString()
UnflaggedApi: android.app.time.TimeCapabilitiesAndConfig#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.time.TimeCapabilitiesAndConfig.equals(Object)
UnflaggedApi: android.app.time.TimeCapabilitiesAndConfig#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.time.TimeCapabilitiesAndConfig.hashCode()
UnflaggedApi: android.app.time.TimeCapabilitiesAndConfig#toString():
    New API must be flagged with @FlaggedApi: method android.app.time.TimeCapabilitiesAndConfig.toString()
UnflaggedApi: android.app.time.TimeConfiguration#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.time.TimeConfiguration.equals(Object)
UnflaggedApi: android.app.time.TimeConfiguration#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.time.TimeConfiguration.hashCode()
UnflaggedApi: android.app.time.TimeConfiguration#toString():
    New API must be flagged with @FlaggedApi: method android.app.time.TimeConfiguration.toString()
UnflaggedApi: android.app.time.TimeState#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.time.TimeState.equals(Object)
UnflaggedApi: android.app.time.TimeState#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.time.TimeState.hashCode()
UnflaggedApi: android.app.time.TimeState#toString():
    New API must be flagged with @FlaggedApi: method android.app.time.TimeState.toString()
UnflaggedApi: android.app.time.TimeZoneCapabilities#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.time.TimeZoneCapabilities.equals(Object)
UnflaggedApi: android.app.time.TimeZoneCapabilities#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.time.TimeZoneCapabilities.hashCode()
UnflaggedApi: android.app.time.TimeZoneCapabilities#toString():
    New API must be flagged with @FlaggedApi: method android.app.time.TimeZoneCapabilities.toString()
UnflaggedApi: android.app.time.TimeZoneCapabilitiesAndConfig#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.time.TimeZoneCapabilitiesAndConfig.equals(Object)
UnflaggedApi: android.app.time.TimeZoneCapabilitiesAndConfig#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.time.TimeZoneCapabilitiesAndConfig.hashCode()
UnflaggedApi: android.app.time.TimeZoneCapabilitiesAndConfig#toString():
    New API must be flagged with @FlaggedApi: method android.app.time.TimeZoneCapabilitiesAndConfig.toString()
UnflaggedApi: android.app.time.TimeZoneConfiguration#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.time.TimeZoneConfiguration.equals(Object)
UnflaggedApi: android.app.time.TimeZoneConfiguration#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.time.TimeZoneConfiguration.hashCode()
UnflaggedApi: android.app.time.TimeZoneConfiguration#toString():
    New API must be flagged with @FlaggedApi: method android.app.time.TimeZoneConfiguration.toString()
UnflaggedApi: android.app.time.TimeZoneState#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.time.TimeZoneState.equals(Object)
UnflaggedApi: android.app.time.TimeZoneState#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.time.TimeZoneState.hashCode()
UnflaggedApi: android.app.time.TimeZoneState#toString():
    New API must be flagged with @FlaggedApi: method android.app.time.TimeZoneState.toString()
UnflaggedApi: android.app.time.UnixEpochTime#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.time.UnixEpochTime.equals(Object)
UnflaggedApi: android.app.time.UnixEpochTime#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.time.UnixEpochTime.hashCode()
UnflaggedApi: android.app.time.UnixEpochTime#toString():
    New API must be flagged with @FlaggedApi: method android.app.time.UnixEpochTime.toString()
UnflaggedApi: android.app.usage.BroadcastResponseStats#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.usage.BroadcastResponseStats.equals(Object)
UnflaggedApi: android.app.usage.BroadcastResponseStats#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.usage.BroadcastResponseStats.hashCode()
UnflaggedApi: android.app.usage.BroadcastResponseStats#toString():
    New API must be flagged with @FlaggedApi: method android.app.usage.BroadcastResponseStats.toString()
UnflaggedApi: android.app.usage.CacheQuotaHint#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.usage.CacheQuotaHint.equals(Object)
UnflaggedApi: android.app.usage.CacheQuotaHint#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.usage.CacheQuotaHint.hashCode()
UnflaggedApi: android.app.usage.CacheQuotaService#onCreate():
    New API must be flagged with @FlaggedApi: method android.app.usage.CacheQuotaService.onCreate()
UnflaggedApi: android.app.usage.UsageEvents.Event#NOTIFICATION_INTERRUPTION:
    New API must be flagged with @FlaggedApi: field android.app.usage.UsageEvents.Event.NOTIFICATION_INTERRUPTION
UnflaggedApi: android.app.usage.UsageEvents.Event#NOTIFICATION_SEEN:
    New API must be flagged with @FlaggedApi: field android.app.usage.UsageEvents.Event.NOTIFICATION_SEEN
UnflaggedApi: android.app.usage.UsageEvents.Event#SLICE_PINNED:
    New API must be flagged with @FlaggedApi: field android.app.usage.UsageEvents.Event.SLICE_PINNED
UnflaggedApi: android.app.usage.UsageEvents.Event#SLICE_PINNED_PRIV:
    New API must be flagged with @FlaggedApi: field android.app.usage.UsageEvents.Event.SLICE_PINNED_PRIV
UnflaggedApi: android.app.usage.UsageEvents.Event#SYSTEM_INTERACTION:
    New API must be flagged with @FlaggedApi: field android.app.usage.UsageEvents.Event.SYSTEM_INTERACTION
UnflaggedApi: android.app.usage.UsageEvents.Event#getInstanceId():
    New API must be flagged with @FlaggedApi: method android.app.usage.UsageEvents.Event.getInstanceId()
UnflaggedApi: android.app.usage.UsageEvents.Event#getNotificationChannelId():
    New API must be flagged with @FlaggedApi: method android.app.usage.UsageEvents.Event.getNotificationChannelId()
UnflaggedApi: android.app.usage.UsageEvents.Event#getTaskRootClassName():
    New API must be flagged with @FlaggedApi: method android.app.usage.UsageEvents.Event.getTaskRootClassName()
UnflaggedApi: android.app.usage.UsageEvents.Event#getTaskRootPackageName():
    New API must be flagged with @FlaggedApi: method android.app.usage.UsageEvents.Event.getTaskRootPackageName()
UnflaggedApi: android.app.usage.UsageEvents.Event#isInstantApp():
    New API must be flagged with @FlaggedApi: method android.app.usage.UsageEvents.Event.isInstantApp()
UnflaggedApi: android.app.wallpapereffectsgeneration.CinematicEffectRequest#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.wallpapereffectsgeneration.CinematicEffectRequest.equals(Object)
UnflaggedApi: android.app.wallpapereffectsgeneration.CinematicEffectRequest#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.wallpapereffectsgeneration.CinematicEffectRequest.hashCode()
UnflaggedApi: android.app.wallpapereffectsgeneration.CinematicEffectResponse#equals(Object):
    New API must be flagged with @FlaggedApi: method android.app.wallpapereffectsgeneration.CinematicEffectResponse.equals(Object)
UnflaggedApi: android.app.wallpapereffectsgeneration.CinematicEffectResponse#hashCode():
    New API must be flagged with @FlaggedApi: method android.app.wallpapereffectsgeneration.CinematicEffectResponse.hashCode()
UnflaggedApi: android.companion.virtual.VirtualDeviceManager.VirtualDevice#getPersistentDeviceId():
    New API must be flagged with @FlaggedApi: method android.companion.virtual.VirtualDeviceManager.VirtualDevice.getPersistentDeviceId()
UnflaggedApi: android.companion.virtual.VirtualDeviceParams#equals(Object):
    New API must be flagged with @FlaggedApi: method android.companion.virtual.VirtualDeviceParams.equals(Object)
UnflaggedApi: android.companion.virtual.VirtualDeviceParams#hashCode():
    New API must be flagged with @FlaggedApi: method android.companion.virtual.VirtualDeviceParams.hashCode()
UnflaggedApi: android.companion.virtual.VirtualDeviceParams#toString():
    New API must be flagged with @FlaggedApi: method android.companion.virtual.VirtualDeviceParams.toString()
UnflaggedApi: android.companion.virtual.sensor.VirtualSensorConfig#toString():
    New API must be flagged with @FlaggedApi: method android.companion.virtual.sensor.VirtualSensorConfig.toString()
UnflaggedApi: android.content.Intent#ACTION_UNARCHIVE_PACKAGE:
    New API must be flagged with @FlaggedApi: field android.content.Intent.ACTION_UNARCHIVE_PACKAGE
UnflaggedApi: android.content.integrity.Rule#equals(Object):
    New API must be flagged with @FlaggedApi: method android.content.integrity.Rule.equals(Object)
UnflaggedApi: android.content.integrity.Rule#hashCode():
    New API must be flagged with @FlaggedApi: method android.content.integrity.Rule.hashCode()
UnflaggedApi: android.content.integrity.Rule#toString():
    New API must be flagged with @FlaggedApi: method android.content.integrity.Rule.toString()
UnflaggedApi: android.content.pm.PackageArchiver:
    New API must be flagged with @FlaggedApi: class android.content.pm.PackageArchiver
UnflaggedApi: android.content.pm.PackageArchiver#EXTRA_UNARCHIVE_ALL_USERS:
    New API must be flagged with @FlaggedApi: field android.content.pm.PackageArchiver.EXTRA_UNARCHIVE_ALL_USERS
UnflaggedApi: android.content.pm.PackageArchiver#EXTRA_UNARCHIVE_PACKAGE_NAME:
    New API must be flagged with @FlaggedApi: field android.content.pm.PackageArchiver.EXTRA_UNARCHIVE_PACKAGE_NAME
UnflaggedApi: android.content.pm.PackageArchiver#requestArchive(String, android.content.IntentSender):
    New API must be flagged with @FlaggedApi: method android.content.pm.PackageArchiver.requestArchive(String,android.content.IntentSender)
UnflaggedApi: android.content.pm.PackageArchiver#requestUnarchive(String):
    New API must be flagged with @FlaggedApi: method android.content.pm.PackageArchiver.requestUnarchive(String)
UnflaggedApi: android.content.pm.PackageInfo#isArchived:
    New API must be flagged with @FlaggedApi: field android.content.pm.PackageInfo.isArchived
UnflaggedApi: android.content.pm.PackageInstaller#readInstallInfo(android.os.ParcelFileDescriptor, String, int):
    New API must be flagged with @FlaggedApi: method android.content.pm.PackageInstaller.readInstallInfo(android.os.ParcelFileDescriptor,String,int)
UnflaggedApi: android.content.pm.PackageInstaller.InstallInfo#calculateInstalledSize(android.content.pm.PackageInstaller.SessionParams, android.os.ParcelFileDescriptor):
    New API must be flagged with @FlaggedApi: method android.content.pm.PackageInstaller.InstallInfo.calculateInstalledSize(android.content.pm.PackageInstaller.SessionParams,android.os.ParcelFileDescriptor)
UnflaggedApi: android.content.pm.PackageInstaller.SessionInfo#getResolvedBaseApkPath():
    New API must be flagged with @FlaggedApi: method android.content.pm.PackageInstaller.SessionInfo.getResolvedBaseApkPath()
UnflaggedApi: android.content.pm.PackageManager#EXTRA_REQUEST_PERMISSIONS_DEVICE_ID:
    New API must be flagged with @FlaggedApi: field android.content.pm.PackageManager.EXTRA_REQUEST_PERMISSIONS_DEVICE_ID
UnflaggedApi: android.content.pm.PackageManager#MATCH_ARCHIVED_PACKAGES:
    New API must be flagged with @FlaggedApi: field android.content.pm.PackageManager.MATCH_ARCHIVED_PACKAGES
UnflaggedApi: android.content.pm.PackageManager#getPackageArchiver():
    New API must be flagged with @FlaggedApi: method android.content.pm.PackageManager.getPackageArchiver()
UnflaggedApi: android.content.pm.SuspendDialogInfo#equals(Object):
    New API must be flagged with @FlaggedApi: method android.content.pm.SuspendDialogInfo.equals(Object)
UnflaggedApi: android.content.pm.SuspendDialogInfo#hashCode():
    New API must be flagged with @FlaggedApi: method android.content.pm.SuspendDialogInfo.hashCode()
UnflaggedApi: android.content.pm.SuspendDialogInfo#toString():
    New API must be flagged with @FlaggedApi: method android.content.pm.SuspendDialogInfo.toString()
UnflaggedApi: android.content.pm.UserProperties#toString():
    New API must be flagged with @FlaggedApi: method android.content.pm.UserProperties.toString()
UnflaggedApi: android.content.pm.verify.domain.DomainOwner#equals(Object):
    New API must be flagged with @FlaggedApi: method android.content.pm.verify.domain.DomainOwner.equals(Object)
UnflaggedApi: android.content.pm.verify.domain.DomainOwner#hashCode():
    New API must be flagged with @FlaggedApi: method android.content.pm.verify.domain.DomainOwner.hashCode()
UnflaggedApi: android.content.pm.verify.domain.DomainOwner#toString():
    New API must be flagged with @FlaggedApi: method android.content.pm.verify.domain.DomainOwner.toString()
UnflaggedApi: android.content.pm.verify.domain.DomainVerificationInfo#equals(Object):
    New API must be flagged with @FlaggedApi: method android.content.pm.verify.domain.DomainVerificationInfo.equals(Object)
UnflaggedApi: android.content.pm.verify.domain.DomainVerificationInfo#hashCode():
    New API must be flagged with @FlaggedApi: method android.content.pm.verify.domain.DomainVerificationInfo.hashCode()
UnflaggedApi: android.content.pm.verify.domain.DomainVerificationInfo#toString():
    New API must be flagged with @FlaggedApi: method android.content.pm.verify.domain.DomainVerificationInfo.toString()
UnflaggedApi: android.content.pm.verify.domain.DomainVerificationRequest#equals(Object):
    New API must be flagged with @FlaggedApi: method android.content.pm.verify.domain.DomainVerificationRequest.equals(Object)
UnflaggedApi: android.content.pm.verify.domain.DomainVerificationRequest#hashCode():
    New API must be flagged with @FlaggedApi: method android.content.pm.verify.domain.DomainVerificationRequest.hashCode()
UnflaggedApi: android.hardware.biometrics.BiometricManager.Authenticators#BIOMETRIC_CONVENIENCE:
    New API must be flagged with @FlaggedApi: field android.hardware.biometrics.BiometricManager.Authenticators.BIOMETRIC_CONVENIENCE
UnflaggedApi: android.hardware.biometrics.BiometricManager.Authenticators#EMPTY_SET:
    New API must be flagged with @FlaggedApi: field android.hardware.biometrics.BiometricManager.Authenticators.EMPTY_SET
UnflaggedApi: android.hardware.display.AmbientBrightnessDayStats#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.display.AmbientBrightnessDayStats.equals(Object)
UnflaggedApi: android.hardware.display.AmbientBrightnessDayStats#hashCode():
    New API must be flagged with @FlaggedApi: method android.hardware.display.AmbientBrightnessDayStats.hashCode()
UnflaggedApi: android.hardware.display.AmbientBrightnessDayStats#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.display.AmbientBrightnessDayStats.toString()
UnflaggedApi: android.hardware.display.BrightnessChangeEvent#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.display.BrightnessChangeEvent.toString()
UnflaggedApi: android.hardware.display.BrightnessConfiguration#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.display.BrightnessConfiguration.equals(Object)
UnflaggedApi: android.hardware.display.BrightnessConfiguration#hashCode():
    New API must be flagged with @FlaggedApi: method android.hardware.display.BrightnessConfiguration.hashCode()
UnflaggedApi: android.hardware.display.BrightnessConfiguration#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.display.BrightnessConfiguration.toString()
UnflaggedApi: android.hardware.display.BrightnessCorrection#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.display.BrightnessCorrection.equals(Object)
UnflaggedApi: android.hardware.display.BrightnessCorrection#hashCode():
    New API must be flagged with @FlaggedApi: method android.hardware.display.BrightnessCorrection.hashCode()
UnflaggedApi: android.hardware.display.BrightnessCorrection#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.display.BrightnessCorrection.toString()
UnflaggedApi: android.hardware.hdmi.HdmiDeviceInfo#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.hdmi.HdmiDeviceInfo.equals(Object)
UnflaggedApi: android.hardware.hdmi.HdmiDeviceInfo#hashCode():
    New API must be flagged with @FlaggedApi: method android.hardware.hdmi.HdmiDeviceInfo.hashCode()
UnflaggedApi: android.hardware.hdmi.HdmiDeviceInfo#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.hdmi.HdmiDeviceInfo.toString()
UnflaggedApi: android.hardware.hdmi.HdmiPortInfo#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.hdmi.HdmiPortInfo.equals(Object)
UnflaggedApi: android.hardware.hdmi.HdmiPortInfo#hashCode():
    New API must be flagged with @FlaggedApi: method android.hardware.hdmi.HdmiPortInfo.hashCode()
UnflaggedApi: android.hardware.hdmi.HdmiPortInfo#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.hdmi.HdmiPortInfo.toString()
UnflaggedApi: android.hardware.location.ContextHubClient#finalize():
    New API must be flagged with @FlaggedApi: method android.hardware.location.ContextHubClient.finalize()
UnflaggedApi: android.hardware.location.ContextHubInfo#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.location.ContextHubInfo.equals(Object)
UnflaggedApi: android.hardware.location.ContextHubInfo#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.location.ContextHubInfo.toString()
UnflaggedApi: android.hardware.location.ContextHubIntentEvent#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.location.ContextHubIntentEvent.equals(Object)
UnflaggedApi: android.hardware.location.ContextHubIntentEvent#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.location.ContextHubIntentEvent.toString()
UnflaggedApi: android.hardware.location.ContextHubMessage#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.location.ContextHubMessage.toString()
UnflaggedApi: android.hardware.location.GeofenceHardwareMonitorEvent#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.location.GeofenceHardwareMonitorEvent.toString()
UnflaggedApi: android.hardware.location.MemoryRegion#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.location.MemoryRegion.equals(Object)
UnflaggedApi: android.hardware.location.MemoryRegion#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.location.MemoryRegion.toString()
UnflaggedApi: android.hardware.location.NanoApp#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.location.NanoApp.toString()
UnflaggedApi: android.hardware.location.NanoAppFilter#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.location.NanoAppFilter.toString()
UnflaggedApi: android.hardware.location.NanoAppInstanceInfo#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.location.NanoAppInstanceInfo.toString()
UnflaggedApi: android.hardware.location.NanoAppMessage#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.location.NanoAppMessage.equals(Object)
UnflaggedApi: android.hardware.location.NanoAppMessage#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.location.NanoAppMessage.toString()
UnflaggedApi: android.hardware.location.NanoAppRpcService#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.location.NanoAppRpcService.equals(Object)
UnflaggedApi: android.hardware.location.NanoAppRpcService#hashCode():
    New API must be flagged with @FlaggedApi: method android.hardware.location.NanoAppRpcService.hashCode()
UnflaggedApi: android.hardware.location.NanoAppRpcService#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.location.NanoAppRpcService.toString()
UnflaggedApi: android.hardware.radio.ProgramList.Filter#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.radio.ProgramList.Filter.equals(Object)
UnflaggedApi: android.hardware.radio.ProgramList.Filter#hashCode():
    New API must be flagged with @FlaggedApi: method android.hardware.radio.ProgramList.Filter.hashCode()
UnflaggedApi: android.hardware.radio.ProgramList.Filter#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.radio.ProgramList.Filter.toString()
UnflaggedApi: android.hardware.radio.ProgramSelector#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.radio.ProgramSelector.equals(Object)
UnflaggedApi: android.hardware.radio.ProgramSelector#hashCode():
    New API must be flagged with @FlaggedApi: method android.hardware.radio.ProgramSelector.hashCode()
UnflaggedApi: android.hardware.radio.ProgramSelector#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.radio.ProgramSelector.toString()
UnflaggedApi: android.hardware.radio.ProgramSelector.Identifier#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.radio.ProgramSelector.Identifier.equals(Object)
UnflaggedApi: android.hardware.radio.ProgramSelector.Identifier#hashCode():
    New API must be flagged with @FlaggedApi: method android.hardware.radio.ProgramSelector.Identifier.hashCode()
UnflaggedApi: android.hardware.radio.ProgramSelector.Identifier#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.radio.ProgramSelector.Identifier.toString()
UnflaggedApi: android.hardware.radio.RadioManager.AmBandConfig#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.radio.RadioManager.AmBandConfig.equals(Object)
UnflaggedApi: android.hardware.radio.RadioManager.AmBandConfig#hashCode():
    New API must be flagged with @FlaggedApi: method android.hardware.radio.RadioManager.AmBandConfig.hashCode()
UnflaggedApi: android.hardware.radio.RadioManager.AmBandConfig#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.radio.RadioManager.AmBandConfig.toString()
UnflaggedApi: android.hardware.radio.RadioManager.AmBandDescriptor#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.radio.RadioManager.AmBandDescriptor.equals(Object)
UnflaggedApi: android.hardware.radio.RadioManager.AmBandDescriptor#hashCode():
    New API must be flagged with @FlaggedApi: method android.hardware.radio.RadioManager.AmBandDescriptor.hashCode()
UnflaggedApi: android.hardware.radio.RadioManager.AmBandDescriptor#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.radio.RadioManager.AmBandDescriptor.toString()
UnflaggedApi: android.hardware.radio.RadioManager.BandConfig#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.radio.RadioManager.BandConfig.equals(Object)
UnflaggedApi: android.hardware.radio.RadioManager.BandConfig#hashCode():
    New API must be flagged with @FlaggedApi: method android.hardware.radio.RadioManager.BandConfig.hashCode()
UnflaggedApi: android.hardware.radio.RadioManager.BandConfig#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.radio.RadioManager.BandConfig.toString()
UnflaggedApi: android.hardware.radio.RadioManager.BandDescriptor#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.radio.RadioManager.BandDescriptor.equals(Object)
UnflaggedApi: android.hardware.radio.RadioManager.BandDescriptor#hashCode():
    New API must be flagged with @FlaggedApi: method android.hardware.radio.RadioManager.BandDescriptor.hashCode()
UnflaggedApi: android.hardware.radio.RadioManager.BandDescriptor#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.radio.RadioManager.BandDescriptor.toString()
UnflaggedApi: android.hardware.radio.RadioManager.FmBandConfig#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.radio.RadioManager.FmBandConfig.equals(Object)
UnflaggedApi: android.hardware.radio.RadioManager.FmBandConfig#hashCode():
    New API must be flagged with @FlaggedApi: method android.hardware.radio.RadioManager.FmBandConfig.hashCode()
UnflaggedApi: android.hardware.radio.RadioManager.FmBandConfig#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.radio.RadioManager.FmBandConfig.toString()
UnflaggedApi: android.hardware.radio.RadioManager.FmBandDescriptor#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.radio.RadioManager.FmBandDescriptor.equals(Object)
UnflaggedApi: android.hardware.radio.RadioManager.FmBandDescriptor#hashCode():
    New API must be flagged with @FlaggedApi: method android.hardware.radio.RadioManager.FmBandDescriptor.hashCode()
UnflaggedApi: android.hardware.radio.RadioManager.FmBandDescriptor#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.radio.RadioManager.FmBandDescriptor.toString()
UnflaggedApi: android.hardware.radio.RadioManager.ModuleProperties#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.radio.RadioManager.ModuleProperties.equals(Object)
UnflaggedApi: android.hardware.radio.RadioManager.ModuleProperties#hashCode():
    New API must be flagged with @FlaggedApi: method android.hardware.radio.RadioManager.ModuleProperties.hashCode()
UnflaggedApi: android.hardware.radio.RadioManager.ModuleProperties#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.radio.RadioManager.ModuleProperties.toString()
UnflaggedApi: android.hardware.radio.RadioManager.ProgramInfo#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.radio.RadioManager.ProgramInfo.equals(Object)
UnflaggedApi: android.hardware.radio.RadioManager.ProgramInfo#hashCode():
    New API must be flagged with @FlaggedApi: method android.hardware.radio.RadioManager.ProgramInfo.hashCode()
UnflaggedApi: android.hardware.radio.RadioManager.ProgramInfo#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.radio.RadioManager.ProgramInfo.toString()
UnflaggedApi: android.hardware.radio.RadioMetadata#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.radio.RadioMetadata.equals(Object)
UnflaggedApi: android.hardware.radio.RadioMetadata#hashCode():
    New API must be flagged with @FlaggedApi: method android.hardware.radio.RadioMetadata.hashCode()
UnflaggedApi: android.hardware.radio.RadioMetadata#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.radio.RadioMetadata.toString()
UnflaggedApi: android.hardware.soundtrigger.SoundTrigger.Keyphrase#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.soundtrigger.SoundTrigger.Keyphrase.equals(Object)
UnflaggedApi: android.hardware.soundtrigger.SoundTrigger.Keyphrase#hashCode():
    New API must be flagged with @FlaggedApi: method android.hardware.soundtrigger.SoundTrigger.Keyphrase.hashCode()
UnflaggedApi: android.hardware.soundtrigger.SoundTrigger.Keyphrase#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.soundtrigger.SoundTrigger.Keyphrase.toString()
UnflaggedApi: android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionExtra#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionExtra.equals(Object)
UnflaggedApi: android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionExtra#hashCode():
    New API must be flagged with @FlaggedApi: method android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionExtra.hashCode()
UnflaggedApi: android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionExtra#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionExtra.toString()
UnflaggedApi: android.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel.equals(Object)
UnflaggedApi: android.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel#hashCode():
    New API must be flagged with @FlaggedApi: method android.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel.hashCode()
UnflaggedApi: android.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel.toString()
UnflaggedApi: android.hardware.soundtrigger.SoundTrigger.ModelParamRange#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.soundtrigger.SoundTrigger.ModelParamRange.equals(Object)
UnflaggedApi: android.hardware.soundtrigger.SoundTrigger.ModelParamRange#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.soundtrigger.SoundTrigger.ModelParamRange.toString()
UnflaggedApi: android.hardware.soundtrigger.SoundTrigger.ModuleProperties#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.soundtrigger.SoundTrigger.ModuleProperties.equals(Object)
UnflaggedApi: android.hardware.soundtrigger.SoundTrigger.ModuleProperties#hashCode():
    New API must be flagged with @FlaggedApi: method android.hardware.soundtrigger.SoundTrigger.ModuleProperties.hashCode()
UnflaggedApi: android.hardware.soundtrigger.SoundTrigger.ModuleProperties#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.soundtrigger.SoundTrigger.ModuleProperties.toString()
UnflaggedApi: android.hardware.soundtrigger.SoundTrigger.RecognitionEvent#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.soundtrigger.SoundTrigger.RecognitionEvent.equals(Object)
UnflaggedApi: android.hardware.soundtrigger.SoundTrigger.RecognitionEvent#hashCode():
    New API must be flagged with @FlaggedApi: method android.hardware.soundtrigger.SoundTrigger.RecognitionEvent.hashCode()
UnflaggedApi: android.hardware.soundtrigger.SoundTrigger.RecognitionEvent#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.soundtrigger.SoundTrigger.RecognitionEvent.toString()
UnflaggedApi: android.hardware.soundtrigger.SoundTrigger.SoundModel#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.soundtrigger.SoundTrigger.SoundModel.equals(Object)
UnflaggedApi: android.hardware.soundtrigger.SoundTrigger.SoundModel#hashCode():
    New API must be flagged with @FlaggedApi: method android.hardware.soundtrigger.SoundTrigger.SoundModel.hashCode()
UnflaggedApi: android.hardware.usb.DisplayPortAltModeInfo#equals(Object):
    New API must be flagged with @FlaggedApi: method android.hardware.usb.DisplayPortAltModeInfo.equals(Object)
UnflaggedApi: android.hardware.usb.DisplayPortAltModeInfo#hashCode():
    New API must be flagged with @FlaggedApi: method android.hardware.usb.DisplayPortAltModeInfo.hashCode()
UnflaggedApi: android.hardware.usb.DisplayPortAltModeInfo#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.usb.DisplayPortAltModeInfo.toString()
UnflaggedApi: android.hardware.usb.UsbPort#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.usb.UsbPort.toString()
UnflaggedApi: android.hardware.usb.UsbPortStatus#toString():
    New API must be flagged with @FlaggedApi: method android.hardware.usb.UsbPortStatus.toString()
UnflaggedApi: android.location.CorrelationVector#equals(Object):
    New API must be flagged with @FlaggedApi: method android.location.CorrelationVector.equals(Object)
UnflaggedApi: android.location.CorrelationVector#hashCode():
    New API must be flagged with @FlaggedApi: method android.location.CorrelationVector.hashCode()
UnflaggedApi: android.location.CorrelationVector#toString():
    New API must be flagged with @FlaggedApi: method android.location.CorrelationVector.toString()
UnflaggedApi: android.location.Country#equals(Object):
    New API must be flagged with @FlaggedApi: method android.location.Country.equals(Object)
UnflaggedApi: android.location.Country#hashCode():
    New API must be flagged with @FlaggedApi: method android.location.Country.hashCode()
UnflaggedApi: android.location.Country#toString():
    New API must be flagged with @FlaggedApi: method android.location.Country.toString()
UnflaggedApi: android.location.GnssExcessPathInfo#equals(Object):
    New API must be flagged with @FlaggedApi: method android.location.GnssExcessPathInfo.equals(Object)
UnflaggedApi: android.location.GnssExcessPathInfo#hashCode():
    New API must be flagged with @FlaggedApi: method android.location.GnssExcessPathInfo.hashCode()
UnflaggedApi: android.location.GnssExcessPathInfo#toString():
    New API must be flagged with @FlaggedApi: method android.location.GnssExcessPathInfo.toString()
UnflaggedApi: android.location.GnssMeasurementCorrections#toString():
    New API must be flagged with @FlaggedApi: method android.location.GnssMeasurementCorrections.toString()
UnflaggedApi: android.location.GnssMeasurementRequest#getWorkSource():
    New API must be flagged with @FlaggedApi: method android.location.GnssMeasurementRequest.getWorkSource()
UnflaggedApi: android.location.GnssMeasurementRequest.Builder#setWorkSource(android.os.WorkSource):
    New API must be flagged with @FlaggedApi: method android.location.GnssMeasurementRequest.Builder.setWorkSource(android.os.WorkSource)
UnflaggedApi: android.location.GnssReflectingPlane#equals(Object):
    New API must be flagged with @FlaggedApi: method android.location.GnssReflectingPlane.equals(Object)
UnflaggedApi: android.location.GnssReflectingPlane#hashCode():
    New API must be flagged with @FlaggedApi: method android.location.GnssReflectingPlane.hashCode()
UnflaggedApi: android.location.GnssReflectingPlane#toString():
    New API must be flagged with @FlaggedApi: method android.location.GnssReflectingPlane.toString()
UnflaggedApi: android.location.GnssRequest#equals(Object):
    New API must be flagged with @FlaggedApi: method android.location.GnssRequest.equals(Object)
UnflaggedApi: android.location.GnssRequest#hashCode():
    New API must be flagged with @FlaggedApi: method android.location.GnssRequest.hashCode()
UnflaggedApi: android.location.GnssRequest#toString():
    New API must be flagged with @FlaggedApi: method android.location.GnssRequest.toString()
UnflaggedApi: android.location.GnssSingleSatCorrection#equals(Object):
    New API must be flagged with @FlaggedApi: method android.location.GnssSingleSatCorrection.equals(Object)
UnflaggedApi: android.location.GnssSingleSatCorrection#hashCode():
    New API must be flagged with @FlaggedApi: method android.location.GnssSingleSatCorrection.hashCode()
UnflaggedApi: android.location.GnssSingleSatCorrection#toString():
    New API must be flagged with @FlaggedApi: method android.location.GnssSingleSatCorrection.toString()
UnflaggedApi: android.location.GpsClock#toString():
    New API must be flagged with @FlaggedApi: method android.location.GpsClock.toString()
UnflaggedApi: android.location.GpsMeasurement#toString():
    New API must be flagged with @FlaggedApi: method android.location.GpsMeasurement.toString()
UnflaggedApi: android.location.GpsMeasurementsEvent#toString():
    New API must be flagged with @FlaggedApi: method android.location.GpsMeasurementsEvent.toString()
UnflaggedApi: android.location.GpsNavigationMessage#toString():
    New API must be flagged with @FlaggedApi: method android.location.GpsNavigationMessage.toString()
UnflaggedApi: android.location.GpsNavigationMessageEvent#toString():
    New API must be flagged with @FlaggedApi: method android.location.GpsNavigationMessageEvent.toString()
UnflaggedApi: android.location.LastLocationRequest#equals(Object):
    New API must be flagged with @FlaggedApi: method android.location.LastLocationRequest.equals(Object)
UnflaggedApi: android.location.LastLocationRequest#hashCode():
    New API must be flagged with @FlaggedApi: method android.location.LastLocationRequest.hashCode()
UnflaggedApi: android.location.LastLocationRequest#toString():
    New API must be flagged with @FlaggedApi: method android.location.LastLocationRequest.toString()
UnflaggedApi: android.location.SatellitePvt#toString():
    New API must be flagged with @FlaggedApi: method android.location.SatellitePvt.toString()
UnflaggedApi: android.location.SatellitePvt.ClockInfo#toString():
    New API must be flagged with @FlaggedApi: method android.location.SatellitePvt.ClockInfo.toString()
UnflaggedApi: android.location.SatellitePvt.PositionEcef#toString():
    New API must be flagged with @FlaggedApi: method android.location.SatellitePvt.PositionEcef.toString()
UnflaggedApi: android.location.SatellitePvt.VelocityEcef#toString():
    New API must be flagged with @FlaggedApi: method android.location.SatellitePvt.VelocityEcef.toString()
UnflaggedApi: android.location.provider.ProviderRequest#equals(Object):
    New API must be flagged with @FlaggedApi: method android.location.provider.ProviderRequest.equals(Object)
UnflaggedApi: android.location.provider.ProviderRequest#hashCode():
    New API must be flagged with @FlaggedApi: method android.location.provider.ProviderRequest.hashCode()
UnflaggedApi: android.location.provider.ProviderRequest#toString():
    New API must be flagged with @FlaggedApi: method android.location.provider.ProviderRequest.toString()
UnflaggedApi: android.media.AudioDeviceAttributes#equals(Object):
    New API must be flagged with @FlaggedApi: method android.media.AudioDeviceAttributes.equals(Object)
UnflaggedApi: android.media.AudioDeviceAttributes#hashCode():
    New API must be flagged with @FlaggedApi: method android.media.AudioDeviceAttributes.hashCode()
UnflaggedApi: android.media.AudioDeviceAttributes#toString():
    New API must be flagged with @FlaggedApi: method android.media.AudioDeviceAttributes.toString()
UnflaggedApi: android.media.AudioFocusInfo#equals(Object):
    New API must be flagged with @FlaggedApi: method android.media.AudioFocusInfo.equals(Object)
UnflaggedApi: android.media.AudioFocusInfo#hashCode():
    New API must be flagged with @FlaggedApi: method android.media.AudioFocusInfo.hashCode()
UnflaggedApi: android.media.MediaRecorder.AudioSource#ECHO_REFERENCE:
    New API must be flagged with @FlaggedApi: field android.media.MediaRecorder.AudioSource.ECHO_REFERENCE
UnflaggedApi: android.media.MediaRecorder.AudioSource#HOTWORD:
    New API must be flagged with @FlaggedApi: field android.media.MediaRecorder.AudioSource.HOTWORD
UnflaggedApi: android.media.MediaRecorder.AudioSource#RADIO_TUNER:
    New API must be flagged with @FlaggedApi: field android.media.MediaRecorder.AudioSource.RADIO_TUNER
UnflaggedApi: android.media.MediaRecorder.AudioSource#ULTRASOUND:
    New API must be flagged with @FlaggedApi: field android.media.MediaRecorder.AudioSource.ULTRASOUND
UnflaggedApi: android.media.NearbyDevice#toString():
    New API must be flagged with @FlaggedApi: method android.media.NearbyDevice.toString()
UnflaggedApi: android.media.VolumeInfo#equals(Object):
    New API must be flagged with @FlaggedApi: method android.media.VolumeInfo.equals(Object)
UnflaggedApi: android.media.VolumeInfo#hashCode():
    New API must be flagged with @FlaggedApi: method android.media.VolumeInfo.hashCode()
UnflaggedApi: android.media.VolumeInfo#toString():
    New API must be flagged with @FlaggedApi: method android.media.VolumeInfo.toString()
UnflaggedApi: android.media.audiopolicy.AudioMix#CREATOR:
    New API must be flagged with @FlaggedApi: field android.media.audiopolicy.AudioMix.CREATOR
UnflaggedApi: android.media.audiopolicy.AudioMix#describeContents():
    New API must be flagged with @FlaggedApi: method android.media.audiopolicy.AudioMix.describeContents()
UnflaggedApi: android.media.audiopolicy.AudioMix#writeToParcel(android.os.Parcel, int):
    New API must be flagged with @FlaggedApi: method android.media.audiopolicy.AudioMix.writeToParcel(android.os.Parcel,int)
UnflaggedApi: android.media.audiopolicy.AudioMixingRule#CREATOR:
    New API must be flagged with @FlaggedApi: field android.media.audiopolicy.AudioMixingRule.CREATOR
UnflaggedApi: android.media.audiopolicy.AudioMixingRule#describeContents():
    New API must be flagged with @FlaggedApi: method android.media.audiopolicy.AudioMixingRule.describeContents()
UnflaggedApi: android.media.audiopolicy.AudioMixingRule#hashCode():
    New API must be flagged with @FlaggedApi: method android.media.audiopolicy.AudioMixingRule.hashCode()
UnflaggedApi: android.media.audiopolicy.AudioMixingRule#writeToParcel(android.os.Parcel, int):
    New API must be flagged with @FlaggedApi: method android.media.audiopolicy.AudioMixingRule.writeToParcel(android.os.Parcel,int)
UnflaggedApi: android.media.audiopolicy.AudioPolicy#updateMixingRules(java.util.List<android.util.Pair<android.media.audiopolicy.AudioMix,android.media.audiopolicy.AudioMixingRule>>):
    New API must be flagged with @FlaggedApi: method android.media.audiopolicy.AudioPolicy.updateMixingRules(java.util.List<android.util.Pair<android.media.audiopolicy.AudioMix,android.media.audiopolicy.AudioMixingRule>>)
UnflaggedApi: android.media.audiopolicy.AudioProductStrategy#equals(Object):
    New API must be flagged with @FlaggedApi: method android.media.audiopolicy.AudioProductStrategy.equals(Object)
UnflaggedApi: android.media.audiopolicy.AudioProductStrategy#hashCode():
    New API must be flagged with @FlaggedApi: method android.media.audiopolicy.AudioProductStrategy.hashCode()
UnflaggedApi: android.media.audiopolicy.AudioProductStrategy#toString():
    New API must be flagged with @FlaggedApi: method android.media.audiopolicy.AudioProductStrategy.toString()
UnflaggedApi: android.media.audiopolicy.AudioVolumeGroup#equals(Object):
    New API must be flagged with @FlaggedApi: method android.media.audiopolicy.AudioVolumeGroup.equals(Object)
UnflaggedApi: android.media.audiopolicy.AudioVolumeGroup#toString():
    New API must be flagged with @FlaggedApi: method android.media.audiopolicy.AudioVolumeGroup.toString()
UnflaggedApi: android.media.musicrecognition.MusicRecognitionService#onCreate():
    New API must be flagged with @FlaggedApi: method android.media.musicrecognition.MusicRecognitionService.onCreate()
UnflaggedApi: android.media.soundtrigger.SoundTriggerDetectionService#onUnbind(android.content.Intent):
    New API must be flagged with @FlaggedApi: method android.media.soundtrigger.SoundTriggerDetectionService.onUnbind(android.content.Intent)
UnflaggedApi: android.media.tv.TunedInfo#equals(Object):
    New API must be flagged with @FlaggedApi: method android.media.tv.TunedInfo.equals(Object)
UnflaggedApi: android.media.tv.TunedInfo#hashCode():
    New API must be flagged with @FlaggedApi: method android.media.tv.TunedInfo.hashCode()
UnflaggedApi: android.media.tv.TunedInfo#toString():
    New API must be flagged with @FlaggedApi: method android.media.tv.TunedInfo.toString()
UnflaggedApi: android.media.tv.TvInputHardwareInfo#toString():
    New API must be flagged with @FlaggedApi: method android.media.tv.TvInputHardwareInfo.toString()
UnflaggedApi: android.media.tv.TvRecordingClient.RecordingCallback#onEvent(String, String, android.os.Bundle):
    New API must be flagged with @FlaggedApi: method android.media.tv.TvRecordingClient.RecordingCallback.onEvent(String,String,android.os.Bundle)
UnflaggedApi: android.media.tv.TvStreamConfig#equals(Object):
    New API must be flagged with @FlaggedApi: method android.media.tv.TvStreamConfig.equals(Object)
UnflaggedApi: android.media.tv.TvStreamConfig#toString():
    New API must be flagged with @FlaggedApi: method android.media.tv.TvStreamConfig.toString()
UnflaggedApi: android.net.MatchAllNetworkSpecifier#equals(Object):
    New API must be flagged with @FlaggedApi: method android.net.MatchAllNetworkSpecifier.equals(Object)
UnflaggedApi: android.net.MatchAllNetworkSpecifier#hashCode():
    New API must be flagged with @FlaggedApi: method android.net.MatchAllNetworkSpecifier.hashCode()
UnflaggedApi: android.net.NetworkKey#equals(Object):
    New API must be flagged with @FlaggedApi: method android.net.NetworkKey.equals(Object)
UnflaggedApi: android.net.NetworkKey#hashCode():
    New API must be flagged with @FlaggedApi: method android.net.NetworkKey.hashCode()
UnflaggedApi: android.net.NetworkKey#toString():
    New API must be flagged with @FlaggedApi: method android.net.NetworkKey.toString()
UnflaggedApi: android.net.RssiCurve#equals(Object):
    New API must be flagged with @FlaggedApi: method android.net.RssiCurve.equals(Object)
UnflaggedApi: android.net.RssiCurve#hashCode():
    New API must be flagged with @FlaggedApi: method android.net.RssiCurve.hashCode()
UnflaggedApi: android.net.RssiCurve#toString():
    New API must be flagged with @FlaggedApi: method android.net.RssiCurve.toString()
UnflaggedApi: android.net.ScoredNetwork#equals(Object):
    New API must be flagged with @FlaggedApi: method android.net.ScoredNetwork.equals(Object)
UnflaggedApi: android.net.ScoredNetwork#hashCode():
    New API must be flagged with @FlaggedApi: method android.net.ScoredNetwork.hashCode()
UnflaggedApi: android.net.ScoredNetwork#toString():
    New API must be flagged with @FlaggedApi: method android.net.ScoredNetwork.toString()
UnflaggedApi: android.net.WebAddress#toString():
    New API must be flagged with @FlaggedApi: method android.net.WebAddress.toString()
UnflaggedApi: android.net.WifiKey#equals(Object):
    New API must be flagged with @FlaggedApi: method android.net.WifiKey.equals(Object)
UnflaggedApi: android.net.WifiKey#hashCode():
    New API must be flagged with @FlaggedApi: method android.net.WifiKey.hashCode()
UnflaggedApi: android.net.WifiKey#toString():
    New API must be flagged with @FlaggedApi: method android.net.WifiKey.toString()
UnflaggedApi: android.net.metrics.ApfProgramEvent#equals(Object):
    New API must be flagged with @FlaggedApi: method android.net.metrics.ApfProgramEvent.equals(Object)
UnflaggedApi: android.net.metrics.ApfProgramEvent#toString():
    New API must be flagged with @FlaggedApi: method android.net.metrics.ApfProgramEvent.toString()
UnflaggedApi: android.net.metrics.ApfStats#equals(Object):
    New API must be flagged with @FlaggedApi: method android.net.metrics.ApfStats.equals(Object)
UnflaggedApi: android.net.metrics.ApfStats#toString():
    New API must be flagged with @FlaggedApi: method android.net.metrics.ApfStats.toString()
UnflaggedApi: android.net.metrics.DhcpClientEvent#equals(Object):
    New API must be flagged with @FlaggedApi: method android.net.metrics.DhcpClientEvent.equals(Object)
UnflaggedApi: android.net.metrics.DhcpClientEvent#toString():
    New API must be flagged with @FlaggedApi: method android.net.metrics.DhcpClientEvent.toString()
UnflaggedApi: android.net.metrics.DhcpErrorEvent#toString():
    New API must be flagged with @FlaggedApi: method android.net.metrics.DhcpErrorEvent.toString()
UnflaggedApi: android.net.metrics.IpManagerEvent#equals(Object):
    New API must be flagged with @FlaggedApi: method android.net.metrics.IpManagerEvent.equals(Object)
UnflaggedApi: android.net.metrics.IpManagerEvent#toString():
    New API must be flagged with @FlaggedApi: method android.net.metrics.IpManagerEvent.toString()
UnflaggedApi: android.net.metrics.IpReachabilityEvent#equals(Object):
    New API must be flagged with @FlaggedApi: method android.net.metrics.IpReachabilityEvent.equals(Object)
UnflaggedApi: android.net.metrics.IpReachabilityEvent#toString():
    New API must be flagged with @FlaggedApi: method android.net.metrics.IpReachabilityEvent.toString()
UnflaggedApi: android.net.metrics.NetworkEvent#equals(Object):
    New API must be flagged with @FlaggedApi: method android.net.metrics.NetworkEvent.equals(Object)
UnflaggedApi: android.net.metrics.NetworkEvent#toString():
    New API must be flagged with @FlaggedApi: method android.net.metrics.NetworkEvent.toString()
UnflaggedApi: android.net.metrics.RaEvent#equals(Object):
    New API must be flagged with @FlaggedApi: method android.net.metrics.RaEvent.equals(Object)
UnflaggedApi: android.net.metrics.RaEvent#toString():
    New API must be flagged with @FlaggedApi: method android.net.metrics.RaEvent.toString()
UnflaggedApi: android.net.metrics.ValidationProbeEvent#equals(Object):
    New API must be flagged with @FlaggedApi: method android.net.metrics.ValidationProbeEvent.equals(Object)
UnflaggedApi: android.net.metrics.ValidationProbeEvent#toString():
    New API must be flagged with @FlaggedApi: method android.net.metrics.ValidationProbeEvent.toString()
UnflaggedApi: android.net.vcn.VcnNetworkPolicyResult#equals(Object):
    New API must be flagged with @FlaggedApi: method android.net.vcn.VcnNetworkPolicyResult.equals(Object)
UnflaggedApi: android.net.vcn.VcnNetworkPolicyResult#hashCode():
    New API must be flagged with @FlaggedApi: method android.net.vcn.VcnNetworkPolicyResult.hashCode()
UnflaggedApi: android.net.vcn.VcnNetworkPolicyResult#toString():
    New API must be flagged with @FlaggedApi: method android.net.vcn.VcnNetworkPolicyResult.toString()
UnflaggedApi: android.net.wifi.nl80211.DeviceWiphyCapabilities#equals(Object):
    New API must be flagged with @FlaggedApi: method android.net.wifi.nl80211.DeviceWiphyCapabilities.equals(Object)
UnflaggedApi: android.net.wifi.nl80211.DeviceWiphyCapabilities#hashCode():
    New API must be flagged with @FlaggedApi: method android.net.wifi.nl80211.DeviceWiphyCapabilities.hashCode()
UnflaggedApi: android.net.wifi.nl80211.DeviceWiphyCapabilities#toString():
    New API must be flagged with @FlaggedApi: method android.net.wifi.nl80211.DeviceWiphyCapabilities.toString()
UnflaggedApi: android.net.wifi.nl80211.NativeWifiClient#equals(Object):
    New API must be flagged with @FlaggedApi: method android.net.wifi.nl80211.NativeWifiClient.equals(Object)
UnflaggedApi: android.net.wifi.nl80211.NativeWifiClient#hashCode():
    New API must be flagged with @FlaggedApi: method android.net.wifi.nl80211.NativeWifiClient.hashCode()
UnflaggedApi: android.net.wifi.nl80211.PnoNetwork#equals(Object):
    New API must be flagged with @FlaggedApi: method android.net.wifi.nl80211.PnoNetwork.equals(Object)
UnflaggedApi: android.net.wifi.nl80211.PnoNetwork#hashCode():
    New API must be flagged with @FlaggedApi: method android.net.wifi.nl80211.PnoNetwork.hashCode()
UnflaggedApi: android.net.wifi.nl80211.PnoSettings#equals(Object):
    New API must be flagged with @FlaggedApi: method android.net.wifi.nl80211.PnoSettings.equals(Object)
UnflaggedApi: android.net.wifi.nl80211.PnoSettings#hashCode():
    New API must be flagged with @FlaggedApi: method android.net.wifi.nl80211.PnoSettings.hashCode()
UnflaggedApi: android.net.wifi.nl80211.RadioChainInfo#equals(Object):
    New API must be flagged with @FlaggedApi: method android.net.wifi.nl80211.RadioChainInfo.equals(Object)
UnflaggedApi: android.net.wifi.nl80211.RadioChainInfo#hashCode():
    New API must be flagged with @FlaggedApi: method android.net.wifi.nl80211.RadioChainInfo.hashCode()
UnflaggedApi: android.net.wifi.sharedconnectivity.app.HotspotNetwork#equals(Object):
    New API must be flagged with @FlaggedApi: method android.net.wifi.sharedconnectivity.app.HotspotNetwork.equals(Object)
UnflaggedApi: android.net.wifi.sharedconnectivity.app.HotspotNetwork#hashCode():
    New API must be flagged with @FlaggedApi: method android.net.wifi.sharedconnectivity.app.HotspotNetwork.hashCode()
UnflaggedApi: android.net.wifi.sharedconnectivity.app.HotspotNetwork#toString():
    New API must be flagged with @FlaggedApi: method android.net.wifi.sharedconnectivity.app.HotspotNetwork.toString()
UnflaggedApi: android.net.wifi.sharedconnectivity.app.HotspotNetworkConnectionStatus#equals(Object):
    New API must be flagged with @FlaggedApi: method android.net.wifi.sharedconnectivity.app.HotspotNetworkConnectionStatus.equals(Object)
UnflaggedApi: android.net.wifi.sharedconnectivity.app.HotspotNetworkConnectionStatus#hashCode():
    New API must be flagged with @FlaggedApi: method android.net.wifi.sharedconnectivity.app.HotspotNetworkConnectionStatus.hashCode()
UnflaggedApi: android.net.wifi.sharedconnectivity.app.HotspotNetworkConnectionStatus#toString():
    New API must be flagged with @FlaggedApi: method android.net.wifi.sharedconnectivity.app.HotspotNetworkConnectionStatus.toString()
UnflaggedApi: android.net.wifi.sharedconnectivity.app.KnownNetwork#equals(Object):
    New API must be flagged with @FlaggedApi: method android.net.wifi.sharedconnectivity.app.KnownNetwork.equals(Object)
UnflaggedApi: android.net.wifi.sharedconnectivity.app.KnownNetwork#hashCode():
    New API must be flagged with @FlaggedApi: method android.net.wifi.sharedconnectivity.app.KnownNetwork.hashCode()
UnflaggedApi: android.net.wifi.sharedconnectivity.app.KnownNetwork#toString():
    New API must be flagged with @FlaggedApi: method android.net.wifi.sharedconnectivity.app.KnownNetwork.toString()
UnflaggedApi: android.net.wifi.sharedconnectivity.app.KnownNetworkConnectionStatus#equals(Object):
    New API must be flagged with @FlaggedApi: method android.net.wifi.sharedconnectivity.app.KnownNetworkConnectionStatus.equals(Object)
UnflaggedApi: android.net.wifi.sharedconnectivity.app.KnownNetworkConnectionStatus#hashCode():
    New API must be flagged with @FlaggedApi: method android.net.wifi.sharedconnectivity.app.KnownNetworkConnectionStatus.hashCode()
UnflaggedApi: android.net.wifi.sharedconnectivity.app.KnownNetworkConnectionStatus#toString():
    New API must be flagged with @FlaggedApi: method android.net.wifi.sharedconnectivity.app.KnownNetworkConnectionStatus.toString()
UnflaggedApi: android.net.wifi.sharedconnectivity.app.NetworkProviderInfo#equals(Object):
    New API must be flagged with @FlaggedApi: method android.net.wifi.sharedconnectivity.app.NetworkProviderInfo.equals(Object)
UnflaggedApi: android.net.wifi.sharedconnectivity.app.NetworkProviderInfo#hashCode():
    New API must be flagged with @FlaggedApi: method android.net.wifi.sharedconnectivity.app.NetworkProviderInfo.hashCode()
UnflaggedApi: android.net.wifi.sharedconnectivity.app.NetworkProviderInfo#isBatteryCharging():
    New API must be flagged with @FlaggedApi: method android.net.wifi.sharedconnectivity.app.NetworkProviderInfo.isBatteryCharging()
UnflaggedApi: android.net.wifi.sharedconnectivity.app.NetworkProviderInfo#toString():
    New API must be flagged with @FlaggedApi: method android.net.wifi.sharedconnectivity.app.NetworkProviderInfo.toString()
UnflaggedApi: android.net.wifi.sharedconnectivity.app.NetworkProviderInfo.Builder#setBatteryCharging(boolean):
    New API must be flagged with @FlaggedApi: method android.net.wifi.sharedconnectivity.app.NetworkProviderInfo.Builder.setBatteryCharging(boolean)
UnflaggedApi: android.net.wifi.sharedconnectivity.app.SharedConnectivitySettingsState#equals(Object):
    New API must be flagged with @FlaggedApi: method android.net.wifi.sharedconnectivity.app.SharedConnectivitySettingsState.equals(Object)
UnflaggedApi: android.net.wifi.sharedconnectivity.app.SharedConnectivitySettingsState#hashCode():
    New API must be flagged with @FlaggedApi: method android.net.wifi.sharedconnectivity.app.SharedConnectivitySettingsState.hashCode()
UnflaggedApi: android.net.wifi.sharedconnectivity.app.SharedConnectivitySettingsState#toString():
    New API must be flagged with @FlaggedApi: method android.net.wifi.sharedconnectivity.app.SharedConnectivitySettingsState.toString()
UnflaggedApi: android.os.BatterySaverPolicyConfig#toString():
    New API must be flagged with @FlaggedApi: method android.os.BatterySaverPolicyConfig.toString()
UnflaggedApi: android.os.BugreportParams#BUGREPORT_MODE_ONBOARDING:
    New API must be flagged with @FlaggedApi: field android.os.BugreportParams.BUGREPORT_MODE_ONBOARDING
UnflaggedApi: android.os.Build.VERSION#KNOWN_CODENAMES:
    New API must be flagged with @FlaggedApi: field android.os.Build.VERSION.KNOWN_CODENAMES
UnflaggedApi: android.os.Build.VERSION#PREVIEW_SDK_FINGERPRINT:
    New API must be flagged with @FlaggedApi: field android.os.Build.VERSION.PREVIEW_SDK_FINGERPRINT
UnflaggedApi: android.os.IncidentManager.PendingReport#equals(Object):
    New API must be flagged with @FlaggedApi: method android.os.IncidentManager.PendingReport.equals(Object)
UnflaggedApi: android.os.IncidentManager.PendingReport#toString():
    New API must be flagged with @FlaggedApi: method android.os.IncidentManager.PendingReport.toString()
UnflaggedApi: android.os.IncidentReportArgs#toString():
    New API must be flagged with @FlaggedApi: method android.os.IncidentReportArgs.toString()
UnflaggedApi: android.os.NewUserRequest#toString():
    New API must be flagged with @FlaggedApi: method android.os.NewUserRequest.toString()
UnflaggedApi: android.os.NewUserResponse#toString():
    New API must be flagged with @FlaggedApi: method android.os.NewUserResponse.toString()
UnflaggedApi: android.os.PowerManager.LowPowerStandbyPolicy#equals(Object):
    New API must be flagged with @FlaggedApi: method android.os.PowerManager.LowPowerStandbyPolicy.equals(Object)
UnflaggedApi: android.os.PowerManager.LowPowerStandbyPolicy#hashCode():
    New API must be flagged with @FlaggedApi: method android.os.PowerManager.LowPowerStandbyPolicy.hashCode()
UnflaggedApi: android.os.PowerManager.LowPowerStandbyPolicy#toString():
    New API must be flagged with @FlaggedApi: method android.os.PowerManager.LowPowerStandbyPolicy.toString()
UnflaggedApi: android.os.PowerManager.LowPowerStandbyPortDescription#equals(Object):
    New API must be flagged with @FlaggedApi: method android.os.PowerManager.LowPowerStandbyPortDescription.equals(Object)
UnflaggedApi: android.os.PowerManager.LowPowerStandbyPortDescription#hashCode():
    New API must be flagged with @FlaggedApi: method android.os.PowerManager.LowPowerStandbyPortDescription.hashCode()
UnflaggedApi: android.os.PowerManager.LowPowerStandbyPortDescription#toString():
    New API must be flagged with @FlaggedApi: method android.os.PowerManager.LowPowerStandbyPortDescription.toString()
UnflaggedApi: android.os.ServiceSpecificException#toString():
    New API must be flagged with @FlaggedApi: method android.os.ServiceSpecificException.toString()
UnflaggedApi: android.os.WorkSource.WorkChain#equals(Object):
    New API must be flagged with @FlaggedApi: method android.os.WorkSource.WorkChain.equals(Object)
UnflaggedApi: android.os.WorkSource.WorkChain#hashCode():
    New API must be flagged with @FlaggedApi: method android.os.WorkSource.WorkChain.hashCode()
UnflaggedApi: android.os.WorkSource.WorkChain#toString():
    New API must be flagged with @FlaggedApi: method android.os.WorkSource.WorkChain.toString()
UnflaggedApi: android.os.connectivity.CellularBatteryStats#equals(Object):
    New API must be flagged with @FlaggedApi: method android.os.connectivity.CellularBatteryStats.equals(Object)
UnflaggedApi: android.os.connectivity.CellularBatteryStats#hashCode():
    New API must be flagged with @FlaggedApi: method android.os.connectivity.CellularBatteryStats.hashCode()
UnflaggedApi: android.os.connectivity.WifiActivityEnergyInfo#toString():
    New API must be flagged with @FlaggedApi: method android.os.connectivity.WifiActivityEnergyInfo.toString()
UnflaggedApi: android.os.connectivity.WifiBatteryStats#equals(Object):
    New API must be flagged with @FlaggedApi: method android.os.connectivity.WifiBatteryStats.equals(Object)
UnflaggedApi: android.os.connectivity.WifiBatteryStats#hashCode():
    New API must be flagged with @FlaggedApi: method android.os.connectivity.WifiBatteryStats.hashCode()
UnflaggedApi: android.permission.AdminPermissionControlParams#toString():
    New API must be flagged with @FlaggedApi: method android.permission.AdminPermissionControlParams.toString()
UnflaggedApi: android.permission.PermissionGroupUsage#equals(Object):
    New API must be flagged with @FlaggedApi: method android.permission.PermissionGroupUsage.equals(Object)
UnflaggedApi: android.permission.PermissionGroupUsage#hashCode():
    New API must be flagged with @FlaggedApi: method android.permission.PermissionGroupUsage.hashCode()
UnflaggedApi: android.permission.PermissionGroupUsage#toString():
    New API must be flagged with @FlaggedApi: method android.permission.PermissionGroupUsage.toString()
UnflaggedApi: android.permission.PermissionManager.SplitPermissionInfo#equals(Object):
    New API must be flagged with @FlaggedApi: method android.permission.PermissionManager.SplitPermissionInfo.equals(Object)
UnflaggedApi: android.permission.PermissionManager.SplitPermissionInfo#hashCode():
    New API must be flagged with @FlaggedApi: method android.permission.PermissionManager.SplitPermissionInfo.hashCode()
UnflaggedApi: android.printservice.PrintServiceInfo#equals(Object):
    New API must be flagged with @FlaggedApi: method android.printservice.PrintServiceInfo.equals(Object)
UnflaggedApi: android.printservice.PrintServiceInfo#hashCode():
    New API must be flagged with @FlaggedApi: method android.printservice.PrintServiceInfo.hashCode()
UnflaggedApi: android.printservice.PrintServiceInfo#toString():
    New API must be flagged with @FlaggedApi: method android.printservice.PrintServiceInfo.toString()
UnflaggedApi: android.printservice.recommendation.RecommendationService#attachBaseContext(android.content.Context):
    New API must be flagged with @FlaggedApi: method android.printservice.recommendation.RecommendationService.attachBaseContext(android.content.Context)
UnflaggedApi: android.provider.CallLog.CallComposerLoggingException#toString():
    New API must be flagged with @FlaggedApi: method android.provider.CallLog.CallComposerLoggingException.toString()
UnflaggedApi: android.provider.ContactsContract.MetadataSync#CONTENT_ITEM_TYPE:
    New API must be flagged with @FlaggedApi: field android.provider.ContactsContract.MetadataSync.CONTENT_ITEM_TYPE
UnflaggedApi: android.provider.ContactsContract.MetadataSync#CONTENT_TYPE:
    New API must be flagged with @FlaggedApi: field android.provider.ContactsContract.MetadataSync.CONTENT_TYPE
UnflaggedApi: android.provider.ContactsContract.MetadataSync#CONTENT_URI:
    New API must be flagged with @FlaggedApi: field android.provider.ContactsContract.MetadataSync.CONTENT_URI
UnflaggedApi: android.provider.ContactsContract.MetadataSync#METADATA_AUTHORITY:
    New API must be flagged with @FlaggedApi: field android.provider.ContactsContract.MetadataSync.METADATA_AUTHORITY
UnflaggedApi: android.provider.ContactsContract.MetadataSync#METADATA_AUTHORITY_URI:
    New API must be flagged with @FlaggedApi: field android.provider.ContactsContract.MetadataSync.METADATA_AUTHORITY_URI
UnflaggedApi: android.provider.ContactsContract.MetadataSync#_COUNT:
    New API must be flagged with @FlaggedApi: field android.provider.ContactsContract.MetadataSync._COUNT
UnflaggedApi: android.provider.ContactsContract.MetadataSync#_ID:
    New API must be flagged with @FlaggedApi: field android.provider.ContactsContract.MetadataSync._ID
UnflaggedApi: android.provider.ContactsContract.MetadataSyncColumns#ACCOUNT_NAME:
    New API must be flagged with @FlaggedApi: field android.provider.ContactsContract.MetadataSyncColumns.ACCOUNT_NAME
UnflaggedApi: android.provider.ContactsContract.MetadataSyncColumns#ACCOUNT_TYPE:
    New API must be flagged with @FlaggedApi: field android.provider.ContactsContract.MetadataSyncColumns.ACCOUNT_TYPE
UnflaggedApi: android.provider.ContactsContract.MetadataSyncColumns#DATA:
    New API must be flagged with @FlaggedApi: field android.provider.ContactsContract.MetadataSyncColumns.DATA
UnflaggedApi: android.provider.ContactsContract.MetadataSyncColumns#DATA_SET:
    New API must be flagged with @FlaggedApi: field android.provider.ContactsContract.MetadataSyncColumns.DATA_SET
UnflaggedApi: android.provider.ContactsContract.MetadataSyncColumns#DELETED:
    New API must be flagged with @FlaggedApi: field android.provider.ContactsContract.MetadataSyncColumns.DELETED
UnflaggedApi: android.provider.ContactsContract.MetadataSyncColumns#RAW_CONTACT_BACKUP_ID:
    New API must be flagged with @FlaggedApi: field android.provider.ContactsContract.MetadataSyncColumns.RAW_CONTACT_BACKUP_ID
UnflaggedApi: android.provider.ContactsContract.MetadataSyncState#CONTENT_ITEM_TYPE:
    New API must be flagged with @FlaggedApi: field android.provider.ContactsContract.MetadataSyncState.CONTENT_ITEM_TYPE
UnflaggedApi: android.provider.ContactsContract.MetadataSyncState#CONTENT_TYPE:
    New API must be flagged with @FlaggedApi: field android.provider.ContactsContract.MetadataSyncState.CONTENT_TYPE
UnflaggedApi: android.provider.ContactsContract.MetadataSyncState#CONTENT_URI:
    New API must be flagged with @FlaggedApi: field android.provider.ContactsContract.MetadataSyncState.CONTENT_URI
UnflaggedApi: android.provider.ContactsContract.MetadataSyncState#_COUNT:
    New API must be flagged with @FlaggedApi: field android.provider.ContactsContract.MetadataSyncState._COUNT
UnflaggedApi: android.provider.ContactsContract.MetadataSyncState#_ID:
    New API must be flagged with @FlaggedApi: field android.provider.ContactsContract.MetadataSyncState._ID
UnflaggedApi: android.provider.ContactsContract.MetadataSyncStateColumns#ACCOUNT_NAME:
    New API must be flagged with @FlaggedApi: field android.provider.ContactsContract.MetadataSyncStateColumns.ACCOUNT_NAME
UnflaggedApi: android.provider.ContactsContract.MetadataSyncStateColumns#ACCOUNT_TYPE:
    New API must be flagged with @FlaggedApi: field android.provider.ContactsContract.MetadataSyncStateColumns.ACCOUNT_TYPE
UnflaggedApi: android.provider.ContactsContract.MetadataSyncStateColumns#DATA_SET:
    New API must be flagged with @FlaggedApi: field android.provider.ContactsContract.MetadataSyncStateColumns.DATA_SET
UnflaggedApi: android.provider.ContactsContract.MetadataSyncStateColumns#STATE:
    New API must be flagged with @FlaggedApi: field android.provider.ContactsContract.MetadataSyncStateColumns.STATE
UnflaggedApi: android.provider.ContactsContract.Settings#setDefaultAccount(android.content.ContentResolver, android.accounts.Account):
    New API must be flagged with @FlaggedApi: method android.provider.ContactsContract.Settings.setDefaultAccount(android.content.ContentResolver,android.accounts.Account)
UnflaggedApi: android.provider.ContactsContract.SimContacts#addSimAccount(android.content.ContentResolver, String, String, int, int):
    New API must be flagged with @FlaggedApi: method android.provider.ContactsContract.SimContacts.addSimAccount(android.content.ContentResolver,String,String,int,int)
UnflaggedApi: android.provider.ContactsContract.SimContacts#removeSimAccounts(android.content.ContentResolver, int):
    New API must be flagged with @FlaggedApi: method android.provider.ContactsContract.SimContacts.removeSimAccounts(android.content.ContentResolver,int)
UnflaggedApi: android.provider.SearchIndexableData#toString():
    New API must be flagged with @FlaggedApi: method android.provider.SearchIndexableData.toString()
UnflaggedApi: android.provider.SearchIndexableResource#toString():
    New API must be flagged with @FlaggedApi: method android.provider.SearchIndexableResource.toString()
UnflaggedApi: android.provider.SearchIndexablesProvider#attachInfo(android.content.Context, android.content.pm.ProviderInfo):
    New API must be flagged with @FlaggedApi: method android.provider.SearchIndexablesProvider.attachInfo(android.content.Context,android.content.pm.ProviderInfo)
UnflaggedApi: android.provider.Settings#ACTION_APP_PERMISSIONS_SETTINGS:
    New API must be flagged with @FlaggedApi: field android.provider.Settings.ACTION_APP_PERMISSIONS_SETTINGS
UnflaggedApi: android.provider.Settings.System#putString(android.content.ContentResolver, String, String, boolean, boolean):
    New API must be flagged with @FlaggedApi: method android.provider.Settings.System.putString(android.content.ContentResolver,String,String,boolean,boolean)
UnflaggedApi: android.provider.Settings.System#resetToDefaults(android.content.ContentResolver, String):
    New API must be flagged with @FlaggedApi: method android.provider.Settings.System.resetToDefaults(android.content.ContentResolver,String)
UnflaggedApi: android.provider.SimPhonebookContract.SimRecords#QUERY_ARG_PIN2:
    New API must be flagged with @FlaggedApi: field android.provider.SimPhonebookContract.SimRecords.QUERY_ARG_PIN2
UnflaggedApi: android.provider.Telephony.Carriers#APN_SET_ID:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.Carriers.APN_SET_ID
UnflaggedApi: android.provider.Telephony.Carriers#CARRIER_EDITED:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.Carriers.CARRIER_EDITED
UnflaggedApi: android.provider.Telephony.Carriers#EDITED_STATUS:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.Carriers.EDITED_STATUS
UnflaggedApi: android.provider.Telephony.Carriers#MATCH_ALL_APN_SET_ID:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.Carriers.MATCH_ALL_APN_SET_ID
UnflaggedApi: android.provider.Telephony.Carriers#MAX_CONNECTIONS:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.Carriers.MAX_CONNECTIONS
UnflaggedApi: android.provider.Telephony.Carriers#MODEM_PERSIST:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.Carriers.MODEM_PERSIST
UnflaggedApi: android.provider.Telephony.Carriers#MTU_V4:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.Carriers.MTU_V4
UnflaggedApi: android.provider.Telephony.Carriers#MTU_V6:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.Carriers.MTU_V6
UnflaggedApi: android.provider.Telephony.Carriers#NO_APN_SET_ID:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.Carriers.NO_APN_SET_ID
UnflaggedApi: android.provider.Telephony.Carriers#TIME_LIMIT_FOR_MAX_CONNECTIONS:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.Carriers.TIME_LIMIT_FOR_MAX_CONNECTIONS
UnflaggedApi: android.provider.Telephony.Carriers#UNEDITED:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.Carriers.UNEDITED
UnflaggedApi: android.provider.Telephony.Carriers#USER_DELETED:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.Carriers.USER_DELETED
UnflaggedApi: android.provider.Telephony.Carriers#USER_EDITABLE:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.Carriers.USER_EDITABLE
UnflaggedApi: android.provider.Telephony.Carriers#USER_EDITED:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.Carriers.USER_EDITED
UnflaggedApi: android.provider.Telephony.Carriers#USER_VISIBLE:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.Carriers.USER_VISIBLE
UnflaggedApi: android.provider.Telephony.Carriers#WAIT_TIME_RETRY:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.Carriers.WAIT_TIME_RETRY
UnflaggedApi: android.provider.Telephony.CellBroadcasts:
    New API must be flagged with @FlaggedApi: class android.provider.Telephony.CellBroadcasts
UnflaggedApi: android.provider.Telephony.CellBroadcasts#AUTHORITY_LEGACY:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.AUTHORITY_LEGACY
UnflaggedApi: android.provider.Telephony.CellBroadcasts#AUTHORITY_LEGACY_URI:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.AUTHORITY_LEGACY_URI
UnflaggedApi: android.provider.Telephony.CellBroadcasts#CALL_METHOD_GET_PREFERENCE:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.CALL_METHOD_GET_PREFERENCE
UnflaggedApi: android.provider.Telephony.CellBroadcasts#CID:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.CID
UnflaggedApi: android.provider.Telephony.CellBroadcasts#CMAS_CATEGORY:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.CMAS_CATEGORY
UnflaggedApi: android.provider.Telephony.CellBroadcasts#CMAS_CERTAINTY:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.CMAS_CERTAINTY
UnflaggedApi: android.provider.Telephony.CellBroadcasts#CMAS_MESSAGE_CLASS:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.CMAS_MESSAGE_CLASS
UnflaggedApi: android.provider.Telephony.CellBroadcasts#CMAS_RESPONSE_TYPE:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.CMAS_RESPONSE_TYPE
UnflaggedApi: android.provider.Telephony.CellBroadcasts#CMAS_SEVERITY:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.CMAS_SEVERITY
UnflaggedApi: android.provider.Telephony.CellBroadcasts#CMAS_URGENCY:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.CMAS_URGENCY
UnflaggedApi: android.provider.Telephony.CellBroadcasts#CONTENT_URI:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.CONTENT_URI
UnflaggedApi: android.provider.Telephony.CellBroadcasts#DATA_CODING_SCHEME:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.DATA_CODING_SCHEME
UnflaggedApi: android.provider.Telephony.CellBroadcasts#DEFAULT_SORT_ORDER:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.DEFAULT_SORT_ORDER
UnflaggedApi: android.provider.Telephony.CellBroadcasts#DELIVERY_TIME:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.DELIVERY_TIME
UnflaggedApi: android.provider.Telephony.CellBroadcasts#ETWS_IS_PRIMARY:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.ETWS_IS_PRIMARY
UnflaggedApi: android.provider.Telephony.CellBroadcasts#ETWS_WARNING_TYPE:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.ETWS_WARNING_TYPE
UnflaggedApi: android.provider.Telephony.CellBroadcasts#GEOGRAPHICAL_SCOPE:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.GEOGRAPHICAL_SCOPE
UnflaggedApi: android.provider.Telephony.CellBroadcasts#GEOMETRIES:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.GEOMETRIES
UnflaggedApi: android.provider.Telephony.CellBroadcasts#LAC:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.LAC
UnflaggedApi: android.provider.Telephony.CellBroadcasts#LANGUAGE_CODE:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.LANGUAGE_CODE
UnflaggedApi: android.provider.Telephony.CellBroadcasts#LOCATION_CHECK_TIME:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.LOCATION_CHECK_TIME
UnflaggedApi: android.provider.Telephony.CellBroadcasts#MAXIMUM_WAIT_TIME:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.MAXIMUM_WAIT_TIME
UnflaggedApi: android.provider.Telephony.CellBroadcasts#MESSAGE_BODY:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.MESSAGE_BODY
UnflaggedApi: android.provider.Telephony.CellBroadcasts#MESSAGE_BROADCASTED:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.MESSAGE_BROADCASTED
UnflaggedApi: android.provider.Telephony.CellBroadcasts#MESSAGE_DISPLAYED:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.MESSAGE_DISPLAYED
UnflaggedApi: android.provider.Telephony.CellBroadcasts#MESSAGE_FORMAT:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.MESSAGE_FORMAT
UnflaggedApi: android.provider.Telephony.CellBroadcasts#MESSAGE_HISTORY_URI:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.MESSAGE_HISTORY_URI
UnflaggedApi: android.provider.Telephony.CellBroadcasts#MESSAGE_PRIORITY:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.MESSAGE_PRIORITY
UnflaggedApi: android.provider.Telephony.CellBroadcasts#MESSAGE_READ:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.MESSAGE_READ
UnflaggedApi: android.provider.Telephony.CellBroadcasts#PLMN:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.PLMN
UnflaggedApi: android.provider.Telephony.CellBroadcasts#RECEIVED_TIME:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.RECEIVED_TIME
UnflaggedApi: android.provider.Telephony.CellBroadcasts#SERIAL_NUMBER:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.SERIAL_NUMBER
UnflaggedApi: android.provider.Telephony.CellBroadcasts#SERVICE_CATEGORY:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.SERVICE_CATEGORY
UnflaggedApi: android.provider.Telephony.CellBroadcasts#SLOT_INDEX:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.SLOT_INDEX
UnflaggedApi: android.provider.Telephony.CellBroadcasts#SUBSCRIPTION_ID:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.SUBSCRIPTION_ID
UnflaggedApi: android.provider.Telephony.CellBroadcasts#_COUNT:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts._COUNT
UnflaggedApi: android.provider.Telephony.CellBroadcasts#_ID:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts._ID
UnflaggedApi: android.provider.Telephony.CellBroadcasts.Preference:
    New API must be flagged with @FlaggedApi: class android.provider.Telephony.CellBroadcasts.Preference
UnflaggedApi: android.provider.Telephony.CellBroadcasts.Preference#ENABLE_ALERT_VIBRATION_PREF:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.Preference.ENABLE_ALERT_VIBRATION_PREF
UnflaggedApi: android.provider.Telephony.CellBroadcasts.Preference#ENABLE_AREA_UPDATE_INFO_PREF:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.Preference.ENABLE_AREA_UPDATE_INFO_PREF
UnflaggedApi: android.provider.Telephony.CellBroadcasts.Preference#ENABLE_CMAS_AMBER_PREF:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.Preference.ENABLE_CMAS_AMBER_PREF
UnflaggedApi: android.provider.Telephony.CellBroadcasts.Preference#ENABLE_CMAS_EXTREME_THREAT_PREF:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.Preference.ENABLE_CMAS_EXTREME_THREAT_PREF
UnflaggedApi: android.provider.Telephony.CellBroadcasts.Preference#ENABLE_CMAS_IN_SECOND_LANGUAGE_PREF:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.Preference.ENABLE_CMAS_IN_SECOND_LANGUAGE_PREF
UnflaggedApi: android.provider.Telephony.CellBroadcasts.Preference#ENABLE_CMAS_PRESIDENTIAL_PREF:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.Preference.ENABLE_CMAS_PRESIDENTIAL_PREF
UnflaggedApi: android.provider.Telephony.CellBroadcasts.Preference#ENABLE_CMAS_SEVERE_THREAT_PREF:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.Preference.ENABLE_CMAS_SEVERE_THREAT_PREF
UnflaggedApi: android.provider.Telephony.CellBroadcasts.Preference#ENABLE_EMERGENCY_PERF:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.Preference.ENABLE_EMERGENCY_PERF
UnflaggedApi: android.provider.Telephony.CellBroadcasts.Preference#ENABLE_PUBLIC_SAFETY_PREF:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.Preference.ENABLE_PUBLIC_SAFETY_PREF
UnflaggedApi: android.provider.Telephony.CellBroadcasts.Preference#ENABLE_STATE_LOCAL_TEST_PREF:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.Preference.ENABLE_STATE_LOCAL_TEST_PREF
UnflaggedApi: android.provider.Telephony.CellBroadcasts.Preference#ENABLE_TEST_ALERT_PREF:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.CellBroadcasts.Preference.ENABLE_TEST_ALERT_PREF
UnflaggedApi: android.provider.Telephony.Sms.Intents#ACTION_SMS_EMERGENCY_CB_RECEIVED:
    New API must be flagged with @FlaggedApi: field android.provider.Telephony.Sms.Intents.ACTION_SMS_EMERGENCY_CB_RECEIVED
UnflaggedApi: android.service.ambientcontext.AmbientContextDetectionResult#toString():
    New API must be flagged with @FlaggedApi: method android.service.ambientcontext.AmbientContextDetectionResult.toString()
UnflaggedApi: android.service.ambientcontext.AmbientContextDetectionServiceStatus#toString():
    New API must be flagged with @FlaggedApi: method android.service.ambientcontext.AmbientContextDetectionServiceStatus.toString()
UnflaggedApi: android.service.appprediction.AppPredictionService#onCreate():
    New API must be flagged with @FlaggedApi: method android.service.appprediction.AppPredictionService.onCreate()
UnflaggedApi: android.service.assist.classification.FieldClassificationRequest#toString():
    New API must be flagged with @FlaggedApi: method android.service.assist.classification.FieldClassificationRequest.toString()
UnflaggedApi: android.service.assist.classification.FieldClassificationResponse#toString():
    New API must be flagged with @FlaggedApi: method android.service.assist.classification.FieldClassificationResponse.toString()
UnflaggedApi: android.service.assist.classification.FieldClassificationService#onCreate():
    New API must be flagged with @FlaggedApi: method android.service.assist.classification.FieldClassificationService.onCreate()
UnflaggedApi: android.service.autofill.AutofillFieldClassificationService#onCreate():
    New API must be flagged with @FlaggedApi: method android.service.autofill.AutofillFieldClassificationService.onCreate()
UnflaggedApi: android.service.autofill.Dataset.Builder#setContent(android.view.autofill.AutofillId, android.content.ClipData):
    New API must be flagged with @FlaggedApi: method android.service.autofill.Dataset.Builder.setContent(android.view.autofill.AutofillId,android.content.ClipData)
UnflaggedApi: android.service.autofill.augmented.AugmentedAutofillService#onCreate():
    New API must be flagged with @FlaggedApi: method android.service.autofill.augmented.AugmentedAutofillService.onCreate()
UnflaggedApi: android.service.autofill.augmented.AugmentedAutofillService#onUnbind(android.content.Intent):
    New API must be flagged with @FlaggedApi: method android.service.autofill.augmented.AugmentedAutofillService.onUnbind(android.content.Intent)
UnflaggedApi: android.service.autofill.augmented.FillRequest#toString():
    New API must be flagged with @FlaggedApi: method android.service.autofill.augmented.FillRequest.toString()
UnflaggedApi: android.service.autofill.augmented.FillWindow#finalize():
    New API must be flagged with @FlaggedApi: method android.service.autofill.augmented.FillWindow.finalize()
UnflaggedApi: android.service.autofill.augmented.PresentationParams.Area#toString():
    New API must be flagged with @FlaggedApi: method android.service.autofill.augmented.PresentationParams.Area.toString()
UnflaggedApi: android.service.cloudsearch.CloudSearchService#onCreate():
    New API must be flagged with @FlaggedApi: method android.service.cloudsearch.CloudSearchService.onCreate()
UnflaggedApi: android.service.contentcapture.ActivityEvent#toString():
    New API must be flagged with @FlaggedApi: method android.service.contentcapture.ActivityEvent.toString()
UnflaggedApi: android.service.contentcapture.ContentCaptureService#dump(java.io.FileDescriptor, java.io.PrintWriter, String[]):
    New API must be flagged with @FlaggedApi: method android.service.contentcapture.ContentCaptureService.dump(java.io.FileDescriptor,java.io.PrintWriter,String[])
UnflaggedApi: android.service.contentcapture.ContentCaptureService#onCreate():
    New API must be flagged with @FlaggedApi: method android.service.contentcapture.ContentCaptureService.onCreate()
UnflaggedApi: android.service.contentsuggestions.ContentSuggestionsService#onCreate():
    New API must be flagged with @FlaggedApi: method android.service.contentsuggestions.ContentSuggestionsService.onCreate()
UnflaggedApi: android.service.displayhash.DisplayHashParams#toString():
    New API must be flagged with @FlaggedApi: method android.service.displayhash.DisplayHashParams.toString()
UnflaggedApi: android.service.displayhash.DisplayHashingService#onCreate():
    New API must be flagged with @FlaggedApi: method android.service.displayhash.DisplayHashingService.onCreate()
UnflaggedApi: android.service.euicc.EuiccProfileInfo#equals(Object):
    New API must be flagged with @FlaggedApi: method android.service.euicc.EuiccProfileInfo.equals(Object)
UnflaggedApi: android.service.euicc.EuiccProfileInfo#hashCode():
    New API must be flagged with @FlaggedApi: method android.service.euicc.EuiccProfileInfo.hashCode()
UnflaggedApi: android.service.euicc.EuiccProfileInfo#toString():
    New API must be flagged with @FlaggedApi: method android.service.euicc.EuiccProfileInfo.toString()
UnflaggedApi: android.service.euicc.EuiccService#onCreate():
    New API must be flagged with @FlaggedApi: method android.service.euicc.EuiccService.onCreate()
UnflaggedApi: android.service.euicc.EuiccService#onDestroy():
    New API must be flagged with @FlaggedApi: method android.service.euicc.EuiccService.onDestroy()
UnflaggedApi: android.service.games.CreateGameSessionRequest#equals(Object):
    New API must be flagged with @FlaggedApi: method android.service.games.CreateGameSessionRequest.equals(Object)
UnflaggedApi: android.service.games.CreateGameSessionRequest#hashCode():
    New API must be flagged with @FlaggedApi: method android.service.games.CreateGameSessionRequest.hashCode()
UnflaggedApi: android.service.games.CreateGameSessionRequest#toString():
    New API must be flagged with @FlaggedApi: method android.service.games.CreateGameSessionRequest.toString()
UnflaggedApi: android.service.games.GameSessionService#onCreate():
    New API must be flagged with @FlaggedApi: method android.service.games.GameSessionService.onCreate()
UnflaggedApi: android.service.games.GameStartedEvent#equals(Object):
    New API must be flagged with @FlaggedApi: method android.service.games.GameStartedEvent.equals(Object)
UnflaggedApi: android.service.games.GameStartedEvent#hashCode():
    New API must be flagged with @FlaggedApi: method android.service.games.GameStartedEvent.hashCode()
UnflaggedApi: android.service.games.GameStartedEvent#toString():
    New API must be flagged with @FlaggedApi: method android.service.games.GameStartedEvent.toString()
UnflaggedApi: android.service.notification.Adjustment#toString():
    New API must be flagged with @FlaggedApi: method android.service.notification.Adjustment.toString()
UnflaggedApi: android.service.notification.NotificationAssistantService#attachBaseContext(android.content.Context):
    New API must be flagged with @FlaggedApi: method android.service.notification.NotificationAssistantService.attachBaseContext(android.content.Context)
UnflaggedApi: android.service.notification.NotificationStats#equals(Object):
    New API must be flagged with @FlaggedApi: method android.service.notification.NotificationStats.equals(Object)
UnflaggedApi: android.service.notification.NotificationStats#hashCode():
    New API must be flagged with @FlaggedApi: method android.service.notification.NotificationStats.hashCode()
UnflaggedApi: android.service.notification.NotificationStats#toString():
    New API must be flagged with @FlaggedApi: method android.service.notification.NotificationStats.toString()
UnflaggedApi: android.service.notification.SnoozeCriterion#equals(Object):
    New API must be flagged with @FlaggedApi: method android.service.notification.SnoozeCriterion.equals(Object)
UnflaggedApi: android.service.notification.SnoozeCriterion#hashCode():
    New API must be flagged with @FlaggedApi: method android.service.notification.SnoozeCriterion.hashCode()
UnflaggedApi: android.service.resolver.ResolverRankerService#onDestroy():
    New API must be flagged with @FlaggedApi: method android.service.resolver.ResolverRankerService.onDestroy()
UnflaggedApi: android.service.resolver.ResolverTarget#toString():
    New API must be flagged with @FlaggedApi: method android.service.resolver.ResolverTarget.toString()
UnflaggedApi: android.service.rotationresolver.RotationResolutionRequest#toString():
    New API must be flagged with @FlaggedApi: method android.service.rotationresolver.RotationResolutionRequest.toString()
UnflaggedApi: android.service.search.SearchUiService#onCreate():
    New API must be flagged with @FlaggedApi: method android.service.search.SearchUiService.onCreate()
UnflaggedApi: android.service.smartspace.SmartspaceService#onCreate():
    New API must be flagged with @FlaggedApi: method android.service.smartspace.SmartspaceService.onCreate()
UnflaggedApi: android.service.textclassifier.TextClassifierService#onUnbind(android.content.Intent):
    New API must be flagged with @FlaggedApi: method android.service.textclassifier.TextClassifierService.onUnbind(android.content.Intent)
UnflaggedApi: android.service.timezone.TimeZoneProviderStatus#equals(Object):
    New API must be flagged with @FlaggedApi: method android.service.timezone.TimeZoneProviderStatus.equals(Object)
UnflaggedApi: android.service.timezone.TimeZoneProviderStatus#hashCode():
    New API must be flagged with @FlaggedApi: method android.service.timezone.TimeZoneProviderStatus.hashCode()
UnflaggedApi: android.service.timezone.TimeZoneProviderStatus#toString():
    New API must be flagged with @FlaggedApi: method android.service.timezone.TimeZoneProviderStatus.toString()
UnflaggedApi: android.service.timezone.TimeZoneProviderSuggestion#equals(Object):
    New API must be flagged with @FlaggedApi: method android.service.timezone.TimeZoneProviderSuggestion.equals(Object)
UnflaggedApi: android.service.timezone.TimeZoneProviderSuggestion#hashCode():
    New API must be flagged with @FlaggedApi: method android.service.timezone.TimeZoneProviderSuggestion.hashCode()
UnflaggedApi: android.service.timezone.TimeZoneProviderSuggestion#toString():
    New API must be flagged with @FlaggedApi: method android.service.timezone.TimeZoneProviderSuggestion.toString()
UnflaggedApi: android.service.translation.TranslationService#onCreate():
    New API must be flagged with @FlaggedApi: method android.service.translation.TranslationService.onCreate()
UnflaggedApi: android.service.trust.TrustAgentService#onCreate():
    New API must be flagged with @FlaggedApi: method android.service.trust.TrustAgentService.onCreate()
UnflaggedApi: android.service.voice.AlwaysOnHotwordDetector#equals(Object):
    New API must be flagged with @FlaggedApi: method android.service.voice.AlwaysOnHotwordDetector.equals(Object)
UnflaggedApi: android.service.voice.AlwaysOnHotwordDetector#hashCode():
    New API must be flagged with @FlaggedApi: method android.service.voice.AlwaysOnHotwordDetector.hashCode()
UnflaggedApi: android.service.voice.AlwaysOnHotwordDetector.ModelParamRange#equals(Object):
    New API must be flagged with @FlaggedApi: method android.service.voice.AlwaysOnHotwordDetector.ModelParamRange.equals(Object)
UnflaggedApi: android.service.voice.AlwaysOnHotwordDetector.ModelParamRange#hashCode():
    New API must be flagged with @FlaggedApi: method android.service.voice.AlwaysOnHotwordDetector.ModelParamRange.hashCode()
UnflaggedApi: android.service.voice.AlwaysOnHotwordDetector.ModelParamRange#toString():
    New API must be flagged with @FlaggedApi: method android.service.voice.AlwaysOnHotwordDetector.ModelParamRange.toString()
UnflaggedApi: android.service.voice.HotwordAudioStream#equals(Object):
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordAudioStream.equals(Object)
UnflaggedApi: android.service.voice.HotwordAudioStream#hashCode():
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordAudioStream.hashCode()
UnflaggedApi: android.service.voice.HotwordAudioStream#toString():
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordAudioStream.toString()
UnflaggedApi: android.service.voice.HotwordDetectedResult#equals(Object):
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordDetectedResult.equals(Object)
UnflaggedApi: android.service.voice.HotwordDetectedResult#hashCode():
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordDetectedResult.hashCode()
UnflaggedApi: android.service.voice.HotwordDetectedResult#toString():
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordDetectedResult.toString()
UnflaggedApi: android.service.voice.HotwordDetectionService#getSystemService(String):
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordDetectionService.getSystemService(String)
UnflaggedApi: android.service.voice.HotwordDetectionServiceFailure#toString():
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordDetectionServiceFailure.toString()
UnflaggedApi: android.service.voice.HotwordRejectedResult#equals(Object):
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordRejectedResult.equals(Object)
UnflaggedApi: android.service.voice.HotwordRejectedResult#hashCode():
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordRejectedResult.hashCode()
UnflaggedApi: android.service.voice.HotwordRejectedResult#toString():
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordRejectedResult.toString()
UnflaggedApi: android.service.voice.HotwordTrainingAudio:
    New API must be flagged with @FlaggedApi: class android.service.voice.HotwordTrainingAudio
UnflaggedApi: android.service.voice.HotwordTrainingAudio#CONTENTS_FILE_DESCRIPTOR:
    New API must be flagged with @FlaggedApi: field android.service.voice.HotwordTrainingAudio.CONTENTS_FILE_DESCRIPTOR
UnflaggedApi: android.service.voice.HotwordTrainingAudio#CREATOR:
    New API must be flagged with @FlaggedApi: field android.service.voice.HotwordTrainingAudio.CREATOR
UnflaggedApi: android.service.voice.HotwordTrainingAudio#HOTWORD_OFFSET_UNSET:
    New API must be flagged with @FlaggedApi: field android.service.voice.HotwordTrainingAudio.HOTWORD_OFFSET_UNSET
UnflaggedApi: android.service.voice.HotwordTrainingAudio#PARCELABLE_WRITE_RETURN_VALUE:
    New API must be flagged with @FlaggedApi: field android.service.voice.HotwordTrainingAudio.PARCELABLE_WRITE_RETURN_VALUE
UnflaggedApi: android.service.voice.HotwordTrainingAudio#describeContents():
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordTrainingAudio.describeContents()
UnflaggedApi: android.service.voice.HotwordTrainingAudio#equals(Object):
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordTrainingAudio.equals(Object)
UnflaggedApi: android.service.voice.HotwordTrainingAudio#getAudioFormat():
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordTrainingAudio.getAudioFormat()
UnflaggedApi: android.service.voice.HotwordTrainingAudio#getAudioType():
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordTrainingAudio.getAudioType()
UnflaggedApi: android.service.voice.HotwordTrainingAudio#getHotwordAudio():
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordTrainingAudio.getHotwordAudio()
UnflaggedApi: android.service.voice.HotwordTrainingAudio#getHotwordOffsetMillis():
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordTrainingAudio.getHotwordOffsetMillis()
UnflaggedApi: android.service.voice.HotwordTrainingAudio#hashCode():
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordTrainingAudio.hashCode()
UnflaggedApi: android.service.voice.HotwordTrainingAudio#toString():
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordTrainingAudio.toString()
UnflaggedApi: android.service.voice.HotwordTrainingAudio#writeToParcel(android.os.Parcel, int):
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordTrainingAudio.writeToParcel(android.os.Parcel,int)
UnflaggedApi: android.service.voice.HotwordTrainingAudio.Builder:
    New API must be flagged with @FlaggedApi: class android.service.voice.HotwordTrainingAudio.Builder
UnflaggedApi: android.service.voice.HotwordTrainingAudio.Builder#Builder(byte[], android.media.AudioFormat):
    New API must be flagged with @FlaggedApi: constructor android.service.voice.HotwordTrainingAudio.Builder(byte[],android.media.AudioFormat)
UnflaggedApi: android.service.voice.HotwordTrainingAudio.Builder#build():
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordTrainingAudio.Builder.build()
UnflaggedApi: android.service.voice.HotwordTrainingAudio.Builder#setAudioFormat(android.media.AudioFormat):
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordTrainingAudio.Builder.setAudioFormat(android.media.AudioFormat)
UnflaggedApi: android.service.voice.HotwordTrainingAudio.Builder#setAudioType(int):
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordTrainingAudio.Builder.setAudioType(int)
UnflaggedApi: android.service.voice.HotwordTrainingAudio.Builder#setHotwordAudio(byte...):
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordTrainingAudio.Builder.setHotwordAudio(byte...)
UnflaggedApi: android.service.voice.HotwordTrainingAudio.Builder#setHotwordOffsetMillis(int):
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordTrainingAudio.Builder.setHotwordOffsetMillis(int)
UnflaggedApi: android.service.voice.HotwordTrainingData:
    New API must be flagged with @FlaggedApi: class android.service.voice.HotwordTrainingData
UnflaggedApi: android.service.voice.HotwordTrainingData#CONTENTS_FILE_DESCRIPTOR:
    New API must be flagged with @FlaggedApi: field android.service.voice.HotwordTrainingData.CONTENTS_FILE_DESCRIPTOR
UnflaggedApi: android.service.voice.HotwordTrainingData#CREATOR:
    New API must be flagged with @FlaggedApi: field android.service.voice.HotwordTrainingData.CREATOR
UnflaggedApi: android.service.voice.HotwordTrainingData#PARCELABLE_WRITE_RETURN_VALUE:
    New API must be flagged with @FlaggedApi: field android.service.voice.HotwordTrainingData.PARCELABLE_WRITE_RETURN_VALUE
UnflaggedApi: android.service.voice.HotwordTrainingData#TIMEOUT_STAGE_EARLY:
    New API must be flagged with @FlaggedApi: field android.service.voice.HotwordTrainingData.TIMEOUT_STAGE_EARLY
UnflaggedApi: android.service.voice.HotwordTrainingData#TIMEOUT_STAGE_LATE:
    New API must be flagged with @FlaggedApi: field android.service.voice.HotwordTrainingData.TIMEOUT_STAGE_LATE
UnflaggedApi: android.service.voice.HotwordTrainingData#TIMEOUT_STAGE_MIDDLE:
    New API must be flagged with @FlaggedApi: field android.service.voice.HotwordTrainingData.TIMEOUT_STAGE_MIDDLE
UnflaggedApi: android.service.voice.HotwordTrainingData#TIMEOUT_STAGE_UNKNOWN:
    New API must be flagged with @FlaggedApi: field android.service.voice.HotwordTrainingData.TIMEOUT_STAGE_UNKNOWN
UnflaggedApi: android.service.voice.HotwordTrainingData#TIMEOUT_STAGE_VERY_EARLY:
    New API must be flagged with @FlaggedApi: field android.service.voice.HotwordTrainingData.TIMEOUT_STAGE_VERY_EARLY
UnflaggedApi: android.service.voice.HotwordTrainingData#describeContents():
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordTrainingData.describeContents()
UnflaggedApi: android.service.voice.HotwordTrainingData#equals(Object):
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordTrainingData.equals(Object)
UnflaggedApi: android.service.voice.HotwordTrainingData#getMaxTrainingDataSize():
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordTrainingData.getMaxTrainingDataSize()
UnflaggedApi: android.service.voice.HotwordTrainingData#getTimeoutStage():
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordTrainingData.getTimeoutStage()
UnflaggedApi: android.service.voice.HotwordTrainingData#getTrainingAudios():
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordTrainingData.getTrainingAudios()
UnflaggedApi: android.service.voice.HotwordTrainingData#hashCode():
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordTrainingData.hashCode()
UnflaggedApi: android.service.voice.HotwordTrainingData#toString():
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordTrainingData.toString()
UnflaggedApi: android.service.voice.HotwordTrainingData#writeToParcel(android.os.Parcel, int):
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordTrainingData.writeToParcel(android.os.Parcel,int)
UnflaggedApi: android.service.voice.HotwordTrainingData.Builder:
    New API must be flagged with @FlaggedApi: class android.service.voice.HotwordTrainingData.Builder
UnflaggedApi: android.service.voice.HotwordTrainingData.Builder#Builder():
    New API must be flagged with @FlaggedApi: constructor android.service.voice.HotwordTrainingData.Builder()
UnflaggedApi: android.service.voice.HotwordTrainingData.Builder#addTrainingAudio(android.service.voice.HotwordTrainingAudio):
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordTrainingData.Builder.addTrainingAudio(android.service.voice.HotwordTrainingAudio)
UnflaggedApi: android.service.voice.HotwordTrainingData.Builder#build():
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordTrainingData.Builder.build()
UnflaggedApi: android.service.voice.HotwordTrainingData.Builder#setTimeoutStage(int):
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordTrainingData.Builder.setTimeoutStage(int)
UnflaggedApi: android.service.voice.HotwordTrainingData.Builder#setTrainingAudios(java.util.List<android.service.voice.HotwordTrainingAudio>):
    New API must be flagged with @FlaggedApi: method android.service.voice.HotwordTrainingData.Builder.setTrainingAudios(java.util.List<android.service.voice.HotwordTrainingAudio>)
UnflaggedApi: android.service.voice.SoundTriggerFailure#toString():
    New API must be flagged with @FlaggedApi: method android.service.voice.SoundTriggerFailure.toString()
UnflaggedApi: android.service.voice.VisualQueryDetectionService#getSystemService(String):
    New API must be flagged with @FlaggedApi: method android.service.voice.VisualQueryDetectionService.getSystemService(String)
UnflaggedApi: android.service.voice.VisualQueryDetectionService#openFileInput(String):
    New API must be flagged with @FlaggedApi: method android.service.voice.VisualQueryDetectionService.openFileInput(String)
UnflaggedApi: android.service.voice.VisualQueryDetectionServiceFailure#toString():
    New API must be flagged with @FlaggedApi: method android.service.voice.VisualQueryDetectionServiceFailure.toString()
UnflaggedApi: android.service.wallpaper.WallpaperService.Engine#isInAmbientMode():
    New API must be flagged with @FlaggedApi: method android.service.wallpaper.WallpaperService.Engine.isInAmbientMode()
UnflaggedApi: android.service.wallpaper.WallpaperService.Engine#onAmbientModeChanged(boolean, long):
    New API must be flagged with @FlaggedApi: method android.service.wallpaper.WallpaperService.Engine.onAmbientModeChanged(boolean,long)
UnflaggedApi: android.service.wallpapereffectsgeneration.WallpaperEffectsGenerationService#onCreate():
    New API must be flagged with @FlaggedApi: method android.service.wallpapereffectsgeneration.WallpaperEffectsGenerationService.onCreate()
UnflaggedApi: android.service.watchdog.ExplicitHealthCheckService.PackageConfig#equals(Object):
    New API must be flagged with @FlaggedApi: method android.service.watchdog.ExplicitHealthCheckService.PackageConfig.equals(Object)
UnflaggedApi: android.service.watchdog.ExplicitHealthCheckService.PackageConfig#hashCode():
    New API must be flagged with @FlaggedApi: method android.service.watchdog.ExplicitHealthCheckService.PackageConfig.hashCode()
UnflaggedApi: android.service.watchdog.ExplicitHealthCheckService.PackageConfig#toString():
    New API must be flagged with @FlaggedApi: method android.service.watchdog.ExplicitHealthCheckService.PackageConfig.toString()
UnflaggedApi: android.telecom.AudioState#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telecom.AudioState.equals(Object)
UnflaggedApi: android.telecom.AudioState#toString():
    New API must be flagged with @FlaggedApi: method android.telecom.AudioState.toString()
UnflaggedApi: android.telecom.BluetoothCallQualityReport#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telecom.BluetoothCallQualityReport.equals(Object)
UnflaggedApi: android.telecom.BluetoothCallQualityReport#hashCode():
    New API must be flagged with @FlaggedApi: method android.telecom.BluetoothCallQualityReport.hashCode()
UnflaggedApi: android.telecom.CallScreeningService.CallResponse.Builder#setShouldScreenCallViaAudioProcessing(boolean):
    New API must be flagged with @FlaggedApi: method android.telecom.CallScreeningService.CallResponse.Builder.setShouldScreenCallViaAudioProcessing(boolean)
UnflaggedApi: android.telecom.Connection.CallFilteringCompletionInfo#toString():
    New API must be flagged with @FlaggedApi: method android.telecom.Connection.CallFilteringCompletionInfo.toString()
UnflaggedApi: android.telecom.StreamingCall#EXTRA_CALL_ID:
    New API must be flagged with @FlaggedApi: field android.telecom.StreamingCall.EXTRA_CALL_ID
UnflaggedApi: android.telephony.CallAttributes#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.CallAttributes.equals(Object)
UnflaggedApi: android.telephony.CallAttributes#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.CallAttributes.hashCode()
UnflaggedApi: android.telephony.CallAttributes#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.CallAttributes.toString()
UnflaggedApi: android.telephony.CallQuality#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.CallQuality.equals(Object)
UnflaggedApi: android.telephony.CallQuality#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.CallQuality.hashCode()
UnflaggedApi: android.telephony.CallQuality#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.CallQuality.toString()
UnflaggedApi: android.telephony.CallState#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.CallState.equals(Object)
UnflaggedApi: android.telephony.CallState#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.CallState.hashCode()
UnflaggedApi: android.telephony.CallState#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.CallState.toString()
UnflaggedApi: android.telephony.CarrierRestrictionRules#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.CarrierRestrictionRules.toString()
UnflaggedApi: android.telephony.CbGeoUtils.Circle#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.CbGeoUtils.Circle.toString()
UnflaggedApi: android.telephony.CbGeoUtils.LatLng#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.CbGeoUtils.LatLng.toString()
UnflaggedApi: android.telephony.CbGeoUtils.Polygon#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.CbGeoUtils.Polygon.toString()
UnflaggedApi: android.telephony.CellBroadcastIdRange#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.CellBroadcastIdRange.equals(Object)
UnflaggedApi: android.telephony.CellBroadcastIdRange#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.CellBroadcastIdRange.hashCode()
UnflaggedApi: android.telephony.CellBroadcastIdRange#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.CellBroadcastIdRange.toString()
UnflaggedApi: android.telephony.DataSpecificRegistrationInfo#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.DataSpecificRegistrationInfo.equals(Object)
UnflaggedApi: android.telephony.DataSpecificRegistrationInfo#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.DataSpecificRegistrationInfo.hashCode()
UnflaggedApi: android.telephony.DataSpecificRegistrationInfo#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.DataSpecificRegistrationInfo.toString()
UnflaggedApi: android.telephony.DataThrottlingRequest#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.DataThrottlingRequest.toString()
UnflaggedApi: android.telephony.ImsiEncryptionInfo#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ImsiEncryptionInfo.toString()
UnflaggedApi: android.telephony.LinkCapacityEstimate#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.LinkCapacityEstimate.equals(Object)
UnflaggedApi: android.telephony.LinkCapacityEstimate#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.LinkCapacityEstimate.hashCode()
UnflaggedApi: android.telephony.LinkCapacityEstimate#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.LinkCapacityEstimate.toString()
UnflaggedApi: android.telephony.LteVopsSupportInfo#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.LteVopsSupportInfo.toString()
UnflaggedApi: android.telephony.ModemActivityInfo#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.ModemActivityInfo.equals(Object)
UnflaggedApi: android.telephony.ModemActivityInfo#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.ModemActivityInfo.hashCode()
UnflaggedApi: android.telephony.ModemActivityInfo#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ModemActivityInfo.toString()
UnflaggedApi: android.telephony.NetworkRegistrationInfo.Builder#setIsNonTerrestrialNetwork(boolean):
    New API must be flagged with @FlaggedApi: method android.telephony.NetworkRegistrationInfo.Builder.setIsNonTerrestrialNetwork(boolean)
UnflaggedApi: android.telephony.NetworkService#onUnbind(android.content.Intent):
    New API must be flagged with @FlaggedApi: method android.telephony.NetworkService.onUnbind(android.content.Intent)
UnflaggedApi: android.telephony.NrVopsSupportInfo#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.NrVopsSupportInfo.toString()
UnflaggedApi: android.telephony.PhoneCapability#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.PhoneCapability.equals(Object)
UnflaggedApi: android.telephony.PhoneCapability#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.PhoneCapability.hashCode()
UnflaggedApi: android.telephony.PhoneCapability#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.PhoneCapability.toString()
UnflaggedApi: android.telephony.PhoneNumberRange#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.PhoneNumberRange.equals(Object)
UnflaggedApi: android.telephony.PhoneNumberRange#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.PhoneNumberRange.hashCode()
UnflaggedApi: android.telephony.PhoneNumberRange#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.PhoneNumberRange.toString()
UnflaggedApi: android.telephony.PinResult#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.PinResult.equals(Object)
UnflaggedApi: android.telephony.PinResult#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.PinResult.hashCode()
UnflaggedApi: android.telephony.PinResult#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.PinResult.toString()
UnflaggedApi: android.telephony.PreciseCallState#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.PreciseCallState.equals(Object)
UnflaggedApi: android.telephony.PreciseCallState#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.PreciseCallState.hashCode()
UnflaggedApi: android.telephony.PreciseCallState#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.PreciseCallState.toString()
UnflaggedApi: android.telephony.SmsCbCmasInfo#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.SmsCbCmasInfo.toString()
UnflaggedApi: android.telephony.SmsCbEtwsInfo#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.SmsCbEtwsInfo.toString()
UnflaggedApi: android.telephony.SmsCbLocation#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.SmsCbLocation.equals(Object)
UnflaggedApi: android.telephony.SmsCbLocation#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.SmsCbLocation.hashCode()
UnflaggedApi: android.telephony.SmsCbLocation#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.SmsCbLocation.toString()
UnflaggedApi: android.telephony.SmsCbMessage#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.SmsCbMessage.toString()
UnflaggedApi: android.telephony.TelephonyHistogram#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.TelephonyHistogram.toString()
UnflaggedApi: android.telephony.TelephonyManager.ModemActivityInfoException#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.TelephonyManager.ModemActivityInfoException.toString()
UnflaggedApi: android.telephony.ThermalMitigationRequest#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ThermalMitigationRequest.toString()
UnflaggedApi: android.telephony.UiccAccessRule#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.UiccAccessRule.equals(Object)
UnflaggedApi: android.telephony.UiccAccessRule#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.UiccAccessRule.hashCode()
UnflaggedApi: android.telephony.UiccAccessRule#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.UiccAccessRule.toString()
UnflaggedApi: android.telephony.UiccSlotInfo#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.UiccSlotInfo.equals(Object)
UnflaggedApi: android.telephony.UiccSlotInfo#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.UiccSlotInfo.hashCode()
UnflaggedApi: android.telephony.UiccSlotInfo#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.UiccSlotInfo.toString()
UnflaggedApi: android.telephony.UiccSlotMapping#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.UiccSlotMapping.equals(Object)
UnflaggedApi: android.telephony.UiccSlotMapping#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.UiccSlotMapping.hashCode()
UnflaggedApi: android.telephony.UiccSlotMapping#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.UiccSlotMapping.toString()
UnflaggedApi: android.telephony.VopsSupportInfo#writeToParcel(android.os.Parcel, int):
    New API must be flagged with @FlaggedApi: method android.telephony.VopsSupportInfo.writeToParcel(android.os.Parcel,int)
UnflaggedApi: android.telephony.cdma.CdmaSmsCbProgramData#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.cdma.CdmaSmsCbProgramData.toString()
UnflaggedApi: android.telephony.data.DataCallResponse#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.data.DataCallResponse.equals(Object)
UnflaggedApi: android.telephony.data.DataCallResponse#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.data.DataCallResponse.hashCode()
UnflaggedApi: android.telephony.data.DataCallResponse#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.data.DataCallResponse.toString()
UnflaggedApi: android.telephony.data.DataProfile#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.data.DataProfile.equals(Object)
UnflaggedApi: android.telephony.data.DataProfile#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.data.DataProfile.hashCode()
UnflaggedApi: android.telephony.data.DataProfile#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.data.DataProfile.toString()
UnflaggedApi: android.telephony.data.DataService#onDestroy():
    New API must be flagged with @FlaggedApi: method android.telephony.data.DataService.onDestroy()
UnflaggedApi: android.telephony.data.DataService#onUnbind(android.content.Intent):
    New API must be flagged with @FlaggedApi: method android.telephony.data.DataService.onUnbind(android.content.Intent)
UnflaggedApi: android.telephony.data.EpsBearerQosSessionAttributes#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.data.EpsBearerQosSessionAttributes.equals(Object)
UnflaggedApi: android.telephony.data.EpsBearerQosSessionAttributes#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.data.EpsBearerQosSessionAttributes.hashCode()
UnflaggedApi: android.telephony.data.NrQosSessionAttributes#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.data.NrQosSessionAttributes.equals(Object)
UnflaggedApi: android.telephony.data.NrQosSessionAttributes#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.data.NrQosSessionAttributes.hashCode()
UnflaggedApi: android.telephony.data.ThrottleStatus#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.data.ThrottleStatus.equals(Object)
UnflaggedApi: android.telephony.data.ThrottleStatus#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.data.ThrottleStatus.hashCode()
UnflaggedApi: android.telephony.data.ThrottleStatus#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.data.ThrottleStatus.toString()
UnflaggedApi: android.telephony.euicc.EuiccNotification#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.euicc.EuiccNotification.equals(Object)
UnflaggedApi: android.telephony.euicc.EuiccNotification#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.euicc.EuiccNotification.hashCode()
UnflaggedApi: android.telephony.euicc.EuiccNotification#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.euicc.EuiccNotification.toString()
UnflaggedApi: android.telephony.euicc.EuiccRulesAuthTable#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.euicc.EuiccRulesAuthTable.equals(Object)
UnflaggedApi: android.telephony.gba.UaSecurityProtocolIdentifier#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.gba.UaSecurityProtocolIdentifier.equals(Object)
UnflaggedApi: android.telephony.gba.UaSecurityProtocolIdentifier#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.gba.UaSecurityProtocolIdentifier.hashCode()
UnflaggedApi: android.telephony.gba.UaSecurityProtocolIdentifier#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.gba.UaSecurityProtocolIdentifier.toString()
UnflaggedApi: android.telephony.ims.AudioCodecAttributes#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.AudioCodecAttributes.toString()
UnflaggedApi: android.telephony.ims.DelegateRegistrationState#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.ims.DelegateRegistrationState.equals(Object)
UnflaggedApi: android.telephony.ims.DelegateRegistrationState#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.DelegateRegistrationState.hashCode()
UnflaggedApi: android.telephony.ims.DelegateRegistrationState#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.DelegateRegistrationState.toString()
UnflaggedApi: android.telephony.ims.DelegateRequest#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.ims.DelegateRequest.equals(Object)
UnflaggedApi: android.telephony.ims.DelegateRequest#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.DelegateRequest.hashCode()
UnflaggedApi: android.telephony.ims.DelegateRequest#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.DelegateRequest.toString()
UnflaggedApi: android.telephony.ims.FeatureTagState#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.ims.FeatureTagState.equals(Object)
UnflaggedApi: android.telephony.ims.FeatureTagState#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.FeatureTagState.hashCode()
UnflaggedApi: android.telephony.ims.FeatureTagState#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.FeatureTagState.toString()
UnflaggedApi: android.telephony.ims.ImsCallForwardInfo#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.ImsCallForwardInfo.toString()
UnflaggedApi: android.telephony.ims.ImsCallProfile#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.ImsCallProfile.toString()
UnflaggedApi: android.telephony.ims.ImsConferenceState#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.ImsConferenceState.toString()
UnflaggedApi: android.telephony.ims.ImsExternalCallState#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.ImsExternalCallState.toString()
UnflaggedApi: android.telephony.ims.ImsMmTelManager.RegistrationCallback#onTechnologyChangeFailed(int, android.telephony.ims.ImsReasonInfo):
    New API must be flagged with @FlaggedApi: method android.telephony.ims.ImsMmTelManager.RegistrationCallback.onTechnologyChangeFailed(int,android.telephony.ims.ImsReasonInfo)
UnflaggedApi: android.telephony.ims.ImsMmTelManager.RegistrationCallback#onUnregistered(android.telephony.ims.ImsReasonInfo):
    New API must be flagged with @FlaggedApi: method android.telephony.ims.ImsMmTelManager.RegistrationCallback.onUnregistered(android.telephony.ims.ImsReasonInfo)
UnflaggedApi: android.telephony.ims.ImsSsData#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.ImsSsData.toString()
UnflaggedApi: android.telephony.ims.ImsSsInfo#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.ImsSsInfo.toString()
UnflaggedApi: android.telephony.ims.ImsStreamMediaProfile#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.ImsStreamMediaProfile.toString()
UnflaggedApi: android.telephony.ims.ImsSuppServiceNotification#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.ImsSuppServiceNotification.toString()
UnflaggedApi: android.telephony.ims.MediaQualityStatus#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.ims.MediaQualityStatus.equals(Object)
UnflaggedApi: android.telephony.ims.MediaQualityStatus#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.MediaQualityStatus.hashCode()
UnflaggedApi: android.telephony.ims.MediaQualityStatus#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.MediaQualityStatus.toString()
UnflaggedApi: android.telephony.ims.MediaThreshold#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.ims.MediaThreshold.equals(Object)
UnflaggedApi: android.telephony.ims.MediaThreshold#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.MediaThreshold.hashCode()
UnflaggedApi: android.telephony.ims.MediaThreshold#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.MediaThreshold.toString()
UnflaggedApi: android.telephony.ims.PublishAttributes#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.ims.PublishAttributes.equals(Object)
UnflaggedApi: android.telephony.ims.PublishAttributes#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.PublishAttributes.hashCode()
UnflaggedApi: android.telephony.ims.PublishAttributes#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.PublishAttributes.toString()
UnflaggedApi: android.telephony.ims.RcsClientConfiguration#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.ims.RcsClientConfiguration.equals(Object)
UnflaggedApi: android.telephony.ims.RcsClientConfiguration#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.RcsClientConfiguration.hashCode()
UnflaggedApi: android.telephony.ims.RcsContactPresenceTuple#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.RcsContactPresenceTuple.toString()
UnflaggedApi: android.telephony.ims.RcsContactPresenceTuple.ServiceCapabilities#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.RcsContactPresenceTuple.ServiceCapabilities.toString()
UnflaggedApi: android.telephony.ims.RcsContactUceCapability#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.RcsContactUceCapability.toString()
UnflaggedApi: android.telephony.ims.RtpHeaderExtension#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.ims.RtpHeaderExtension.equals(Object)
UnflaggedApi: android.telephony.ims.RtpHeaderExtension#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.RtpHeaderExtension.hashCode()
UnflaggedApi: android.telephony.ims.RtpHeaderExtension#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.RtpHeaderExtension.toString()
UnflaggedApi: android.telephony.ims.RtpHeaderExtensionType#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.ims.RtpHeaderExtensionType.equals(Object)
UnflaggedApi: android.telephony.ims.RtpHeaderExtensionType#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.RtpHeaderExtensionType.hashCode()
UnflaggedApi: android.telephony.ims.RtpHeaderExtensionType#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.RtpHeaderExtensionType.toString()
UnflaggedApi: android.telephony.ims.SipDelegateConfiguration#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.ims.SipDelegateConfiguration.equals(Object)
UnflaggedApi: android.telephony.ims.SipDelegateConfiguration#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.SipDelegateConfiguration.hashCode()
UnflaggedApi: android.telephony.ims.SipDelegateConfiguration#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.SipDelegateConfiguration.toString()
UnflaggedApi: android.telephony.ims.SipDelegateConfiguration.IpSecConfiguration#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.ims.SipDelegateConfiguration.IpSecConfiguration.equals(Object)
UnflaggedApi: android.telephony.ims.SipDelegateConfiguration.IpSecConfiguration#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.SipDelegateConfiguration.IpSecConfiguration.hashCode()
UnflaggedApi: android.telephony.ims.SipDelegateConfiguration.IpSecConfiguration#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.SipDelegateConfiguration.IpSecConfiguration.toString()
UnflaggedApi: android.telephony.ims.SipDialogState#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.ims.SipDialogState.equals(Object)
UnflaggedApi: android.telephony.ims.SipDialogState#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.SipDialogState.hashCode()
UnflaggedApi: android.telephony.ims.SipMessage#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.ims.SipMessage.equals(Object)
UnflaggedApi: android.telephony.ims.SipMessage#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.SipMessage.hashCode()
UnflaggedApi: android.telephony.ims.SipMessage#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.SipMessage.toString()
UnflaggedApi: android.telephony.ims.SrvccCall#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.ims.SrvccCall.equals(Object)
UnflaggedApi: android.telephony.ims.SrvccCall#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.SrvccCall.hashCode()
UnflaggedApi: android.telephony.ims.SrvccCall#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.SrvccCall.toString()
UnflaggedApi: android.telephony.ims.feature.CapabilityChangeRequest#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.feature.CapabilityChangeRequest.toString()
UnflaggedApi: android.telephony.ims.feature.CapabilityChangeRequest.CapabilityPair#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.feature.CapabilityChangeRequest.CapabilityPair.toString()
UnflaggedApi: android.telephony.ims.stub.ImsFeatureConfiguration.FeatureSlotPair#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.ims.stub.ImsFeatureConfiguration.FeatureSlotPair.equals(Object)
UnflaggedApi: android.telephony.ims.stub.ImsFeatureConfiguration.FeatureSlotPair#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.stub.ImsFeatureConfiguration.FeatureSlotPair.hashCode()
UnflaggedApi: android.telephony.ims.stub.ImsFeatureConfiguration.FeatureSlotPair#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.ims.stub.ImsFeatureConfiguration.FeatureSlotPair.toString()
UnflaggedApi: android.telephony.mbms.DownloadRequest.Builder#setServiceId(String):
    New API must be flagged with @FlaggedApi: method android.telephony.mbms.DownloadRequest.Builder.setServiceId(String)
UnflaggedApi: android.telephony.mbms.vendor.MbmsDownloadServiceBase#DESCRIPTOR:
    New API must be flagged with @FlaggedApi: field android.telephony.mbms.vendor.MbmsDownloadServiceBase.DESCRIPTOR
UnflaggedApi: android.telephony.mbms.vendor.MbmsStreamingServiceBase#DESCRIPTOR:
    New API must be flagged with @FlaggedApi: field android.telephony.mbms.vendor.MbmsStreamingServiceBase.DESCRIPTOR
UnflaggedApi: android.telephony.satellite.AntennaDirection:
    New API must be flagged with @FlaggedApi: class android.telephony.satellite.AntennaDirection
UnflaggedApi: android.telephony.satellite.AntennaDirection#CONTENTS_FILE_DESCRIPTOR:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.AntennaDirection.CONTENTS_FILE_DESCRIPTOR
UnflaggedApi: android.telephony.satellite.AntennaDirection#CREATOR:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.AntennaDirection.CREATOR
UnflaggedApi: android.telephony.satellite.AntennaDirection#PARCELABLE_WRITE_RETURN_VALUE:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.AntennaDirection.PARCELABLE_WRITE_RETURN_VALUE
UnflaggedApi: android.telephony.satellite.AntennaDirection#describeContents():
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.AntennaDirection.describeContents()
UnflaggedApi: android.telephony.satellite.AntennaDirection#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.AntennaDirection.equals(Object)
UnflaggedApi: android.telephony.satellite.AntennaDirection#getX():
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.AntennaDirection.getX()
UnflaggedApi: android.telephony.satellite.AntennaDirection#getY():
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.AntennaDirection.getY()
UnflaggedApi: android.telephony.satellite.AntennaDirection#getZ():
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.AntennaDirection.getZ()
UnflaggedApi: android.telephony.satellite.AntennaDirection#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.AntennaDirection.hashCode()
UnflaggedApi: android.telephony.satellite.AntennaDirection#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.AntennaDirection.toString()
UnflaggedApi: android.telephony.satellite.AntennaDirection#writeToParcel(android.os.Parcel, int):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.AntennaDirection.writeToParcel(android.os.Parcel,int)
UnflaggedApi: android.telephony.satellite.AntennaPosition:
    New API must be flagged with @FlaggedApi: class android.telephony.satellite.AntennaPosition
UnflaggedApi: android.telephony.satellite.AntennaPosition#CONTENTS_FILE_DESCRIPTOR:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.AntennaPosition.CONTENTS_FILE_DESCRIPTOR
UnflaggedApi: android.telephony.satellite.AntennaPosition#CREATOR:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.AntennaPosition.CREATOR
UnflaggedApi: android.telephony.satellite.AntennaPosition#PARCELABLE_WRITE_RETURN_VALUE:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.AntennaPosition.PARCELABLE_WRITE_RETURN_VALUE
UnflaggedApi: android.telephony.satellite.AntennaPosition#describeContents():
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.AntennaPosition.describeContents()
UnflaggedApi: android.telephony.satellite.AntennaPosition#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.AntennaPosition.equals(Object)
UnflaggedApi: android.telephony.satellite.AntennaPosition#getAntennaDirection():
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.AntennaPosition.getAntennaDirection()
UnflaggedApi: android.telephony.satellite.AntennaPosition#getSuggestedHoldPosition():
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.AntennaPosition.getSuggestedHoldPosition()
UnflaggedApi: android.telephony.satellite.AntennaPosition#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.AntennaPosition.hashCode()
UnflaggedApi: android.telephony.satellite.AntennaPosition#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.AntennaPosition.toString()
UnflaggedApi: android.telephony.satellite.AntennaPosition#writeToParcel(android.os.Parcel, int):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.AntennaPosition.writeToParcel(android.os.Parcel,int)
UnflaggedApi: android.telephony.satellite.PointingInfo:
    New API must be flagged with @FlaggedApi: class android.telephony.satellite.PointingInfo
UnflaggedApi: android.telephony.satellite.PointingInfo#CONTENTS_FILE_DESCRIPTOR:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.PointingInfo.CONTENTS_FILE_DESCRIPTOR
UnflaggedApi: android.telephony.satellite.PointingInfo#CREATOR:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.PointingInfo.CREATOR
UnflaggedApi: android.telephony.satellite.PointingInfo#PARCELABLE_WRITE_RETURN_VALUE:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.PointingInfo.PARCELABLE_WRITE_RETURN_VALUE
UnflaggedApi: android.telephony.satellite.PointingInfo#describeContents():
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.PointingInfo.describeContents()
UnflaggedApi: android.telephony.satellite.PointingInfo#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.PointingInfo.equals(Object)
UnflaggedApi: android.telephony.satellite.PointingInfo#getSatelliteAzimuthDegrees():
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.PointingInfo.getSatelliteAzimuthDegrees()
UnflaggedApi: android.telephony.satellite.PointingInfo#getSatelliteElevationDegrees():
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.PointingInfo.getSatelliteElevationDegrees()
UnflaggedApi: android.telephony.satellite.PointingInfo#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.PointingInfo.hashCode()
UnflaggedApi: android.telephony.satellite.PointingInfo#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.PointingInfo.toString()
UnflaggedApi: android.telephony.satellite.PointingInfo#writeToParcel(android.os.Parcel, int):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.PointingInfo.writeToParcel(android.os.Parcel,int)
UnflaggedApi: android.telephony.satellite.SatelliteCapabilities:
    New API must be flagged with @FlaggedApi: class android.telephony.satellite.SatelliteCapabilities
UnflaggedApi: android.telephony.satellite.SatelliteCapabilities#CONTENTS_FILE_DESCRIPTOR:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteCapabilities.CONTENTS_FILE_DESCRIPTOR
UnflaggedApi: android.telephony.satellite.SatelliteCapabilities#CREATOR:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteCapabilities.CREATOR
UnflaggedApi: android.telephony.satellite.SatelliteCapabilities#PARCELABLE_WRITE_RETURN_VALUE:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteCapabilities.PARCELABLE_WRITE_RETURN_VALUE
UnflaggedApi: android.telephony.satellite.SatelliteCapabilities#describeContents():
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteCapabilities.describeContents()
UnflaggedApi: android.telephony.satellite.SatelliteCapabilities#equals(Object):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteCapabilities.equals(Object)
UnflaggedApi: android.telephony.satellite.SatelliteCapabilities#getAntennaPositionMap():
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteCapabilities.getAntennaPositionMap()
UnflaggedApi: android.telephony.satellite.SatelliteCapabilities#getMaxBytesPerOutgoingDatagram():
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteCapabilities.getMaxBytesPerOutgoingDatagram()
UnflaggedApi: android.telephony.satellite.SatelliteCapabilities#getSupportedRadioTechnologies():
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteCapabilities.getSupportedRadioTechnologies()
UnflaggedApi: android.telephony.satellite.SatelliteCapabilities#hashCode():
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteCapabilities.hashCode()
UnflaggedApi: android.telephony.satellite.SatelliteCapabilities#isPointingRequired():
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteCapabilities.isPointingRequired()
UnflaggedApi: android.telephony.satellite.SatelliteCapabilities#toString():
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteCapabilities.toString()
UnflaggedApi: android.telephony.satellite.SatelliteCapabilities#writeToParcel(android.os.Parcel, int):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteCapabilities.writeToParcel(android.os.Parcel,int)
UnflaggedApi: android.telephony.satellite.SatelliteDatagram:
    New API must be flagged with @FlaggedApi: class android.telephony.satellite.SatelliteDatagram
UnflaggedApi: android.telephony.satellite.SatelliteDatagram#CONTENTS_FILE_DESCRIPTOR:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteDatagram.CONTENTS_FILE_DESCRIPTOR
UnflaggedApi: android.telephony.satellite.SatelliteDatagram#CREATOR:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteDatagram.CREATOR
UnflaggedApi: android.telephony.satellite.SatelliteDatagram#PARCELABLE_WRITE_RETURN_VALUE:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteDatagram.PARCELABLE_WRITE_RETURN_VALUE
UnflaggedApi: android.telephony.satellite.SatelliteDatagram#describeContents():
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteDatagram.describeContents()
UnflaggedApi: android.telephony.satellite.SatelliteDatagram#getSatelliteDatagram():
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteDatagram.getSatelliteDatagram()
UnflaggedApi: android.telephony.satellite.SatelliteDatagram#writeToParcel(android.os.Parcel, int):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteDatagram.writeToParcel(android.os.Parcel,int)
UnflaggedApi: android.telephony.satellite.SatelliteDatagramCallback:
    New API must be flagged with @FlaggedApi: class android.telephony.satellite.SatelliteDatagramCallback
UnflaggedApi: android.telephony.satellite.SatelliteDatagramCallback#onSatelliteDatagramReceived(long, android.telephony.satellite.SatelliteDatagram, int, java.util.function.Consumer<java.lang.Void>):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteDatagramCallback.onSatelliteDatagramReceived(long,android.telephony.satellite.SatelliteDatagram,int,java.util.function.Consumer<java.lang.Void>)
UnflaggedApi: android.telephony.satellite.SatelliteManager:
    New API must be flagged with @FlaggedApi: class android.telephony.satellite.SatelliteManager
UnflaggedApi: android.telephony.satellite.SatelliteManager#DATAGRAM_TYPE_LOCATION_SHARING:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.DATAGRAM_TYPE_LOCATION_SHARING
UnflaggedApi: android.telephony.satellite.SatelliteManager#DATAGRAM_TYPE_SOS_MESSAGE:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.DATAGRAM_TYPE_SOS_MESSAGE
UnflaggedApi: android.telephony.satellite.SatelliteManager#DATAGRAM_TYPE_UNKNOWN:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.DATAGRAM_TYPE_UNKNOWN
UnflaggedApi: android.telephony.satellite.SatelliteManager#DEVICE_HOLD_POSITION_LANDSCAPE_LEFT:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.DEVICE_HOLD_POSITION_LANDSCAPE_LEFT
UnflaggedApi: android.telephony.satellite.SatelliteManager#DEVICE_HOLD_POSITION_LANDSCAPE_RIGHT:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.DEVICE_HOLD_POSITION_LANDSCAPE_RIGHT
UnflaggedApi: android.telephony.satellite.SatelliteManager#DEVICE_HOLD_POSITION_PORTRAIT:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.DEVICE_HOLD_POSITION_PORTRAIT
UnflaggedApi: android.telephony.satellite.SatelliteManager#DEVICE_HOLD_POSITION_UNKNOWN:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.DEVICE_HOLD_POSITION_UNKNOWN
UnflaggedApi: android.telephony.satellite.SatelliteManager#DISPLAY_MODE_CLOSED:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.DISPLAY_MODE_CLOSED
UnflaggedApi: android.telephony.satellite.SatelliteManager#DISPLAY_MODE_FIXED:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.DISPLAY_MODE_FIXED
UnflaggedApi: android.telephony.satellite.SatelliteManager#DISPLAY_MODE_OPENED:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.DISPLAY_MODE_OPENED
UnflaggedApi: android.telephony.satellite.SatelliteManager#DISPLAY_MODE_UNKNOWN:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.DISPLAY_MODE_UNKNOWN
UnflaggedApi: android.telephony.satellite.SatelliteManager#NT_RADIO_TECHNOLOGY_EMTC_NTN:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.NT_RADIO_TECHNOLOGY_EMTC_NTN
UnflaggedApi: android.telephony.satellite.SatelliteManager#NT_RADIO_TECHNOLOGY_NB_IOT_NTN:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.NT_RADIO_TECHNOLOGY_NB_IOT_NTN
UnflaggedApi: android.telephony.satellite.SatelliteManager#NT_RADIO_TECHNOLOGY_NR_NTN:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.NT_RADIO_TECHNOLOGY_NR_NTN
UnflaggedApi: android.telephony.satellite.SatelliteManager#NT_RADIO_TECHNOLOGY_PROPRIETARY:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.NT_RADIO_TECHNOLOGY_PROPRIETARY
UnflaggedApi: android.telephony.satellite.SatelliteManager#NT_RADIO_TECHNOLOGY_UNKNOWN:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.NT_RADIO_TECHNOLOGY_UNKNOWN
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_ACCESS_BARRED:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_ACCESS_BARRED
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_DATAGRAM_TRANSFER_STATE_IDLE:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_DATAGRAM_TRANSFER_STATE_IDLE
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_DATAGRAM_TRANSFER_STATE_RECEIVE_FAILED:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_DATAGRAM_TRANSFER_STATE_RECEIVE_FAILED
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_DATAGRAM_TRANSFER_STATE_RECEIVE_NONE:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_DATAGRAM_TRANSFER_STATE_RECEIVE_NONE
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_DATAGRAM_TRANSFER_STATE_RECEIVE_SUCCESS:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_DATAGRAM_TRANSFER_STATE_RECEIVE_SUCCESS
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_DATAGRAM_TRANSFER_STATE_RECEIVING:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_DATAGRAM_TRANSFER_STATE_RECEIVING
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_DATAGRAM_TRANSFER_STATE_SENDING:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_DATAGRAM_TRANSFER_STATE_SENDING
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_DATAGRAM_TRANSFER_STATE_SEND_FAILED:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_DATAGRAM_TRANSFER_STATE_SEND_FAILED
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_DATAGRAM_TRANSFER_STATE_SEND_SUCCESS:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_DATAGRAM_TRANSFER_STATE_SEND_SUCCESS
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_DATAGRAM_TRANSFER_STATE_UNKNOWN:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_DATAGRAM_TRANSFER_STATE_UNKNOWN
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_ERROR:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_ERROR
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_ERROR_NONE:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_ERROR_NONE
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_INVALID_ARGUMENTS:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_INVALID_ARGUMENTS
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_INVALID_MODEM_STATE:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_INVALID_MODEM_STATE
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_INVALID_TELEPHONY_STATE:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_INVALID_TELEPHONY_STATE
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_MODEM_BUSY:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_MODEM_BUSY
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_MODEM_ERROR:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_MODEM_ERROR
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_MODEM_STATE_DATAGRAM_RETRYING:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_MODEM_STATE_DATAGRAM_RETRYING
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_MODEM_STATE_DATAGRAM_TRANSFERRING:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_MODEM_STATE_DATAGRAM_TRANSFERRING
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_MODEM_STATE_IDLE:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_MODEM_STATE_IDLE
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_MODEM_STATE_LISTENING:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_MODEM_STATE_LISTENING
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_MODEM_STATE_OFF:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_MODEM_STATE_OFF
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_MODEM_STATE_UNAVAILABLE:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_MODEM_STATE_UNAVAILABLE
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_MODEM_STATE_UNKNOWN:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_MODEM_STATE_UNKNOWN
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_NETWORK_ERROR:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_NETWORK_ERROR
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_NETWORK_TIMEOUT:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_NETWORK_TIMEOUT
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_NOT_AUTHORIZED:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_NOT_AUTHORIZED
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_NOT_REACHABLE:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_NOT_REACHABLE
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_NOT_SUPPORTED:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_NOT_SUPPORTED
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_NO_RESOURCES:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_NO_RESOURCES
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_RADIO_NOT_AVAILABLE:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_RADIO_NOT_AVAILABLE
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_REQUEST_ABORTED:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_REQUEST_ABORTED
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_REQUEST_FAILED:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_REQUEST_FAILED
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_REQUEST_IN_PROGRESS:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_REQUEST_IN_PROGRESS
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_REQUEST_NOT_SUPPORTED:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_REQUEST_NOT_SUPPORTED
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_RESULT_ACCESS_BARRED:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_RESULT_ACCESS_BARRED
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_RESULT_ERROR:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_RESULT_ERROR
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_RESULT_INVALID_ARGUMENTS:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_RESULT_INVALID_ARGUMENTS
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_RESULT_INVALID_MODEM_STATE:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_RESULT_INVALID_MODEM_STATE
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_RESULT_INVALID_TELEPHONY_STATE:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_RESULT_INVALID_TELEPHONY_STATE
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_RESULT_MODEM_BUSY:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_RESULT_MODEM_BUSY
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_RESULT_MODEM_ERROR:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_RESULT_MODEM_ERROR
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_RESULT_NETWORK_ERROR:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_RESULT_NETWORK_ERROR
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_RESULT_NETWORK_TIMEOUT:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_RESULT_NETWORK_TIMEOUT
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_RESULT_NOT_AUTHORIZED:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_RESULT_NOT_AUTHORIZED
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_RESULT_NOT_REACHABLE:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_RESULT_NOT_REACHABLE
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_RESULT_NOT_SUPPORTED:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_RESULT_NOT_SUPPORTED
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_RESULT_NO_RESOURCES:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_RESULT_NO_RESOURCES
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_RESULT_RADIO_NOT_AVAILABLE:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_RESULT_RADIO_NOT_AVAILABLE
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_RESULT_REQUEST_ABORTED:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_RESULT_REQUEST_ABORTED
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_RESULT_REQUEST_FAILED:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_RESULT_REQUEST_FAILED
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_RESULT_REQUEST_IN_PROGRESS:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_RESULT_REQUEST_IN_PROGRESS
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_RESULT_REQUEST_NOT_SUPPORTED:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_RESULT_REQUEST_NOT_SUPPORTED
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_RESULT_SERVER_ERROR:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_RESULT_SERVER_ERROR
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_RESULT_SERVICE_ERROR:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_RESULT_SERVICE_ERROR
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_RESULT_SERVICE_NOT_PROVISIONED:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_RESULT_SERVICE_NOT_PROVISIONED
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_RESULT_SERVICE_PROVISION_IN_PROGRESS:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_RESULT_SERVICE_PROVISION_IN_PROGRESS
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_RESULT_SUCCESS:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_RESULT_SUCCESS
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_SERVER_ERROR:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_SERVER_ERROR
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_SERVICE_ERROR:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_SERVICE_ERROR
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_SERVICE_NOT_PROVISIONED:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_SERVICE_NOT_PROVISIONED
UnflaggedApi: android.telephony.satellite.SatelliteManager#SATELLITE_SERVICE_PROVISION_IN_PROGRESS:
    New API must be flagged with @FlaggedApi: field android.telephony.satellite.SatelliteManager.SATELLITE_SERVICE_PROVISION_IN_PROGRESS
UnflaggedApi: android.telephony.satellite.SatelliteManager#deprovisionSatelliteService(String, java.util.concurrent.Executor, java.util.function.Consumer<java.lang.Integer>):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteManager.deprovisionSatelliteService(String,java.util.concurrent.Executor,java.util.function.Consumer<java.lang.Integer>)
UnflaggedApi: android.telephony.satellite.SatelliteManager#pollPendingSatelliteDatagrams(java.util.concurrent.Executor, java.util.function.Consumer<java.lang.Integer>):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteManager.pollPendingSatelliteDatagrams(java.util.concurrent.Executor,java.util.function.Consumer<java.lang.Integer>)
UnflaggedApi: android.telephony.satellite.SatelliteManager#provisionSatelliteService(String, byte[], android.os.CancellationSignal, java.util.concurrent.Executor, java.util.function.Consumer<java.lang.Integer>):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteManager.provisionSatelliteService(String,byte[],android.os.CancellationSignal,java.util.concurrent.Executor,java.util.function.Consumer<java.lang.Integer>)
UnflaggedApi: android.telephony.satellite.SatelliteManager#registerForSatelliteDatagram(java.util.concurrent.Executor, android.telephony.satellite.SatelliteDatagramCallback):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteManager.registerForSatelliteDatagram(java.util.concurrent.Executor,android.telephony.satellite.SatelliteDatagramCallback)
UnflaggedApi: android.telephony.satellite.SatelliteManager#registerForSatelliteModemStateChanged(java.util.concurrent.Executor, android.telephony.satellite.SatelliteStateCallback):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteManager.registerForSatelliteModemStateChanged(java.util.concurrent.Executor,android.telephony.satellite.SatelliteStateCallback)
UnflaggedApi: android.telephony.satellite.SatelliteManager#registerForSatelliteProvisionStateChanged(java.util.concurrent.Executor, android.telephony.satellite.SatelliteProvisionStateCallback):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteManager.registerForSatelliteProvisionStateChanged(java.util.concurrent.Executor,android.telephony.satellite.SatelliteProvisionStateCallback)
UnflaggedApi: android.telephony.satellite.SatelliteManager#requestIsDemoModeEnabled(java.util.concurrent.Executor, android.os.OutcomeReceiver<java.lang.Boolean,android.telephony.satellite.SatelliteManager.SatelliteException>):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteManager.requestIsDemoModeEnabled(java.util.concurrent.Executor,android.os.OutcomeReceiver<java.lang.Boolean,android.telephony.satellite.SatelliteManager.SatelliteException>)
UnflaggedApi: android.telephony.satellite.SatelliteManager#requestIsSatelliteCommunicationAllowedForCurrentLocation(java.util.concurrent.Executor, android.os.OutcomeReceiver<java.lang.Boolean,android.telephony.satellite.SatelliteManager.SatelliteException>):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteManager.requestIsSatelliteCommunicationAllowedForCurrentLocation(java.util.concurrent.Executor,android.os.OutcomeReceiver<java.lang.Boolean,android.telephony.satellite.SatelliteManager.SatelliteException>)
UnflaggedApi: android.telephony.satellite.SatelliteManager#requestIsSatelliteEnabled(java.util.concurrent.Executor, android.os.OutcomeReceiver<java.lang.Boolean,android.telephony.satellite.SatelliteManager.SatelliteException>):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteManager.requestIsSatelliteEnabled(java.util.concurrent.Executor,android.os.OutcomeReceiver<java.lang.Boolean,android.telephony.satellite.SatelliteManager.SatelliteException>)
UnflaggedApi: android.telephony.satellite.SatelliteManager#requestIsSatelliteProvisioned(java.util.concurrent.Executor, android.os.OutcomeReceiver<java.lang.Boolean,android.telephony.satellite.SatelliteManager.SatelliteException>):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteManager.requestIsSatelliteProvisioned(java.util.concurrent.Executor,android.os.OutcomeReceiver<java.lang.Boolean,android.telephony.satellite.SatelliteManager.SatelliteException>)
UnflaggedApi: android.telephony.satellite.SatelliteManager#requestIsSatelliteSupported(java.util.concurrent.Executor, android.os.OutcomeReceiver<java.lang.Boolean,android.telephony.satellite.SatelliteManager.SatelliteException>):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteManager.requestIsSatelliteSupported(java.util.concurrent.Executor,android.os.OutcomeReceiver<java.lang.Boolean,android.telephony.satellite.SatelliteManager.SatelliteException>)
UnflaggedApi: android.telephony.satellite.SatelliteManager#requestSatelliteCapabilities(java.util.concurrent.Executor, android.os.OutcomeReceiver<android.telephony.satellite.SatelliteCapabilities,android.telephony.satellite.SatelliteManager.SatelliteException>):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteManager.requestSatelliteCapabilities(java.util.concurrent.Executor,android.os.OutcomeReceiver<android.telephony.satellite.SatelliteCapabilities,android.telephony.satellite.SatelliteManager.SatelliteException>)
UnflaggedApi: android.telephony.satellite.SatelliteManager#requestSatelliteEnabled(boolean, boolean, java.util.concurrent.Executor, java.util.function.Consumer<java.lang.Integer>):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteManager.requestSatelliteEnabled(boolean,boolean,java.util.concurrent.Executor,java.util.function.Consumer<java.lang.Integer>)
UnflaggedApi: android.telephony.satellite.SatelliteManager#requestTimeForNextSatelliteVisibility(java.util.concurrent.Executor, android.os.OutcomeReceiver<java.time.Duration,android.telephony.satellite.SatelliteManager.SatelliteException>):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteManager.requestTimeForNextSatelliteVisibility(java.util.concurrent.Executor,android.os.OutcomeReceiver<java.time.Duration,android.telephony.satellite.SatelliteManager.SatelliteException>)
UnflaggedApi: android.telephony.satellite.SatelliteManager#sendSatelliteDatagram(int, android.telephony.satellite.SatelliteDatagram, boolean, java.util.concurrent.Executor, java.util.function.Consumer<java.lang.Integer>):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteManager.sendSatelliteDatagram(int,android.telephony.satellite.SatelliteDatagram,boolean,java.util.concurrent.Executor,java.util.function.Consumer<java.lang.Integer>)
UnflaggedApi: android.telephony.satellite.SatelliteManager#setDeviceAlignedWithSatellite(boolean):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteManager.setDeviceAlignedWithSatellite(boolean)
UnflaggedApi: android.telephony.satellite.SatelliteManager#startSatelliteTransmissionUpdates(java.util.concurrent.Executor, java.util.function.Consumer<java.lang.Integer>, android.telephony.satellite.SatelliteTransmissionUpdateCallback):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteManager.startSatelliteTransmissionUpdates(java.util.concurrent.Executor,java.util.function.Consumer<java.lang.Integer>,android.telephony.satellite.SatelliteTransmissionUpdateCallback)
UnflaggedApi: android.telephony.satellite.SatelliteManager#stopSatelliteTransmissionUpdates(android.telephony.satellite.SatelliteTransmissionUpdateCallback, java.util.concurrent.Executor, java.util.function.Consumer<java.lang.Integer>):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteManager.stopSatelliteTransmissionUpdates(android.telephony.satellite.SatelliteTransmissionUpdateCallback,java.util.concurrent.Executor,java.util.function.Consumer<java.lang.Integer>)
UnflaggedApi: android.telephony.satellite.SatelliteManager#unregisterForSatelliteDatagram(android.telephony.satellite.SatelliteDatagramCallback):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteManager.unregisterForSatelliteDatagram(android.telephony.satellite.SatelliteDatagramCallback)
UnflaggedApi: android.telephony.satellite.SatelliteManager#unregisterForSatelliteModemStateChanged(android.telephony.satellite.SatelliteStateCallback):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteManager.unregisterForSatelliteModemStateChanged(android.telephony.satellite.SatelliteStateCallback)
UnflaggedApi: android.telephony.satellite.SatelliteManager#unregisterForSatelliteProvisionStateChanged(android.telephony.satellite.SatelliteProvisionStateCallback):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteManager.unregisterForSatelliteProvisionStateChanged(android.telephony.satellite.SatelliteProvisionStateCallback)
UnflaggedApi: android.telephony.satellite.SatelliteManager.SatelliteException:
    New API must be flagged with @FlaggedApi: class android.telephony.satellite.SatelliteManager.SatelliteException
UnflaggedApi: android.telephony.satellite.SatelliteManager.SatelliteException#SatelliteException(int):
    New API must be flagged with @FlaggedApi: constructor android.telephony.satellite.SatelliteManager.SatelliteException(int)
UnflaggedApi: android.telephony.satellite.SatelliteManager.SatelliteException#getErrorCode():
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteManager.SatelliteException.getErrorCode()
UnflaggedApi: android.telephony.satellite.SatelliteProvisionStateCallback:
    New API must be flagged with @FlaggedApi: class android.telephony.satellite.SatelliteProvisionStateCallback
UnflaggedApi: android.telephony.satellite.SatelliteProvisionStateCallback#onSatelliteProvisionStateChanged(boolean):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteProvisionStateCallback.onSatelliteProvisionStateChanged(boolean)
UnflaggedApi: android.telephony.satellite.SatelliteStateCallback:
    New API must be flagged with @FlaggedApi: class android.telephony.satellite.SatelliteStateCallback
UnflaggedApi: android.telephony.satellite.SatelliteStateCallback#onSatelliteModemStateChanged(int):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteStateCallback.onSatelliteModemStateChanged(int)
UnflaggedApi: android.telephony.satellite.SatelliteTransmissionUpdateCallback:
    New API must be flagged with @FlaggedApi: class android.telephony.satellite.SatelliteTransmissionUpdateCallback
UnflaggedApi: android.telephony.satellite.SatelliteTransmissionUpdateCallback#onReceiveDatagramStateChanged(int, int, int):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteTransmissionUpdateCallback.onReceiveDatagramStateChanged(int,int,int)
UnflaggedApi: android.telephony.satellite.SatelliteTransmissionUpdateCallback#onSatellitePositionChanged(android.telephony.satellite.PointingInfo):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteTransmissionUpdateCallback.onSatellitePositionChanged(android.telephony.satellite.PointingInfo)
UnflaggedApi: android.telephony.satellite.SatelliteTransmissionUpdateCallback#onSendDatagramStateChanged(int, int, int):
    New API must be flagged with @FlaggedApi: method android.telephony.satellite.SatelliteTransmissionUpdateCallback.onSendDatagramStateChanged(int,int,int)
UnflaggedApi: android.text.FontConfig#equals(Object):
    New API must be flagged with @FlaggedApi: method android.text.FontConfig.equals(Object)
UnflaggedApi: android.text.FontConfig#hashCode():
    New API must be flagged with @FlaggedApi: method android.text.FontConfig.hashCode()
UnflaggedApi: android.text.FontConfig#toString():
    New API must be flagged with @FlaggedApi: method android.text.FontConfig.toString()
UnflaggedApi: android.text.FontConfig.Alias#equals(Object):
    New API must be flagged with @FlaggedApi: method android.text.FontConfig.Alias.equals(Object)
UnflaggedApi: android.text.FontConfig.Alias#hashCode():
    New API must be flagged with @FlaggedApi: method android.text.FontConfig.Alias.hashCode()
UnflaggedApi: android.text.FontConfig.Alias#toString():
    New API must be flagged with @FlaggedApi: method android.text.FontConfig.Alias.toString()
UnflaggedApi: android.text.FontConfig.Font#equals(Object):
    New API must be flagged with @FlaggedApi: method android.text.FontConfig.Font.equals(Object)
UnflaggedApi: android.text.FontConfig.Font#hashCode():
    New API must be flagged with @FlaggedApi: method android.text.FontConfig.Font.hashCode()
UnflaggedApi: android.text.FontConfig.Font#toString():
    New API must be flagged with @FlaggedApi: method android.text.FontConfig.Font.toString()
UnflaggedApi: android.text.FontConfig.FontFamily#equals(Object):
    New API must be flagged with @FlaggedApi: method android.text.FontConfig.FontFamily.equals(Object)
UnflaggedApi: android.text.FontConfig.FontFamily#hashCode():
    New API must be flagged with @FlaggedApi: method android.text.FontConfig.FontFamily.hashCode()
UnflaggedApi: android.text.FontConfig.FontFamily#toString():
    New API must be flagged with @FlaggedApi: method android.text.FontConfig.FontFamily.toString()
UnflaggedApi: android.text.FontConfig.NamedFamilyList#equals(Object):
    New API must be flagged with @FlaggedApi: method android.text.FontConfig.NamedFamilyList.equals(Object)
UnflaggedApi: android.text.FontConfig.NamedFamilyList#hashCode():
    New API must be flagged with @FlaggedApi: method android.text.FontConfig.NamedFamilyList.hashCode()
UnflaggedApi: android.text.FontConfig.NamedFamilyList#toString():
    New API must be flagged with @FlaggedApi: method android.text.FontConfig.NamedFamilyList.toString()
UnflaggedApi: android.view.contentcapture.ContentCaptureEvent#toString():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ContentCaptureEvent.toString()
UnflaggedApi: android.view.contentcapture.ViewNode#getAutofillHints():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getAutofillHints()
UnflaggedApi: android.view.contentcapture.ViewNode#getAutofillId():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getAutofillId()
UnflaggedApi: android.view.contentcapture.ViewNode#getAutofillOptions():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getAutofillOptions()
UnflaggedApi: android.view.contentcapture.ViewNode#getAutofillType():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getAutofillType()
UnflaggedApi: android.view.contentcapture.ViewNode#getAutofillValue():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getAutofillValue()
UnflaggedApi: android.view.contentcapture.ViewNode#getClassName():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getClassName()
UnflaggedApi: android.view.contentcapture.ViewNode#getContentDescription():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getContentDescription()
UnflaggedApi: android.view.contentcapture.ViewNode#getExtras():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getExtras()
UnflaggedApi: android.view.contentcapture.ViewNode#getHeight():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getHeight()
UnflaggedApi: android.view.contentcapture.ViewNode#getHint():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getHint()
UnflaggedApi: android.view.contentcapture.ViewNode#getHintIdEntry():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getHintIdEntry()
UnflaggedApi: android.view.contentcapture.ViewNode#getId():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getId()
UnflaggedApi: android.view.contentcapture.ViewNode#getIdEntry():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getIdEntry()
UnflaggedApi: android.view.contentcapture.ViewNode#getIdPackage():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getIdPackage()
UnflaggedApi: android.view.contentcapture.ViewNode#getIdType():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getIdType()
UnflaggedApi: android.view.contentcapture.ViewNode#getInputType():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getInputType()
UnflaggedApi: android.view.contentcapture.ViewNode#getLeft():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getLeft()
UnflaggedApi: android.view.contentcapture.ViewNode#getLocaleList():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getLocaleList()
UnflaggedApi: android.view.contentcapture.ViewNode#getMaxTextEms():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getMaxTextEms()
UnflaggedApi: android.view.contentcapture.ViewNode#getMaxTextLength():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getMaxTextLength()
UnflaggedApi: android.view.contentcapture.ViewNode#getMinTextEms():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getMinTextEms()
UnflaggedApi: android.view.contentcapture.ViewNode#getReceiveContentMimeTypes():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getReceiveContentMimeTypes()
UnflaggedApi: android.view.contentcapture.ViewNode#getScrollX():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getScrollX()
UnflaggedApi: android.view.contentcapture.ViewNode#getScrollY():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getScrollY()
UnflaggedApi: android.view.contentcapture.ViewNode#getText():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getText()
UnflaggedApi: android.view.contentcapture.ViewNode#getTextBackgroundColor():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getTextBackgroundColor()
UnflaggedApi: android.view.contentcapture.ViewNode#getTextColor():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getTextColor()
UnflaggedApi: android.view.contentcapture.ViewNode#getTextIdEntry():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getTextIdEntry()
UnflaggedApi: android.view.contentcapture.ViewNode#getTextLineBaselines():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getTextLineBaselines()
UnflaggedApi: android.view.contentcapture.ViewNode#getTextLineCharOffsets():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getTextLineCharOffsets()
UnflaggedApi: android.view.contentcapture.ViewNode#getTextSelectionEnd():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getTextSelectionEnd()
UnflaggedApi: android.view.contentcapture.ViewNode#getTextSelectionStart():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getTextSelectionStart()
UnflaggedApi: android.view.contentcapture.ViewNode#getTextSize():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getTextSize()
UnflaggedApi: android.view.contentcapture.ViewNode#getTextStyle():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getTextStyle()
UnflaggedApi: android.view.contentcapture.ViewNode#getTop():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getTop()
UnflaggedApi: android.view.contentcapture.ViewNode#getVisibility():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getVisibility()
UnflaggedApi: android.view.contentcapture.ViewNode#getWidth():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.getWidth()
UnflaggedApi: android.view.contentcapture.ViewNode#isAccessibilityFocused():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.isAccessibilityFocused()
UnflaggedApi: android.view.contentcapture.ViewNode#isActivated():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.isActivated()
UnflaggedApi: android.view.contentcapture.ViewNode#isAssistBlocked():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.isAssistBlocked()
UnflaggedApi: android.view.contentcapture.ViewNode#isCheckable():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.isCheckable()
UnflaggedApi: android.view.contentcapture.ViewNode#isChecked():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.isChecked()
UnflaggedApi: android.view.contentcapture.ViewNode#isClickable():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.isClickable()
UnflaggedApi: android.view.contentcapture.ViewNode#isContextClickable():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.isContextClickable()
UnflaggedApi: android.view.contentcapture.ViewNode#isEnabled():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.isEnabled()
UnflaggedApi: android.view.contentcapture.ViewNode#isFocusable():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.isFocusable()
UnflaggedApi: android.view.contentcapture.ViewNode#isFocused():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.isFocused()
UnflaggedApi: android.view.contentcapture.ViewNode#isLongClickable():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.isLongClickable()
UnflaggedApi: android.view.contentcapture.ViewNode#isOpaque():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.isOpaque()
UnflaggedApi: android.view.contentcapture.ViewNode#isSelected():
    New API must be flagged with @FlaggedApi: method android.view.contentcapture.ViewNode.isSelected()
UnflaggedApi: android.view.translation.UiTranslationSpec#equals(Object):
    New API must be flagged with @FlaggedApi: method android.view.translation.UiTranslationSpec.equals(Object)
UnflaggedApi: android.view.translation.UiTranslationSpec#hashCode():
    New API must be flagged with @FlaggedApi: method android.view.translation.UiTranslationSpec.hashCode()
UnflaggedApi: android.view.translation.UiTranslationSpec#toString():
    New API must be flagged with @FlaggedApi: method android.view.translation.UiTranslationSpec.toString()
